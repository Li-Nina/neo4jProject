测试地址：http://47.52.133.109:4000/algo/ratioAlgorithm/calculate

一、请求
需要2个参数：
    1、(必有)file文件，excel模板，表单name=file
    2、(可选)POST传参，参数名data，格式json，json包含5个key，格式如下
    {"top_n": 2, "steps": [0.1, 0.01], "custom_weights_list": [{"tfe": 1}, {"al2o3": 1}, {"tfe": 1, "Al2O3": 1}], "subjective_grain_size": 1, "var_group": 0}

名词解释：
    目标：需要计算的优化目标，如铁最优、硅最优、综合最优
    步长：同一个目标下，计算得到的多个结果之间的差异程度。步长越小，结果间的差异越小。

data参数解释：
    top_n:每个目标的每个步长返回多少条记录。不传默认=5
    steps:步长；不传默认为[0.1, 0.01, 0.001, 0.0001]，即4个步长。建议传2个步长，避免返回结果太多。
    custom_weights_list：需要计算的优化目标。key=目标，value=权重。比如{"tfe": 1, "al2o3": 3}代表目标为tfe和al2o3的综合最优，权重为1:3
                         不传默认计算所有目标，即下面6个目标和6个目标的综合最优，综合的权重为1:1:1:1:1:1
        cost：价格最优；
        tfe：铁最优；
        al2o3：铝最优；
        sio2：硅最优；
        ss：烧损最优；
        r:碱度最优；
    subjective_grain_size:是否需要计算粘附比；value=1计算，value=0不计算。不传默认value=1计算
    var_group：配料之间是否有分组计算；value=1计算，value=0不计算。不传默认value=1计算


二、返回
返回格式为json，格式如下：
[{
    "type": 0,                                  # type=0单目标优化，type=1多目标综合优化
    "obj": ["tfe"],                             # 优化目标list，如铁优化为["tfe"]，铁和铝综合优化为["tfe","al2o3"]
    "weight": [1],                              # 优化目标之间的权重，这里的权重和传入的权重不同，后台会根据传入的权重重新计算出新的权重
    "name": ["巴西粗粉", "高品澳粉", "高返"],     # 配比结果对应的原料名称
    "data": [{                                  # data jsonList<json>, 计算结果，其中每一个json为一个步长下的top_n个结果
        "step": 0.1,                            # step 步长
        "result": [                             # result list<list>, 该step下的多个比例结果
            [1, 2, 3],
            [4, 5, 6],
            [7, 8, 9]
        ]
    }, {
        "step": 0.01,
        "result": [
            [1, 2, 3],
            [4, 5, 6],
            [7, 8, 9]
        ]
    }, {
        "step": 0.001,
        "result": [
            [1, 2, 3],
            [4, 5, 6],
            [7, 8, 9]
        ]
    }]
}, {
    "type": 1,
    "obj": ["tfe", "al2o3", "ss"],
    "weight": [1, 1, 1],
    "name": ["巴西粗粉", "高品澳粉", "高返"],
    "data": [{
        "step": 0.1,
        "result": [
            [1, 2, 3],
            [4, 5, 6],
            [7, 8, 9]
        ]
    }, {
        "step": 0.01,
        "result": [
            [1, 2, 3],
            [4, 5, 6],
            [7, 8, 9]
        ]
    }, {
        "step": 0.001,
        "result": [
            [1, 2, 3],
            [4, 5, 6],
            [7, 8, 9]
        ]
    }]
}]