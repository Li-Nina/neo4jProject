2018-12-05 12:04:52,855 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 462.58579900551536), (1, 1, 1)]
2018-12-05 12:04:52,855 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.681366649542781, 'sio2': 91.33144946306368, 'cost': 0.9871838873935551}
2018-12-05 12:04:53,891 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [8.0, 15.0, 12.5228, 8.410955, 12.38867, 40.0, 0.6015498, 2.504559, 0.5714713]
2018-12-05 12:04:53,891 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['巴西粗粉=[8.0]', '高品澳粉=[15.0]', '高返=[12.5228]', '过筛镍矿=[8.410955]', '塞拉利昂粉=[12.38867]', 'FMG低品澳粉=[40.0]', '铁泥=[0.6015498]', '干渣粉=[2.504559]', '重力除尘灰=[0.5714713]']
2018-12-05 12:04:53,893 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [56.17565633128305, 5.199951920097999, 2.6982416318639566, 0.7128133123365088, 3.000000273920421, 0.048518530915677816, 0.06764917045197939, 0.1319273653048831]
2018-12-05 12:04:53,893 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=447.75303320145434, wet_price=492.506582248679, obj_price=530.7026698741009)
2018-12-05 12:05:21,900 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 462.58579900551536), (1, 1, 1)]
2018-12-05 12:05:21,900 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.681366649542781, 'sio2': 91.33144946306368, 'cost': 0.9871838873935551}
2018-12-05 12:05:22,295 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [8.0, 15.0, 12.5228, 8.410955, 12.38867, 40.0, 0.6015498, 2.504559, 0.5714713]
2018-12-05 12:05:22,296 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['巴西粗粉=[8.0]', '高品澳粉=[15.0]', '高返=[12.5228]', '过筛镍矿=[8.410955]', '塞拉利昂粉=[12.38867]', 'FMG低品澳粉=[40.0]', '铁泥=[0.6015498]', '干渣粉=[2.504559]', '重力除尘灰=[0.5714713]']
2018-12-05 12:05:22,298 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [56.17565633128305, 5.199951920097999, 2.6982416318639566, 0.7128133123365088, 3.000000273920421, 0.048518530915677816, 0.06764917045197939, 0.1319273653048831]
2018-12-05 12:05:22,298 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=447.75303320145434, wet_price=492.506582248679, obj_price=530.7026698741009)
2018-12-05 12:41:56,691 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 462.58579900551536), (1, 1, 1)]
2018-12-05 12:41:56,691 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.681366649542781, 'sio2': 91.33144946306368, 'cost': 0.9871838873935551}
2018-12-05 12:50:27,195 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 462.58579900551536), (1, 1, 1)]
2018-12-05 12:50:27,195 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.681366649542781, 'sio2': 91.33144946306368, 'cost': 0.9871838873935551}
2018-12-05 12:50:27,432 __main__ mainTask ERROR = <traceback object at 0x09359F08>
2018-12-05 12:51:03,258 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 462.58579900551536), (1, 1, 1)]
2018-12-05 12:51:03,258 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.681366649542781, 'sio2': 91.33144946306368, 'cost': 0.9871838873935551}
2018-12-05 12:51:03,576 __main__ mainTask ERROR =  @error: Solution Not Found

2018-12-05 12:53:19,424 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 462.58579900551536), (1, 1, 1)]
2018-12-05 12:53:19,424 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.681366649542781, 'sio2': 91.33144946306368, 'cost': 0.9871838873935551}
2018-12-05 12:53:19,672 __main__ mainTask ERROR = Traceback (most recent call last):
  File "C:/Users/sun/PycharmProjects/optimizationproblem/gekkoSolution/mainTask.py", line 37, in <module>
    lp.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\gekkoSolution\gekkoProblem.py", line 46, in solve
    self.prob.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\gekko\gekko.py", line 682, in solve
    raise Exception(apm_error)
Exception:  @error: Solution Not Found


2018-12-05 12:54:48,995 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 462.58579900551536), (1, 1, 1)]
2018-12-05 12:54:48,995 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.681366649542781, 'sio2': 91.33144946306368, 'cost': 0.9871838873935551}
2018-12-05 12:54:49,233 __main__ mainTask ERROR = Traceback (most recent call last):
  File "C:/Users/sun/PycharmProjects/optimizationproblem/gekkoSolution/mainTask.py", line 37, in <module>
    lp.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\gekkoSolution\gekkoProblem.py", line 46, in solve
    self.prob.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\gekko\gekko.py", line 682, in solve
    raise Exception(apm_error)
Exception:  @error: Solution Not Found


2018-12-05 12:56:32,913 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 462.58579900551536), (1, 1, 1)]
2018-12-05 12:56:32,913 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.681366649542781, 'sio2': 91.33144946306368, 'cost': 0.9871838873935551}
2018-12-05 12:56:33,196 __main__ mainTask ERROR = Exception(' @error: Solution Not Found\n')
2018-12-05 12:56:33,197 __main__ mainTask ERROR = Traceback (most recent call last):
  File "C:/Users/sun/PycharmProjects/optimizationproblem/gekkoSolution/mainTask.py", line 37, in <module>
    lp.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\gekkoSolution\gekkoProblem.py", line 46, in solve
    self.prob.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\gekko\gekko.py", line 682, in solve
    raise Exception(apm_error)
Exception:  @error: Solution Not Found


2018-12-05 13:12:27,442 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 462.58579900551536), (1, 1, 1)]
2018-12-05 13:12:27,442 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.681366649542781, 'sio2': 91.33144946306368, 'cost': 0.9871838873935551}
2018-12-05 13:12:27,847 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [8.0, 15.0, 12.5228, 8.410955, 12.38867, 40.0, 0.6015498, 2.504559, 0.5714713]
2018-12-05 13:12:27,847 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['巴西粗粉=[8.0]', '高品澳粉=[15.0]', '高返=[12.5228]', '过筛镍矿=[8.410955]', '塞拉利昂粉=[12.38867]', 'FMG低品澳粉=[40.0]', '铁泥=[0.6015498]', '干渣粉=[2.504559]', '重力除尘灰=[0.5714713]']
2018-12-05 13:12:27,849 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [56.17565633128305, 5.199951920097999, 2.6982416318639566, 0.7128133123365088, 3.000000273920421, 0.048518530915677816, 0.06764917045197939, 0.1319273653048831]
2018-12-05 13:12:27,849 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=447.75303320145434, wet_price=492.506582248679, obj_price=530.7026698741009)
2018-12-05 14:25:18,232 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 462.58579900551536), (1, 1, 1)]
2018-12-05 14:25:18,232 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.681366649542781, 'sio2': 91.33144946306368, 'cost': 0.9871838873935551}
2018-12-05 14:25:19,253 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [8.0, 15.0, 12.5228, 8.410955, 12.38867, 40.0, 0.6015498, 2.504559, 0.5714713]
2018-12-05 14:25:19,253 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['巴西粗粉=[8.0]', '高品澳粉=[15.0]', '高返=[12.5228]', '过筛镍矿=[8.410955]', '塞拉利昂粉=[12.38867]', 'FMG低品澳粉=[40.0]', '铁泥=[0.6015498]', '干渣粉=[2.504559]', '重力除尘灰=[0.5714713]']
2018-12-05 14:25:19,255 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [56.17565633128305, 5.199951920097999, 2.6982416318639566, 0.7128133123365088, 3.000000273920421, 0.048518530915677816, 0.06764917045197939, 0.1319273653048831]
2018-12-05 14:25:19,256 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=447.75303320145434, wet_price=492.506582248679, obj_price=530.7026698741009)
2018-12-05 14:25:19,779 __main__ mainTask ERROR = Traceback (most recent call last):
  File "C:/Users/sun/PycharmProjects/optimizationproblem/gekkoSolution/mainTask.py", line 42, in <module>
    lp.write_to_excel()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\gekkoSolution\gekkoProblem.py", line 90, in write_to_excel
    self.data.write_to_excel(excel_file, prices)
  File "C:\Users\sun\PycharmProjects\optimizationproblem\utils\excelParse.py", line 136, in write_to_excel
    writer.save()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\pandas\io\excel.py", line 1732, in save
    return self.book.close()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\xlsxwriter\workbook.py", line 306, in close
    self._store_workbook()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\xlsxwriter\workbook.py", line 655, in _store_workbook
    allowZip64=self.allow_zip64)
  File "C:\Users\sun\AppData\Local\Programs\Python\Python37-32\lib\zipfile.py", line 1182, in __init__
    self.fp = io.open(file, filemode)
PermissionError: [Errno 13] Permission denied: '../data/result.xlsx'

2018-12-05 14:37:51,702 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 680.8815963996892), (1, 1, 1)]
2018-12-05 14:37:51,702 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.7057552595311165, 'sio2': 91.62143003582499, 'cost': 0.6728147046439013}
2018-12-05 14:37:52,089 __main__ mainTask ERROR = Traceback (most recent call last):
  File "C:/Users/sun/PycharmProjects/optimizationproblem/gekkoSolution/mainTask.py", line 37, in <module>
    lp.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\gekkoSolution\gekkoProblem.py", line 46, in solve
    self.prob.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\gekko\gekko.py", line 682, in solve
    raise Exception(apm_error)
Exception:  @error: Max Equation Length
 Error with line number:  134
 minimize(((0+((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((((910.99486005)*(v1)))*(1.0)))/(100)))+((((((853.351)*(v2)))*(1.0)))/(100)))+((((((1039.8935286)*(v3)))*(1.0)))/(100)))+((((((770.6612881)*(v4)))*(1.0)))/(100)))+((((((500)*(v5)))*(1.0)))/(100)))+((((((500)*(v6)))*(1.0)))/(100)))+((((((826.195501934952)*(v7)))*(1.0)))/(100)))+((((((989.88716)*(v8)))*(1.0)))/(100)))+((((((1130.5194048)*(v9)))*(1.0)))/(100)))+((((((500)*(v10)))*(1.0)))/(100)))+((((((300)*(v11)))*(1.0)))/(100)))+((((((1069.8162944)*(v12)))*(1.0)))/(100)))+((((((1245.56)*(v13)))*(1.0)))/(100)))+((((((500)*(v14)))*(1.0)))/(100)))+((((((825.711413030191)*(v15)))*(1.0)))/(100)))+((((((1004.658478)*(v16)))*(1.0)))/(100)))+((((((1129.8570048)*(v17)))*(1.0)))/(100)))+((((((300)*(v18)))*(1.0)))/(100)))+((((((801.67994)*(v19)))*(1.0)))/(100)))+((((((834.2588482)*(v20)))*(1.0)))/(100)))+((((((991.6951428)*(v21)))*(1.0)))/(100)))+((((((500)*(v22)))*(1.0)))/(100)))+((((((886.96504)*(v23)))*(1.0)))/(100)))+((((((1049.00673)*(v24)))*(1.0)))/(100)))+((((((1059.7526526)*(v25)))*(1.0)))/(100)))+((((((1097.7898072)*(v26)))*(1.0)))/(100)))+((((((500)*(v27)))*(1.0)))/(100)))+((((((825.711413030191)*(v28)))*(1.0)))/(100)))+((((((1004.658478)*(v29)))*(1.0)))/(100)))+((((((1241.92)*(v30)))*(1.0)))/(100)))+((((((941.547504)*(v31)))*(1.0)))/(100)))+((((((826.7537594)*(v32)))*(1.0)))/(100)))+((((((300)*(v33)))*(1.0)))/(100)))+((((((775.7532696)*(v34)))*(1.0)))/(100)))+((((((500)*(v35)))*(1.0)))/(100)))+((((((944.28)*(v36)))*(1.0)))/(100)))+((((((612.08)*(v37)))*(1.0)))/(100)))+((((((500)*(v38)))*(1.0)))/(100)))+((((((473.38)*(v39)))*(1.0)))/(100)))+((((((925.96)*(v40)))*(1.0)))/(100)))+((((((484.27)*(v41)))*(1.0)))/(100)))+((((((780.55)*(v42)))*(1.0)))/(100)))+((((((434.35)*(v43)))*(1.0)))/(100)))+((((((1228.65)*(v44)))*(1.0)))/(100)))+((((((300)*(v45)))*(1.0)))/(100)))+((((((500)*(v46)))*(1.0)))/(100)))+((((((964.82)*(v47)))*(1.0)))/(100)))+((((((586.286222115809)*(v48)))*(1.0)))/(100)))+((((((500)*(v49)))*(1.0)))/(100)))+((((((408.863293435074)*(v50)))*(1.0)))/(100)))+((((((925.96)*(v51)))*(1.0)))/(100)))+((((((405.863293435074)*(v52)))*(1.0)))/(100)))+((((((910.96)*(v53)))*(1.0)))/(100)))+((((((450.95)*(v54)))*(1.0)))/(100)))+((((((1242.28973578925)*(v55)))*(1.0)))/(100)))+((((((300)*(v56)))*(1.0)))/(100)))+((((((500)*(v57)))*(1.0)))/(100)))+((((((773.95)*(v58)))*(1.0)))/(100)))+((((((793.97)*(v59)))*(1.0)))/(100)))+((((((500)*(v60)))*(1.0)))/(100)))+((((((634.53)*(v61)))*(1.0)))/(100)))+((((((746.2)*(v62)))*(1.0)))/(100)))+((((((747.1)*(v63)))*(1.0)))/(100)))+((((((800)*(v64)))*(1.0)))/(100)))+((((((500)*(v65)))*(1.0)))/(100)))+((((((100)*(v66)))*(1.0)))/(100)))+((((((500)*(v67)))*(1.0)))/(100)))+((((((773.95)*(v68)))*(1.0)))/(100)))+((((((793.97)*(v69)))*(1.0)))/(100)))+((((((500)*(v70)))*(1.0)))/(100)))+((((((634.53)*(v71)))*(1.0)))/(100)))+((((((746.2)*(v72)))*(1.0)))/(100)))+((((((747.1)*(v73)))*(1.0)))/(100)))+((((((800)*(v74)))*(1.0)))/(100)))+((((((500)*(v75)))*(1.0)))/(100)))+((((((100)*(v76)))*(1.0)))/(100)))+((((((500)*(v77)))*(1.0)))/(100)))+((((((773.95)*(v78)))*(1.0)))/(100)))+((((((793.97)*(v79)))*(1.0)))/(100)))+((((((500)*(v80)))*(1.0)))/(100)))+((((((634.53)*(v81)))*(1.0)))/(100)))+((((((746.2)*(v82)))*(1.0)))/(100)))+((((((747.1)*(v83)))*(1.0)))/(100)))+((((((800)*(v84)))*(1.0)))/(100)))+((((((500)*(v85)))*(1.0)))/(100)))+((((((100)*(v86)))*(1.0)))/(100)))+((((((500)*(v87)))*(1.0)))/(100)))+((((((566.5)*(v88)))*(1.0)))/(100)))+((((((600.5)*(v89)))*(1.0)))/(100)))+((((((500)*(v90)))*(1.0)))/(100)))+((((((431.41)*(v91)))*(1.0)))/(100)))+((((((498.015344202792)*(v92)))*(1.0)))/(100)))+((((((466.846846846847)*(v93)))*(1.0)))/(100)))+((((((500)*(v94)))*(1.0)))/(100)))+((((((100)*(v95)))*(1.0)))/(100)))+((((((500)*(v96)))*(1.0)))/(100))))/((1-((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((v1)*(nan)))/(100)))+((((v2)*(nan)))/(100)))+((((v3)*(nan)))/(100)))+((((v4)*(nan)))/(100)))+((((v5)*(nan)))/(100)))+((((v6)*(nan)))/(100)))+((((v7)*(nan)))/(100)))+((((v8)*(nan)))/(100)))+((((v9)*(nan)))/(100)))+((((v10)*(nan)))/(100)))+((((v11)*(nan)))/(100)))+((((v12)*(nan)))/(100)))+((((v13)*(nan)))/(100)))+((((v14)*(nan)))/(100)))+((((v15)*(nan)))/(100)))+((((v16)*(nan)))/(100)))+((((v17)*(nan)))/(100)))+((((v18)*(nan)))/(100)))+((((v19)*(nan)))/(100)))+((((v20)*(nan)))/(100)))+((((v21)*(nan)))/(100)))+((((v22)*(nan)))/(100)))+((((v23)*(nan)))/(100)))+((((v24)*(nan)))/(100)))+((((v25)*(nan)))/(100)))+((((v26)*(nan)))/(100)))+((((v27)*(nan)))/(100)))+((((v28)*(nan)))/(100)))+((((v29)*(nan)))/(100)))+((((v30)*(nan)))/(100)))+((((v31)*(nan)))/(100)))+((((v32)*(nan)))/(100)))+((((v33)*(nan)))/(100)))+((((v34)*(nan)))/(100)))+((((v35)*(nan)))/(100)))+((((v36)*(nan)))/(100)))+((((v37)*(nan)))/(100)))+((((v38)*(nan)))/(100)))+((((v39)*(nan)))/(100)))+((((v40)*(nan)))/(100)))+((((v41)*(nan)))/(100)))+((((v42)*(nan)))/(100)))+((((v43)*(nan)))/(100)))+((((v44)*(nan)))/(100)))+((((v45)*(nan)))/(100)))+((((v46)*(nan)))/(100)))+((((v47)*(nan)))/(100)))+((((v48)*(nan)))/(100)))+((((v49)*(nan)))/(100)))+((((v50)*(nan)))/(100)))+((((v51)*(nan)))/(100)))+((((v52)*(nan)))/(100)))+((((v53)*(nan)))/(100)))+((((v54)*(nan)))/(100)))+((((v55)*(nan)))/(100)))+((((v56)*(nan)))/(100)))+((((v57)*(nan)))/(100)))+((((v58)*(nan)))/(100)))+((((v59)*(nan)))/(100)))+((((v60)*(nan)))/(100)))+((((v61)*(nan)))/(100)))+((((v62)*(nan)))/(100)))+((((v63)*(nan)))/(100)))+((((v64)*(nan)))/(100)))+((((v65)*(nan)))/(100)))+((((v66)*(nan)))/(100)))+((((v67)*(nan)))/(100)))+((((v68)*(nan)))/(100)))+((((v69)*(nan)))/(100)))+((((v70)*(nan)))/(100)))+((((v71)*(nan)))/(100)))+((((v72)*(nan)))/(100)))+((((v73)*(nan)))/(100)))+((((v74)*(nan)))/(100)))+((((v75)*(nan)))/(100)))+((((v76)*(nan)))/(100)))+((((v77)*(nan)))/(100)))+((((v78)*(nan)))/(100)))+((((v79)*(nan)))/(100)))+((((v80)*(nan)))/(100)))+((((v81)*(nan)))/(100)))+((((v82)*(nan)))/(100)))+((((v83)*(nan)))/(100)))+((((v84)*(nan)))/(100)))+((((v85)*(nan)))/(100)))+((((v86)*(nan)))/(100)))+((((v87)*(nan)))/(100)))+((((v88)*(nan)))/(100)))+((((v89)*(nan)))/(100)))+((((v90)*(nan)))/(100)))+((((v91)*(nan)))/(100)))+((((v92)*(nan)))/(100)))+((((v93)*(nan)))/(100)))+((((v94)*(nan)))/(100)))+((((v95)*(nan)))/(100)))+((((v96)*(nan)))/(100))))/(100))))))/((1-((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((((0)*(v1)))*(1.0)))/(100)))+((((((0)*(v2)))*(1.0)))/(100)))+((((((0)*(v3)))*(1.0)))/(100)))+((((((0)*(v4)))*(1.0)))/(100)))+((((((0)*(v5)))*(1.0)))/(100)))+((((((0)*(v6)))*(1.0)))/(100)))+((((((0)*(v7)))*(1.0)))/(100)))+((((((0)*(v8)))*(1.0)))/(100)))+((((((0)*(v9)))*(1.0)))/(100)))+((((((0)*(v10)))*(1.0)))/(100)))+((((((0)*(v11)))*(1.0)))/(100)))+((((((0)*(v12)))*(1.0)))/(100)))+((((((0)*(v13)))*(1.0)))/(100)))+((((((0)*(v14)))*(1.0)))/(100)))+((((((0)*(v15)))*(1.0)))/(100)))+((((((0)*(v16)))*(1.0)))/(100)))+((((((0)*(v17)))*(1.0)))/(100)))+((((((0)*(v18)))*(1.0)))/(100)))+((((((0)*(v19)))*(1.0)))/(100)))+((((((0)*(v20)))*(1.0)))/(100)))+((((((0)*(v21)))*(1.0)))/(100)))+((((((0)*(v22)))*(1.0)))/(100)))+((((((0)*(v23)))*(1.0)))/(100)))+((((((0)*(v24)))*(1.0)))/(100)))+((((((0)*(v25)))*(1.0)))/(100)))+((((((0)*(v26)))*(1.0)))/(100)))+((((((0)*(v27)))*(1.0)))/(100)))+((((((0)*(v28)))*(1.0)))/(100)))+((((((0)*(v29)))*(1.0)))/(100)))+((((((0)*(v30)))*(1.0)))/(100)))+((((((0)*(v31)))*(1.0)))/(100)))+((((((0)*(v32)))*(1.0)))/(100)))+((((((0)*(v33)))*(1.0)))/(100)))+((((((0)*(v34)))*(1.0)))/(100)))+((((((0)*(v35)))*(1.0)))/(100)))+((((((0)*(v36)))*(1.0)))/(100)))+((((((0)*(v37)))*(1.0)))/(100)))+((((((0)*(v38)))*(1.0)))/(100)))+((((((0)*(v39)))*(1.0)))/(100)))+((((((0)*(v40)))*(1.0)))/(100)))+((((((0)*(v41)))*(1.0)))/(100)))+((((((0)*(v42)))*(1.0)))/(100)))+((((((0)*(v43)))*(1.0)))/(100)))+((((((0)*(v44)))*(1.0)))/(100)))+((((((0)*(v45)))*(1.0)))/(100)))+((((((0)*(v46)))*(1.0)))/(100)))+((((((0)*(v47)))*(1.0)))/(100)))+((((((0)*(v48)))*(1.0)))/(100)))+((((((0)*(v49)))*(1.0)))/(100)))+((((((0)*(v50)))*(1.0)))/(100)))+((((((0)*(v51)))*(1.0)))/(100)))+((((((0)*(v52)))*(1.0)))/(100)))+((((((0)*(v53)))*(1.0)))/(100)))+((((((0)*(v54)))*(1.0)))/(100)))+((((((0)*(v55)))*(1.0)))/(100)))+((((((0)*(v56)))*(1.0)))/(100)))+((((((0)*(v57)))*(1.0)))/(100)))+((((((0)*(v58)))*(1.0)))/(100)))+((((((0)*(v59)))*(1.0)))/(100)))+((((((0)*(v60)))*(1.0)))/(100)))+((((((0)*(v61)))*(1.0)))/(100)))+((((((0)*(v62)))*(1.0)))/(100)))+((((((0)*(v63)))*(1.0)))/(100)))+((((((0)*(v64)))*(1.0)))/(100)))+((((((0)*(v65)))*(1.0)))/(100)))+((((((0)*(v66)))*(1.0)))/(100)))+((((((0)*(v67)))*(1.0)))/(100)))+((((((0)*(v68)))*(1.0)))/(100)))+((((((0)*(v69)))*(1.0)))/(100)))+((((((0)*(v70)))*(1.0)))/(100)))+((((((0)*(v71)))*(1.0)))/(100)))+((((((0)*(v72)))*(1.0)))/(100)))+((((((0)*(v73)))*(1.0)))/(100)))+((((((0)*(v74)))*(1.0)))/(100)))+((((((0)*(v75)))*(1.0)))/(100)))+((((((0)*(v76)))*(1.0)))/(100)))+((((((0)*(v77)))*(1.0)))/(100)))+((((((0)*(v78)))*(1.0)))/(100)))+((((((0)*(v79)))*(1.0)))/(100)))+((((((0)*(v80)))*(1.0)))/(100)))+((((((0)*(v81)))*(1.0)))/(100)))+((((((0)*(v82)))*(1.0)))/(100)))+((((((0)*(v83)))*(1.0)))/(100)))+((((((0)*(v84)))*(1.0)))/(100)))+((((((0)*(v85)))*(1.0)))/(100)))+((((((0)*(v86)))*(1.0)))/(100)))+((((((0)*(v87)))*(1.0)))/(100)))+((((((0)*(v88)))*(1.0)))/(100)))+((((((0)*(v89)))*(1.0)))/(100)))+((((((0)*(v90)))*(1.0)))/(100)))+((((((0)*(v91)))*(1.0)))/(100)))+((((((0)*(v92)))*(1.0)))/(100)))+((((((0)*(v93)))*(1.0)))/(100)))+((((((0)*(v94)))*(1.0)))/(100)))+((((((0)*(v95)))*(1.0)))/(100)))+((((((0)*(v96)))*(1.0)))/(100))))/((1-((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((v1)*(nan)))/(100)))+((((v2)*(nan)))/(100)))+((((v3)*(nan)))/(100)))+((((v4)*(nan)))/(100)))+((((v5)*(nan)))/(100)))+((((v6)*(nan)))/(100)))+((((v7)*(nan)))/(100)))+((((v8)*(nan)))/(100)))+((((v9)*(nan)))/(100)))+((((v10)*(nan)))/(100)))+((((v11)*(nan)))/(100)))+((((v12)*(nan)))/(100)))+((((v13)*(nan)))/(100)))+((((v14)*(nan)))/(100)))+((((v15)*(nan)))/(100)))+((((v16)*(nan)))/(100)))+((((v17)*(nan)))/(100)))+((((v18)*(nan)))/(100)))+((((v19)*(nan)))/(100)))+((((v20)*(nan)))/(100)))+((((v21)*(nan)))/(100)))+((((v22)*(nan)))/(100)))+((((v23)*(nan)))/(100)))+((((v24)*(nan)))/(100)))+((((v25)*(nan)))/(100)))+((((v26)*(nan)))/(100)))+((((v27)*(nan)))/(100)))+((((v28)*(nan)))/(100)))+((((v29)*(nan)))/(100)))+((((v30)*(nan)))/(100)))+((((v31)*(nan)))/(100)))+((((v32)*(nan)))/(100)))+((((v33)*(nan)))/(100)))+((((v34)*(nan)))/(100)))+((((v35)*(nan)))/(100)))+((((v36)*(nan)))/(100)))+((((v37)*(nan)))/(100)))+((((v38)*(nan)))/(100)))+((((v39)*(nan)))/(100)))+((((v40)*(nan)))/(100)))+((((v41)*(nan)))/(100)))+((((v42)*(nan)))/(100)))+((((v43)*(nan)))/(100)))+((((v44)*(nan)))/(100)))+((((v45)*(nan)))/(100)))+((((v46)*(nan)))/(100)))+((((v47)*(nan)))/(100)))+((((v48)*(nan)))/(100)))+((((v49)*(nan)))/(100)))+((((v50)*(nan)))/(100)))+((((v51)*(nan)))/(100)))+((((v52)*(nan)))/(100)))+((((v53)*(nan)))/(100)))+((((v54)*(nan)))/(100)))+((((v55)*(nan)))/(100)))+((((v56)*(nan)))/(100)))+((((v57)*(nan)))/(100)))+((((v58)*(nan)))/(100)))+((((v59)*(nan)))/(100)))+((((v60)*(nan)))/(100)))+((((v61)*(nan)))/(100)))+((((v62)*(nan)))/(100)))+((((v63)*(nan)))/(100)))+((((v64)*(nan)))/(100)))+((((v65)*(nan)))/(100)))+((((v66)*(nan)))/(100)))+((((v67)*(nan)))/(100)))+((((v68)*(nan)))/(100)))+((((v69)*(nan)))/(100)))+((((v70)*(nan)))/(100)))+((((v71)*(nan)))/(100)))+((((v72)*(nan)))/(100)))+((((v73)*(nan)))/(100)))+((((v74)*(nan)))/(100)))+((((v75)*(nan)))/(100)))+((((v76)*(nan)))/(100)))+((((v77)*(nan)))/(100)))+((((v78)*(nan)))/(100)))+((((v79)*(nan)))/(100)))+((((v80)*(nan)))/(100)))+((((v81)*(nan)))/(100)))+((((v82)*(nan)))/(100)))+((((v83)*(nan)))/(100)))+((((v84)*(nan)))/(100)))+((((v85)*(nan)))/(100)))+((((v86)*(nan)))/(100)))+((((v87)*(nan)))/(100)))+((((v88)*(nan)))/(100)))+((((v89)*(nan)))/(100)))+((((v90)*(nan)))/(100)))+((((v91)*(nan)))/(100)))+((((v92)*(nan)))/(100)))+((((v93)*(nan)))/(100)))+((((v94)*(nan)))/(100)))+((((v95)*(nan)))/(100)))+((((v96)*(nan)))/(100))))/(100))))))/(100))))))*(0.6728147046439013)))+(((-((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((((v1)*(53.3775)))*(100)))/(100)))+((((((v2)*(50)))*(100)))/(100)))+((((((v3)*(60.93)))*(100)))/(100)))+((((((v4)*(45.155)))*(100)))/(100)))+((((((v5)*(52)))*(100)))/(100)))+((((((v6)*(52.92)))*(100)))/(100)))+((((((v7)*(48.4088904761905)))*(100)))/(100)))+((((((v8)*(58)))*(100)))/(100)))+((((((v9)*(66.24)))*(100)))/(100)))+((((((v10)*(35.5541666666667)))*(100)))/(100)))+((((((v11)*(36.763)))*(100)))/(100)))+((((((v12)*(62.72)))*(100)))/(100)))+((((((v13)*(70)))*(100)))/(100)))+((((((v14)*(52)))*(100)))/(100)))+((((((v15)*(48.4088904761905)))*(100)))/(100)))+((((((v16)*(58.9)))*(100)))/(100)))+((((((v17)*(66.24)))*(100)))/(100)))+((((((v18)*(42)))*(100)))/(100)))+((((((v19)*(47)))*(100)))/(100)))+((((((v20)*(48.91)))*(100)))/(100)))+((((((v21)*(58.14)))*(100)))/(100)))+((((((v22)*(35.5541666666667)))*(100)))/(100)))+((((((v23)*(52)))*(100)))/(100)))+((((((v24)*(61.5)))*(100)))/(100)))+((((((v25)*(62.13)))*(100)))/(100)))+((((((v26)*(64.36)))*(100)))/(100)))+((((((v27)*(52)))*(100)))/(100)))+((((((v28)*(48.4088904761905)))*(100)))/(100)))+((((((v29)*(58.9)))*(100)))/(100)))+((((((v30)*(69.65)))*(100)))/(100)))+((((((v31)*(55.2)))*(100)))/(100)))+((((((v32)*(48.47)))*(100)))/(100)))+((((((v33)*(42.23)))*(100)))/(100)))+((((((v34)*(45.48)))*(100)))/(100)))+((((((v35)*(35.5541666666667)))*(100)))/(100)))+((((((v36)*(61.5)))*(100)))/(100)))+((((((v37)*(55.2)))*(100)))/(100)))+((((((v38)*(52)))*(100)))/(100)))+((((((v39)*(48.4088904761905)))*(100)))/(100)))+((((((v40)*(58.2)))*(100)))/(100)))+((((((v41)*(48.47)))*(100)))/(100)))+((((((v42)*(57.26)))*(100)))/(100)))+((((((v43)*(50)))*(100)))/(100)))+((((((v44)*(86)))*(100)))/(100)))+((((((v45)*(42.23)))*(100)))/(100)))+((((((v46)*(35.5541666666667)))*(100)))/(100)))+((((((v47)*(61.5)))*(100)))/(100)))+((((((v48)*(55.2)))*(100)))/(100)))+((((((v49)*(52)))*(100)))/(100)))+((((((v50)*(48.4088904761905)))*(100)))/(100)))+((((((v51)*(58.2)))*(100)))/(100)))+((((((v52)*(48.47)))*(100)))/(100)))+((((((v53)*(57.26)))*(100)))/(100)))+((((((v54)*(50)))*(100)))/(100)))+((((((v55)*(86)))*(100)))/(100)))+((((((v56)*(42.23)))*(100)))/(100)))+((((((v57)*(35.5541666666667)))*(100)))/(100)))+((((((v58)*(59.95)))*(100)))/(100)))+((((((v59)*(61.5)))*(100)))/(100)))+((((((v60)*(52)))*(100)))/(100)))+((((((v61)*(49.15)))*(100)))/(100)))+((((((v62)*(57.8)))*(100)))/(100)))+((((((v63)*(57.87)))*(100)))/(100)))+((((((v64)*(69.5)))*(100)))/(100)))+((((((v65)*(51.9)))*(100)))/(100)))+((((((v66)*(24)))*(100)))/(100)))+((((((v67)*(34.5)))*(100)))/(100)))+((((((v68)*(59.95)))*(100)))/(100)))+((((((v69)*(61.5)))*(100)))/(100)))+((((((v70)*(52)))*(100)))/(100)))+((((((v71)*(49.15)))*(100)))/(100)))+((((((v72)*(57.8)))*(100)))/(100)))+((((((v73)*(57.87)))*(100)))/(100)))+((((((v74)*(69.5)))*(100)))/(100)))+((((((v75)*(51.9)))*(100)))/(100)))+((((((v76)*(24)))*(100)))/(100)))+((((((v77)*(34.5)))*(100)))/(100)))+((((((v78)*(59.95)))*(100)))/(100)))+((((((v79)*(61.5)))*(100)))/(100)))+((((((v80)*(52)))*(100)))/(100)))+((((((v81)*(49.15)))*(100)))/(100)))+((((((v82)*(57.8)))*(100)))/(100)))+((((((v83)*(57.87)))*(100)))/(100)))+((((((v84)*(69.5)))*(100)))/(100)))+((((((v85)*(51.9)))*(100)))/(100)))+((((((v86)*(24)))*(100)))/(100)))+((((((v87)*(34.5)))*(100)))/(100)))+((((((v88)*(
 
 APM model error: string > 15000  characters
 Consider breaking up the line into multiple equations
 
 The may also be due to only using newline character CR
   instead of CR LF (for Windows) or LF (for MacOS/Linux) 
 To fix this problem, save APM file with appropriate newline characters
 
 STOPPING...
 


2018-12-05 14:39:33,277 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 680.8815963996892), (1, 1, 1)]
2018-12-05 14:39:33,277 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.7057552595311165, 'sio2': 91.62143003582499, 'cost': 0.6728147046439013}
2018-12-05 14:39:34,846 __main__ mainTask ERROR = Traceback (most recent call last):
  File "C:/Users/sun/PycharmProjects/optimizationproblem/gekkoSolution/mainTask.py", line 37, in <module>
    lp.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\gekkoSolution\gekkoProblem.py", line 46, in solve
    self.prob.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\gekko\gekko.py", line 682, in solve
    raise Exception(apm_error)
Exception:  @error: Model Expression
 *** Error in syntax of function string: Invalid element: nan

Position: 3936                
 (0+((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((((910.99486005)*(v1)))*(1.0)))/(100)))+((((((853.351)*(v2)))*(1.0)))/(100)))+((((((1039.8935286)*(v3)))*(1.0)))/(100)))+((((((770.6612881)*(v4)))*(1.0)))/(100)))+((((((500)*(v5)))*(1.0)))/(100)))+((((((500)*(v6)))*(1.0)))/(100)))+((((((826.195501934952)*(v7)))*(1.0)))/(100)))+((((((989.88716)*(v8)))*(1.0)))/(100)))+((((((1130.5194048)*(v9)))*(1.0)))/(100)))+((((((500)*(v10)))*(1.0)))/(100)))+((((((300)*(v11)))*(1.0)))/(100)))+((((((1069.8162944)*(v12)))*(1.0)))/(100)))+((((((1245.56)*(v13)))*(1.0)))/(100)))+((((((500)*(v14)))*(1.0)))/(100)))+((((((825.711413030191)*(v15)))*(1.0)))/(100)))+((((((1004.658478)*(v16)))*(1.0)))/(100)))+((((((1129.8570048)*(v17)))*(1.0)))/(100)))+((((((300)*(v18)))*(1.0)))/(100)))+((((((801.67994)*(v19)))*(1.0)))/(100)))+((((((834.2588482)*(v20)))*(1.0)))/(100)))+((((((991.6951428)*(v21)))*(1.0)))/(100)))+((((((500)*(v22)))*(1.0)))/(100)))+((((((886.96504)*(v23)))*(1.0)))/(100)))+((((((1049.00673)*(v24)))*(1.0)))/(100)))+((((((1059.7526526)*(v25)))*(1.0)))/(100)))+((((((1097.7898072)*(v26)))*(1.0)))/(100)))+((((((500)*(v27)))*(1.0)))/(100)))+((((((825.711413030191)*(v28)))*(1.0)))/(100)))+((((((1004.658478)*(v29)))*(1.0)))/(100)))+((((((1241.92)*(v30)))*(1.0)))/(100)))+((((((941.547504)*(v31)))*(1.0)))/(100)))+((((((826.7537594)*(v32)))*(1.0)))/(100)))+((((((300)*(v33)))*(1.0)))/(100)))+((((((775.7532696)*(v34)))*(1.0)))/(100)))+((((((500)*(v35)))*(1.0)))/(100)))+((((((944.28)*(v36)))*(1.0)))/(100)))+((((((612.08)*(v37)))*(1.0)))/(100)))+((((((500)*(v38)))*(1.0)))/(100)))+((((((473.38)*(v39)))*(1.0)))/(100)))+((((((925.96)*(v40)))*(1.0)))/(100)))+((((((484.27)*(v41)))*(1.0)))/(100)))+((((((780.55)*(v42)))*(1.0)))/(100)))+((((((434.35)*(v43)))*(1.0)))/(100)))+((((((1228.65)*(v44)))*(1.0)))/(100)))+((((((300)*(v45)))*(1.0)))/(100)))+((((((500)*(v46)))*(1.0)))/(100)))+((((((964.82)*(v47)))*(1.0)))/(100)))+((((((586.286222115809)*(v48)))*(1.0)))/(100)))+((((((500)*(v49)))*(1.0)))/(100)))+((((((408.863293435074)*(v50)))*(1.0)))/(100)))+((((((925.96)*(v51)))*(1.0)))/(100)))+((((((405.863293435074)*(v52)))*(1.0)))/(100)))+((((((910.96)*(v53)))*(1.0)))/(100)))+((((((450.95)*(v54)))*(1.0)))/(100)))+((((((1242.28973578925)*(v55)))*(1.0)))/(100)))+((((((300)*(v56)))*(1.0)))/(100)))+((((((500)*(v57)))*(1.0)))/(100)))+((((((773.95)*(v58)))*(1.0)))/(100)))+((((((793.97)*(v59)))*(1.0)))/(100)))+((((((500)*(v60)))*(1.0)))/(100)))+((((((634.53)*(v61)))*(1.0)))/(100)))+((((((746.2)*(v62)))*(1.0)))/(100)))+((((((747.1)*(v63)))*(1.0)))/(100)))+((((((800)*(v64)))*(1.0)))/(100)))+((((((500)*(v65)))*(1.0)))/(100)))+((((((100)*(v66)))*(1.0)))/(100)))+((((((500)*(v67)))*(1.0)))/(100)))+((((((773.95)*(v68)))*(1.0)))/(100)))+((((((793.97)*(v69)))*(1.0)))/(100)))+((((((500)*(v70)))*(1.0)))/(100)))+((((((634.53)*(v71)))*(1.0)))/(100)))+((((((746.2)*(v72)))*(1.0)))/(100)))+((((((747.1)*(v73)))*(1.0)))/(100)))+((((((800)*(v74)))*(1.0)))/(100)))+((((((500)*(v75)))*(1.0)))/(100)))+((((((100)*(v76)))*(1.0)))/(100)))+((((((500)*(v77)))*(1.0)))/(100)))+((((((773.95)*(v78)))*(1.0)))/(100)))+((((((793.97)*(v79)))*(1.0)))/(100)))+((((((500)*(v80)))*(1.0)))/(100)))+((((((634.53)*(v81)))*(1.0)))/(100)))+((((((746.2)*(v82)))*(1.0)))/(100)))+((((((747.1)*(v83)))*(1.0)))/(100)))+((((((800)*(v84)))*(1.0)))/(100)))+((((((500)*(v85)))*(1.0)))/(100)))+((((((100)*(v86)))*(1.0)))/(100)))+((((((500)*(v87)))*(1.0)))/(100)))+((((((566.5)*(v88)))*(1.0)))/(100)))+((((((600.5)*(v89)))*(1.0)))/(100)))+((((((500)*(v90)))*(1.0)))/(100)))+((((((431.41)*(v91)))*(1.0)))/(100)))+((((((498.015344202792)*(v92)))*(1.0)))/(100)))+((((((466.846846846847)*(v93)))*(1.0)))/(100)))+((((((500)*(v94)))*(1.0)))/(100)))+((((((100)*(v95)))*(1.0)))/(100)))+((((((500)*(v96)))*(1.0)))/(100))))/((1-((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((v1)*(nan)))/(100)))+((((v2)*(nan)))/(100)))+((((v3)*(nan)))/(100)))+((((v4)*(nan)))/(100)))+((((v5)*(nan)))/(100)))+((((v6)*(nan)))/(100)))+((((v7)*(nan)))/(100)))+((((v8)*(nan)))/(100)))+((((v9)*(nan)))/(100)))+((((v10)*(nan)))/(100)))+((((v11)*(nan)))/(100)))+((((v12)*(nan)))/(100)))+((((v13)*(nan)))/(100)))+((((v14)*(nan)))/(100)))+((((v15)*(nan)))/(100)))+((((v16)*(nan)))/(100)))+((((v17)*(nan)))/(100)))+((((v18)*(nan)))/(100)))+((((v19)*(nan)))/(100)))+((((v20)*(nan)))/(100)))+((((v21)*(nan)))/(100)))+((((v22)*(nan)))/(100)))+((((v23)*(nan)))/(100)))+((((v24)*(nan)))/(100)))+((((v25)*(nan)))/(100)))+((((v26)*(nan)))/(100)))+((((v27)*(nan)))/(100)))+((((v28)*(nan)))/(100)))+((((v29)*(nan)))/(100)))+((((v30)*(nan)))/(100)))+((((v31)*(nan)))/(100)))+((((v32)*(nan)))/(100)))+((((v33)*(nan)))/(100)))+((((v34)*(nan)))/(100)))+((((v35)*(nan)))/(100)))+((((v36)*(nan)))/(100)))+((((v37)*(nan)))/(100)))+((((v38)*(nan)))/(100)))+((((v39)*(nan)))/(100)))+((((v40)*(nan)))/(100)))+((((v41)*(nan)))/(100)))+((((v42)*(nan)))/(100)))+((((v43)*(nan)))/(100)))+((((v44)*(nan)))/(100)))+((((v45)*(nan)))/(100)))+((((v46)*(nan)))/(100)))+((((v47)*(nan)))/(100)))+((((v48)*(nan)))/(100)))+((((v49)*(nan)))/(100)))+((((v50)*(nan)))/(100)))+((((v51)*(nan)))/(100)))+((((v52)*(nan)))/(100)))+((((v53)*(nan)))/(100)))+((((v54)*(nan)))/(100)))+((((v55)*(nan)))/(100)))+((((v56)*(nan)))/(100)))+((((v57)*(nan)))/(100)))+((((v58)*(nan)))/(100)))+((((v59)*(nan)))/(100)))+((((v60)*(nan)))/(100)))+((((v61)*(nan)))/(100)))+((((v62)*(nan)))/(100)))+((((v63)*(nan)))/(100)))+((((v64)*(nan)))/(100)))+((((v65)*(nan)))/(100)))+((((v66)*(nan)))/(100)))+((((v67)*(nan)))/(100)))+((((v68)*(nan)))/(100)))+((((v69)*(nan)))/(100)))+((((v70)*(nan)))/(100)))+((((v71)*(nan)))/(100)))+((((v72)*(nan)))/(100)))+((((v73)*(nan)))/(100)))+((((v74)*(nan)))/(100)))+((((v75)*(nan)))/(100)))+((((v76)*(nan)))/(100)))+((((v77)*(nan)))/(100)))+((((v78)*(nan)))/(100)))+((((v79)*(nan)))/(100)))+((((v80)*(nan)))/(100)))+((((v81)*(nan)))/(100)))+((((v82)*(nan)))/(100)))+((((v83)*(nan)))/(100)))+((((v84)*(nan)))/(100)))+((((v85)*(nan)))/(100)))+((((v86)*(nan)))/(100)))+((((v87)*(nan)))/(100)))+((((v88)*(nan)))/(100)))+((((v89)*(nan)))/(100)))+((((v90)*(nan)))/(100)))+((((v91)*(nan)))/(100)))+((((v92)*(nan)))/(100)))+((((v93)*(nan)))/(100)))+((((v94)*(nan)))/(100)))+((((v95)*(nan)))/(100)))+((((v96)*(nan)))/(100))))/(100))))))/((1-((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((((0)*(v1)))*(1.0)))/(100)))+((((((0)*(v2)))*(1.0)))/(100)))+((((((0)*(v3)))*(1.0)))/(100)))+((((((0)*(v4)))*(1.0)))/(100)))+((((((0)*(v5)))*(1.0)))/(100)))+((((((0)*(v6)))*(1.0)))/(100)))+((((((0)*(v7)))*(1.0)))/(100)))+((((((0)*(v8)))*(1.0)))/(100)))+((((((0)*(v9)))*(1.0)))/(100)))+((((((0)*(v10)))*(1.0)))/(100)))+((((((0)*(v11)))*(1.0)))/(100)))+((((((0)*(v12)))*(1.0)))/(100)))+((((((0)*(v13)))*(1.0)))/(100)))+((((((0)*(v14)))*(1.0)))/(100)))+((((((0)*(v15)))*(1.0)))/(100)))+((((((0)*(v16)))*(1.0)))/(100)))+((((((0)*(v17)))*(1.0)))/(100)))+((((((0)*(v18)))*(1.0)))/(100)))+((((((0)*(v19)))*(1.0)))/(100)))+((((((0)*(v20)))*(1.0)))/(100)))+((((((0)*(v21)))*(1.0)))/(100)))+((((((0)*(v22)))*(1.0)))/(100)))+((((((0)*(v23)))*(1.0)))/(100)))+((((((0)*(v24)))*(1.0)))/(100)))+((((((0)*(v25)))*(1.0)))/(100)))+((((((0)*(v26)))*(1.0)))/(100)))+((((((0)*(v27)))*(1.0)))/(100)))+((((((0)*(v28)))*(1.0)))/(100)))+((((((0)*(v29)))*(1.0)))/(100)))+((((((0)*(v30)))*(1.0)))/(100)))+((((((0)*(v31)))*(1.0)))/(100)))+((((((0)*(v32)))*(1.0)))/(100)))+((((((0)*(v33)))*(1.0)))/(100)))+((((((0)*(v34)))*(1.0)))/(100)))+((((((0)*(v35)))*(1.0)))/(100)))+((((((0)*(v36)))*(1.0)))/(100)))+((((((0)*(v37)))*(1.0)))/(100)))+((((((0)*(v38)))*(1.0)))/(100)))+((((((0)*(v39)))*(1.0)))/(100)))+((((((0)*(v40)))*(1.0)))/(100)))+((((((0)*(v41)))*(1.0)))/(100)))+((((((0)*(v42)))*(1.0)))/(100)))+((((((0)*(v43)))*(1.0)))/(100)))+((((((0)*(v44)))*(1.0)))/(100)))+((((((0)*(v45)))*(1.0)))/(100)))+((((((0)*(v46)))*(1.0)))/(100)))+((((((0)*(v47)))*(1.0)))/(100)))+((((((0)*(v48)))*(1.0)))/(100)))+((((((0)*(v49)))*(1.0)))/(100)))+((((((0)*(v50)))*(1.0)))/(100)))+((((((0)*(v51)))*(1.0)))/(100)))+((((((0)*(v52)))*(1.0)))/(100)))+((((((0)*(v53)))*(1.0)))/(100)))+((((((0)*(v54)))*(1.0)))/(100)))+((((((0)*(v55)))*(1.0)))/(100)))+((((((0)*(v56)))*(1.0)))/(100)))+((((((0)*(v57)))*(1.0)))/(100)))+((((((0)*(v58)))*(1.0)))/(100)))+((((((0)*(v59)))*(1.0)))/(100)))+((((((0)*(v60)))*(1.0)))/(100)))+((((((0)*(v61)))*(1.0)))/(100)))+((((((0)*(v62)))*(1.0)))/(100)))+((((((0)*(v63)))*(1.0)))/(100)))+((((((0)*(v64)))*(1.0)))/(100)))+((((((0)*(v65)))*(1.0)))/(100)))+((((((0)*(v66)))*(1.0)))/(100)))+((((((0)*(v67)))*(1.0)))/(100)))+((((((0)*(v68)))*(1.0)))/(100)))+((((((0)*(v69)))*(1.0)))/(100)))+((((((0)*(v70)))*(1.0)))/(100)))+((((((0)*(v71)))*(1.0)))/(100)))+((((((0)*(v72)))*(1.0)))/(100)))+((((((0)*(v73)))*(1.0)))/(100)))+((((((0)*(v74)))*(1.0)))/(100)))+((((((0)*(v75)))*(1.0)))/(100)))+((((((0)*(v76)))*(1.0)))/(100)))+((((((0)*(v77)))*(1.0)))/(100)))+((((((0)*(v78)))*(1.0)))/(100)))+((((((0)*(v79)))*(1.0)))/(100)))+((((((0)*(v80)))*(1.0)))/(100)))+((((((0)*(v81)))*(1.0)))/(100)))+((((((0)*(v82)))*(1.0)))/(100)))+((((((0)*(v83)))*(1.0)))/(100)))+((((((0)*(v84)))*(1.0)))/(100)))+((((((0)*(v85)))*(1.0)))/(100)))+((((((0)*(v86)))*(1.0)))/(100)))+((((((0)*(v87)))*(1.0)))/(100)))+((((((0)*(v88)))*(1.0)))/(100)))+((((((0)*(v89)))*(1.0)))/(100)))+((((((0)*(v90)))*(1.0)))/(100)))+((((((0)*(v91)))*(1.0)))/(100)))+((((((0)*(v92)))*(1.0)))/(100)))+((((((0)*(v93)))*(1.0)))/(100)))+((((((0)*(v94)))*(1.0)))/(100)))+((((((0)*(v95)))*(1.0)))/(100)))+((((((0)*(v96)))*(1.0)))/(100))))/((1-((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((v1)*(nan)))/(100)))+((((v2)*(nan)))/(100)))+((((v3)*(nan)))/(100)))+((((v4)*(nan)))/(100)))+((((v5)*(nan)))/(100)))+((((v6)*(nan)))/(100)))+((((v7)*(nan)))/(100)))+((((v8)*(nan)))/(100)))+((((v9)*(nan)))/(100)))+((((v10)*(nan)))/(100)))+((((v11)*(nan)))/(100)))+((((v12)*(nan)))/(100)))+((((v13)*(nan)))/(100)))+((((v14)*(nan)))/(100)))+((((v15)*(nan)))/(100)))+((((v16)*(nan)))/(100)))+((((v17)*(nan)))/(100)))+((((v18)*(nan)))/(100)))+((((v19)*(nan)))/(100)))+((((v20)*(nan)))/(100)))+((((v21)*(nan)))/(100)))+((((v22)*(nan)))/(100)))+((((v23)*(nan)))/(100)))+((((v24)*(nan)))/(100)))+((((v25)*(nan)))/(100)))+((((v26)*(nan)))/(100)))+((((v27)*(nan)))/(100)))+((((v28)*(nan)))/(100)))+((((v29)*(nan)))/(100)))+((((v30)*(nan)))/(100)))+((((v31)*(nan)))/(100)))+((((v32)*(nan)))/(100)))+((((v33)*(nan)))/(100)))+((((v34)*(nan)))/(100)))+((((v35)*(nan)))/(100)))+((((v36)*(nan)))/(100)))+((((v37)*(nan)))/(100)))+((((v38)*(nan)))/(100)))+((((v39)*(nan)))/(100)))+((((v40)*(nan)))/(100)))+((((v41)*(nan)))/(100)))+((((v42)*(nan)))/(100)))+((((v43)*(nan)))/(100)))+((((v44)*(nan)))/(100)))+((((v45)*(nan)))/(100)))+((((v46)*(nan)))/(100)))+((((v47)*(nan)))/(100)))+((((v48)*(nan)))/(100)))+((((v49)*(nan)))/(100)))+((((v50)*(nan)))/(100)))+((((v51)*(nan)))/(100)))+((((v52)*(nan)))/(100)))+((((v53)*(nan)))/(100)))+((((v54)*(nan)))/(100)))+((((v55)*(nan)))/(100)))+((((v56)*(nan)))/(100)))+((((v57)*(nan)))/(100)))+((((v58)*(nan)))/(100)))+((((v59)*(nan)))/(100)))+((((v60)*(nan)))/(100)))+((((v61)*(nan)))/(100)))+((((v62)*(nan)))/(100)))+((((v63)*(nan)))/(100)))+((((v64)*(nan)))/(100)))+((((v65)*(nan)))/(100)))+((((v66)*(nan)))/(100)))+((((v67)*(nan)))/(100)))+((((v68)*(nan)))/(100)))+((((v69)*(nan)))/(100)))+((((v70)*(nan)))/(100)))+((((v71)*(nan)))/(100)))+((((v72)*(nan)))/(100)))+((((v73)*(nan)))/(100)))+((((v74)*(nan)))/(100)))+((((v75)*(nan)))/(100)))+((((v76)*(nan)))/(100)))+((((v77)*(nan)))/(100)))+((((v78)*(nan)))/(100)))+((((v79)*(nan)))/(100)))+((((v80)*(nan)))/(100)))+((((v81)*(nan)))/(100)))+((((v82)*(nan)))/(100)))+((((v83)*(nan)))/(100)))+((((v84)*(nan)))/(100)))+((((v85)*(nan)))/(100)))+((((v86)*(nan)))/(100)))+((((v87)*(nan)))/(100)))+((((v88)*(nan)))/(100)))+((((v89)*(nan)))/(100)))+((((v90)*(nan)))/(100)))+((((v91)*(nan)))/(100)))+((((v92)*(nan)))/(100)))+((((v93)*(nan)))/(100)))+((((v94)*(nan)))/(100)))+((((v95)*(nan)))/(100)))+((((v96)*(nan)))/(100))))/(100))))))/(100))))))*(0.6728147046439013)))




2018-12-05 14:40:25,338 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 680.8815963996892), (1, 1, 1)]
2018-12-05 14:40:25,338 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.7057552595311165, 'sio2': 91.62143003582499, 'cost': 0.6728147046439013}
2018-12-05 14:40:26,900 __main__ mainTask ERROR = Traceback (most recent call last):
  File "C:/Users/sun/PycharmProjects/optimizationproblem/gekkoSolution/mainTask.py", line 38, in <module>
    lp.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\gekkoSolution\gekkoProblem.py", line 46, in solve
    self.prob.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\gekko\gekko.py", line 682, in solve
    raise Exception(apm_error)
Exception:  @error: Model Expression
 *** Error in syntax of function string: Invalid element: nan

Position: 3936                
 (0+((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((((910.99486005)*(v1)))*(1.0)))/(100)))+((((((853.351)*(v2)))*(1.0)))/(100)))+((((((1039.8935286)*(v3)))*(1.0)))/(100)))+((((((770.6612881)*(v4)))*(1.0)))/(100)))+((((((500)*(v5)))*(1.0)))/(100)))+((((((500)*(v6)))*(1.0)))/(100)))+((((((826.195501934952)*(v7)))*(1.0)))/(100)))+((((((989.88716)*(v8)))*(1.0)))/(100)))+((((((1130.5194048)*(v9)))*(1.0)))/(100)))+((((((500)*(v10)))*(1.0)))/(100)))+((((((300)*(v11)))*(1.0)))/(100)))+((((((1069.8162944)*(v12)))*(1.0)))/(100)))+((((((1245.56)*(v13)))*(1.0)))/(100)))+((((((500)*(v14)))*(1.0)))/(100)))+((((((825.711413030191)*(v15)))*(1.0)))/(100)))+((((((1004.658478)*(v16)))*(1.0)))/(100)))+((((((1129.8570048)*(v17)))*(1.0)))/(100)))+((((((300)*(v18)))*(1.0)))/(100)))+((((((801.67994)*(v19)))*(1.0)))/(100)))+((((((834.2588482)*(v20)))*(1.0)))/(100)))+((((((991.6951428)*(v21)))*(1.0)))/(100)))+((((((500)*(v22)))*(1.0)))/(100)))+((((((886.96504)*(v23)))*(1.0)))/(100)))+((((((1049.00673)*(v24)))*(1.0)))/(100)))+((((((1059.7526526)*(v25)))*(1.0)))/(100)))+((((((1097.7898072)*(v26)))*(1.0)))/(100)))+((((((500)*(v27)))*(1.0)))/(100)))+((((((825.711413030191)*(v28)))*(1.0)))/(100)))+((((((1004.658478)*(v29)))*(1.0)))/(100)))+((((((1241.92)*(v30)))*(1.0)))/(100)))+((((((941.547504)*(v31)))*(1.0)))/(100)))+((((((826.7537594)*(v32)))*(1.0)))/(100)))+((((((300)*(v33)))*(1.0)))/(100)))+((((((775.7532696)*(v34)))*(1.0)))/(100)))+((((((500)*(v35)))*(1.0)))/(100)))+((((((944.28)*(v36)))*(1.0)))/(100)))+((((((612.08)*(v37)))*(1.0)))/(100)))+((((((500)*(v38)))*(1.0)))/(100)))+((((((473.38)*(v39)))*(1.0)))/(100)))+((((((925.96)*(v40)))*(1.0)))/(100)))+((((((484.27)*(v41)))*(1.0)))/(100)))+((((((780.55)*(v42)))*(1.0)))/(100)))+((((((434.35)*(v43)))*(1.0)))/(100)))+((((((1228.65)*(v44)))*(1.0)))/(100)))+((((((300)*(v45)))*(1.0)))/(100)))+((((((500)*(v46)))*(1.0)))/(100)))+((((((964.82)*(v47)))*(1.0)))/(100)))+((((((586.286222115809)*(v48)))*(1.0)))/(100)))+((((((500)*(v49)))*(1.0)))/(100)))+((((((408.863293435074)*(v50)))*(1.0)))/(100)))+((((((925.96)*(v51)))*(1.0)))/(100)))+((((((405.863293435074)*(v52)))*(1.0)))/(100)))+((((((910.96)*(v53)))*(1.0)))/(100)))+((((((450.95)*(v54)))*(1.0)))/(100)))+((((((1242.28973578925)*(v55)))*(1.0)))/(100)))+((((((300)*(v56)))*(1.0)))/(100)))+((((((500)*(v57)))*(1.0)))/(100)))+((((((773.95)*(v58)))*(1.0)))/(100)))+((((((793.97)*(v59)))*(1.0)))/(100)))+((((((500)*(v60)))*(1.0)))/(100)))+((((((634.53)*(v61)))*(1.0)))/(100)))+((((((746.2)*(v62)))*(1.0)))/(100)))+((((((747.1)*(v63)))*(1.0)))/(100)))+((((((800)*(v64)))*(1.0)))/(100)))+((((((500)*(v65)))*(1.0)))/(100)))+((((((100)*(v66)))*(1.0)))/(100)))+((((((500)*(v67)))*(1.0)))/(100)))+((((((773.95)*(v68)))*(1.0)))/(100)))+((((((793.97)*(v69)))*(1.0)))/(100)))+((((((500)*(v70)))*(1.0)))/(100)))+((((((634.53)*(v71)))*(1.0)))/(100)))+((((((746.2)*(v72)))*(1.0)))/(100)))+((((((747.1)*(v73)))*(1.0)))/(100)))+((((((800)*(v74)))*(1.0)))/(100)))+((((((500)*(v75)))*(1.0)))/(100)))+((((((100)*(v76)))*(1.0)))/(100)))+((((((500)*(v77)))*(1.0)))/(100)))+((((((773.95)*(v78)))*(1.0)))/(100)))+((((((793.97)*(v79)))*(1.0)))/(100)))+((((((500)*(v80)))*(1.0)))/(100)))+((((((634.53)*(v81)))*(1.0)))/(100)))+((((((746.2)*(v82)))*(1.0)))/(100)))+((((((747.1)*(v83)))*(1.0)))/(100)))+((((((800)*(v84)))*(1.0)))/(100)))+((((((500)*(v85)))*(1.0)))/(100)))+((((((100)*(v86)))*(1.0)))/(100)))+((((((500)*(v87)))*(1.0)))/(100)))+((((((566.5)*(v88)))*(1.0)))/(100)))+((((((600.5)*(v89)))*(1.0)))/(100)))+((((((500)*(v90)))*(1.0)))/(100)))+((((((431.41)*(v91)))*(1.0)))/(100)))+((((((498.015344202792)*(v92)))*(1.0)))/(100)))+((((((466.846846846847)*(v93)))*(1.0)))/(100)))+((((((500)*(v94)))*(1.0)))/(100)))+((((((100)*(v95)))*(1.0)))/(100)))+((((((500)*(v96)))*(1.0)))/(100))))/((1-((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((v1)*(nan)))/(100)))+((((v2)*(nan)))/(100)))+((((v3)*(nan)))/(100)))+((((v4)*(nan)))/(100)))+((((v5)*(nan)))/(100)))+((((v6)*(nan)))/(100)))+((((v7)*(nan)))/(100)))+((((v8)*(nan)))/(100)))+((((v9)*(nan)))/(100)))+((((v10)*(nan)))/(100)))+((((v11)*(nan)))/(100)))+((((v12)*(nan)))/(100)))+((((v13)*(nan)))/(100)))+((((v14)*(nan)))/(100)))+((((v15)*(nan)))/(100)))+((((v16)*(nan)))/(100)))+((((v17)*(nan)))/(100)))+((((v18)*(nan)))/(100)))+((((v19)*(nan)))/(100)))+((((v20)*(nan)))/(100)))+((((v21)*(nan)))/(100)))+((((v22)*(nan)))/(100)))+((((v23)*(nan)))/(100)))+((((v24)*(nan)))/(100)))+((((v25)*(nan)))/(100)))+((((v26)*(nan)))/(100)))+((((v27)*(nan)))/(100)))+((((v28)*(nan)))/(100)))+((((v29)*(nan)))/(100)))+((((v30)*(nan)))/(100)))+((((v31)*(nan)))/(100)))+((((v32)*(nan)))/(100)))+((((v33)*(nan)))/(100)))+((((v34)*(nan)))/(100)))+((((v35)*(nan)))/(100)))+((((v36)*(nan)))/(100)))+((((v37)*(nan)))/(100)))+((((v38)*(nan)))/(100)))+((((v39)*(nan)))/(100)))+((((v40)*(nan)))/(100)))+((((v41)*(nan)))/(100)))+((((v42)*(nan)))/(100)))+((((v43)*(nan)))/(100)))+((((v44)*(nan)))/(100)))+((((v45)*(nan)))/(100)))+((((v46)*(nan)))/(100)))+((((v47)*(nan)))/(100)))+((((v48)*(nan)))/(100)))+((((v49)*(nan)))/(100)))+((((v50)*(nan)))/(100)))+((((v51)*(nan)))/(100)))+((((v52)*(nan)))/(100)))+((((v53)*(nan)))/(100)))+((((v54)*(nan)))/(100)))+((((v55)*(nan)))/(100)))+((((v56)*(nan)))/(100)))+((((v57)*(nan)))/(100)))+((((v58)*(nan)))/(100)))+((((v59)*(nan)))/(100)))+((((v60)*(nan)))/(100)))+((((v61)*(nan)))/(100)))+((((v62)*(nan)))/(100)))+((((v63)*(nan)))/(100)))+((((v64)*(nan)))/(100)))+((((v65)*(nan)))/(100)))+((((v66)*(nan)))/(100)))+((((v67)*(nan)))/(100)))+((((v68)*(nan)))/(100)))+((((v69)*(nan)))/(100)))+((((v70)*(nan)))/(100)))+((((v71)*(nan)))/(100)))+((((v72)*(nan)))/(100)))+((((v73)*(nan)))/(100)))+((((v74)*(nan)))/(100)))+((((v75)*(nan)))/(100)))+((((v76)*(nan)))/(100)))+((((v77)*(nan)))/(100)))+((((v78)*(nan)))/(100)))+((((v79)*(nan)))/(100)))+((((v80)*(nan)))/(100)))+((((v81)*(nan)))/(100)))+((((v82)*(nan)))/(100)))+((((v83)*(nan)))/(100)))+((((v84)*(nan)))/(100)))+((((v85)*(nan)))/(100)))+((((v86)*(nan)))/(100)))+((((v87)*(nan)))/(100)))+((((v88)*(nan)))/(100)))+((((v89)*(nan)))/(100)))+((((v90)*(nan)))/(100)))+((((v91)*(nan)))/(100)))+((((v92)*(nan)))/(100)))+((((v93)*(nan)))/(100)))+((((v94)*(nan)))/(100)))+((((v95)*(nan)))/(100)))+((((v96)*(nan)))/(100))))/(100))))))/((1-((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((((0)*(v1)))*(1.0)))/(100)))+((((((0)*(v2)))*(1.0)))/(100)))+((((((0)*(v3)))*(1.0)))/(100)))+((((((0)*(v4)))*(1.0)))/(100)))+((((((0)*(v5)))*(1.0)))/(100)))+((((((0)*(v6)))*(1.0)))/(100)))+((((((0)*(v7)))*(1.0)))/(100)))+((((((0)*(v8)))*(1.0)))/(100)))+((((((0)*(v9)))*(1.0)))/(100)))+((((((0)*(v10)))*(1.0)))/(100)))+((((((0)*(v11)))*(1.0)))/(100)))+((((((0)*(v12)))*(1.0)))/(100)))+((((((0)*(v13)))*(1.0)))/(100)))+((((((0)*(v14)))*(1.0)))/(100)))+((((((0)*(v15)))*(1.0)))/(100)))+((((((0)*(v16)))*(1.0)))/(100)))+((((((0)*(v17)))*(1.0)))/(100)))+((((((0)*(v18)))*(1.0)))/(100)))+((((((0)*(v19)))*(1.0)))/(100)))+((((((0)*(v20)))*(1.0)))/(100)))+((((((0)*(v21)))*(1.0)))/(100)))+((((((0)*(v22)))*(1.0)))/(100)))+((((((0)*(v23)))*(1.0)))/(100)))+((((((0)*(v24)))*(1.0)))/(100)))+((((((0)*(v25)))*(1.0)))/(100)))+((((((0)*(v26)))*(1.0)))/(100)))+((((((0)*(v27)))*(1.0)))/(100)))+((((((0)*(v28)))*(1.0)))/(100)))+((((((0)*(v29)))*(1.0)))/(100)))+((((((0)*(v30)))*(1.0)))/(100)))+((((((0)*(v31)))*(1.0)))/(100)))+((((((0)*(v32)))*(1.0)))/(100)))+((((((0)*(v33)))*(1.0)))/(100)))+((((((0)*(v34)))*(1.0)))/(100)))+((((((0)*(v35)))*(1.0)))/(100)))+((((((0)*(v36)))*(1.0)))/(100)))+((((((0)*(v37)))*(1.0)))/(100)))+((((((0)*(v38)))*(1.0)))/(100)))+((((((0)*(v39)))*(1.0)))/(100)))+((((((0)*(v40)))*(1.0)))/(100)))+((((((0)*(v41)))*(1.0)))/(100)))+((((((0)*(v42)))*(1.0)))/(100)))+((((((0)*(v43)))*(1.0)))/(100)))+((((((0)*(v44)))*(1.0)))/(100)))+((((((0)*(v45)))*(1.0)))/(100)))+((((((0)*(v46)))*(1.0)))/(100)))+((((((0)*(v47)))*(1.0)))/(100)))+((((((0)*(v48)))*(1.0)))/(100)))+((((((0)*(v49)))*(1.0)))/(100)))+((((((0)*(v50)))*(1.0)))/(100)))+((((((0)*(v51)))*(1.0)))/(100)))+((((((0)*(v52)))*(1.0)))/(100)))+((((((0)*(v53)))*(1.0)))/(100)))+((((((0)*(v54)))*(1.0)))/(100)))+((((((0)*(v55)))*(1.0)))/(100)))+((((((0)*(v56)))*(1.0)))/(100)))+((((((0)*(v57)))*(1.0)))/(100)))+((((((0)*(v58)))*(1.0)))/(100)))+((((((0)*(v59)))*(1.0)))/(100)))+((((((0)*(v60)))*(1.0)))/(100)))+((((((0)*(v61)))*(1.0)))/(100)))+((((((0)*(v62)))*(1.0)))/(100)))+((((((0)*(v63)))*(1.0)))/(100)))+((((((0)*(v64)))*(1.0)))/(100)))+((((((0)*(v65)))*(1.0)))/(100)))+((((((0)*(v66)))*(1.0)))/(100)))+((((((0)*(v67)))*(1.0)))/(100)))+((((((0)*(v68)))*(1.0)))/(100)))+((((((0)*(v69)))*(1.0)))/(100)))+((((((0)*(v70)))*(1.0)))/(100)))+((((((0)*(v71)))*(1.0)))/(100)))+((((((0)*(v72)))*(1.0)))/(100)))+((((((0)*(v73)))*(1.0)))/(100)))+((((((0)*(v74)))*(1.0)))/(100)))+((((((0)*(v75)))*(1.0)))/(100)))+((((((0)*(v76)))*(1.0)))/(100)))+((((((0)*(v77)))*(1.0)))/(100)))+((((((0)*(v78)))*(1.0)))/(100)))+((((((0)*(v79)))*(1.0)))/(100)))+((((((0)*(v80)))*(1.0)))/(100)))+((((((0)*(v81)))*(1.0)))/(100)))+((((((0)*(v82)))*(1.0)))/(100)))+((((((0)*(v83)))*(1.0)))/(100)))+((((((0)*(v84)))*(1.0)))/(100)))+((((((0)*(v85)))*(1.0)))/(100)))+((((((0)*(v86)))*(1.0)))/(100)))+((((((0)*(v87)))*(1.0)))/(100)))+((((((0)*(v88)))*(1.0)))/(100)))+((((((0)*(v89)))*(1.0)))/(100)))+((((((0)*(v90)))*(1.0)))/(100)))+((((((0)*(v91)))*(1.0)))/(100)))+((((((0)*(v92)))*(1.0)))/(100)))+((((((0)*(v93)))*(1.0)))/(100)))+((((((0)*(v94)))*(1.0)))/(100)))+((((((0)*(v95)))*(1.0)))/(100)))+((((((0)*(v96)))*(1.0)))/(100))))/((1-((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((v1)*(nan)))/(100)))+((((v2)*(nan)))/(100)))+((((v3)*(nan)))/(100)))+((((v4)*(nan)))/(100)))+((((v5)*(nan)))/(100)))+((((v6)*(nan)))/(100)))+((((v7)*(nan)))/(100)))+((((v8)*(nan)))/(100)))+((((v9)*(nan)))/(100)))+((((v10)*(nan)))/(100)))+((((v11)*(nan)))/(100)))+((((v12)*(nan)))/(100)))+((((v13)*(nan)))/(100)))+((((v14)*(nan)))/(100)))+((((v15)*(nan)))/(100)))+((((v16)*(nan)))/(100)))+((((v17)*(nan)))/(100)))+((((v18)*(nan)))/(100)))+((((v19)*(nan)))/(100)))+((((v20)*(nan)))/(100)))+((((v21)*(nan)))/(100)))+((((v22)*(nan)))/(100)))+((((v23)*(nan)))/(100)))+((((v24)*(nan)))/(100)))+((((v25)*(nan)))/(100)))+((((v26)*(nan)))/(100)))+((((v27)*(nan)))/(100)))+((((v28)*(nan)))/(100)))+((((v29)*(nan)))/(100)))+((((v30)*(nan)))/(100)))+((((v31)*(nan)))/(100)))+((((v32)*(nan)))/(100)))+((((v33)*(nan)))/(100)))+((((v34)*(nan)))/(100)))+((((v35)*(nan)))/(100)))+((((v36)*(nan)))/(100)))+((((v37)*(nan)))/(100)))+((((v38)*(nan)))/(100)))+((((v39)*(nan)))/(100)))+((((v40)*(nan)))/(100)))+((((v41)*(nan)))/(100)))+((((v42)*(nan)))/(100)))+((((v43)*(nan)))/(100)))+((((v44)*(nan)))/(100)))+((((v45)*(nan)))/(100)))+((((v46)*(nan)))/(100)))+((((v47)*(nan)))/(100)))+((((v48)*(nan)))/(100)))+((((v49)*(nan)))/(100)))+((((v50)*(nan)))/(100)))+((((v51)*(nan)))/(100)))+((((v52)*(nan)))/(100)))+((((v53)*(nan)))/(100)))+((((v54)*(nan)))/(100)))+((((v55)*(nan)))/(100)))+((((v56)*(nan)))/(100)))+((((v57)*(nan)))/(100)))+((((v58)*(nan)))/(100)))+((((v59)*(nan)))/(100)))+((((v60)*(nan)))/(100)))+((((v61)*(nan)))/(100)))+((((v62)*(nan)))/(100)))+((((v63)*(nan)))/(100)))+((((v64)*(nan)))/(100)))+((((v65)*(nan)))/(100)))+((((v66)*(nan)))/(100)))+((((v67)*(nan)))/(100)))+((((v68)*(nan)))/(100)))+((((v69)*(nan)))/(100)))+((((v70)*(nan)))/(100)))+((((v71)*(nan)))/(100)))+((((v72)*(nan)))/(100)))+((((v73)*(nan)))/(100)))+((((v74)*(nan)))/(100)))+((((v75)*(nan)))/(100)))+((((v76)*(nan)))/(100)))+((((v77)*(nan)))/(100)))+((((v78)*(nan)))/(100)))+((((v79)*(nan)))/(100)))+((((v80)*(nan)))/(100)))+((((v81)*(nan)))/(100)))+((((v82)*(nan)))/(100)))+((((v83)*(nan)))/(100)))+((((v84)*(nan)))/(100)))+((((v85)*(nan)))/(100)))+((((v86)*(nan)))/(100)))+((((v87)*(nan)))/(100)))+((((v88)*(nan)))/(100)))+((((v89)*(nan)))/(100)))+((((v90)*(nan)))/(100)))+((((v91)*(nan)))/(100)))+((((v92)*(nan)))/(100)))+((((v93)*(nan)))/(100)))+((((v94)*(nan)))/(100)))+((((v95)*(nan)))/(100)))+((((v96)*(nan)))/(100))))/(100))))))/(100))))))*(1)))




2018-12-05 15:52:54,983 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 680.8815963996892), (1, 1, 1)]
2018-12-05 15:52:54,983 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.7057552595311165, 'sio2': 91.62143003582499, 'cost': 0.6728147046439013}
2018-12-05 15:52:57,182 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [0.0, 0.0, 0.0, 0.0, 0.0, 0.6015498, 0.0, 0.0, 0.0, 0.1142943, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1142943, 0.0, 0.0, 0.0, 0.0, 12.5228, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1142943, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1142943, 0.0, 0.0, 0.0, 8.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1142943, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6261399, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6261399, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6261399, 0.0, 11.26373, 8.390973, 0.0, 0.0, 16.14492, 40.0, 0.0, 0.6261399, 0.0]
2018-12-05 15:52:57,182 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['高宝印粉-13_1=[0.0]', '朝鲜粉-13_1=[0.0]', '伊朗粉-13_1=[0.0]', '海南铁粉-13_1=[0.0]', '高返-13_1=[0.0]', '铁泥-13_1=[0.6015498]', '过筛镍矿-13_1=[0.0]', '塞阿里昂粉-13_1=[0.0]', '巴西粗粉-13_1=[0.0]', '重力除尘灰-13_1=[0.1142943]', '水洗铁-13_1=[0.0]', '巴西粗粉-13_3=[0.0]', '还原铁粉-13_3=[0.0]', '高返-13_3=[0.0]', '过筛镍矿-13_3=[0.0]', '塞拉利昂粉-13_3=[0.0]', '巴西卡粉-13_3=[0.0]', '水洗铁-13_3=[0.0]', '马来西亚粉（高硅）-13_3=[0.0]', '印尼粉-13_3=[0.0]', '塞尔维亚粉-13_3=[0.0]', '重力除尘灰-13_3=[0.1142943]', '马来西亚粉（低硅）-13_3=[0.0]', 'PB粉-13_3=[0.0]', '高品澳粉-13_4=[0.0]', '巴西精粉-13_4=[0.0]', '高返-13_4=[12.5228]', '过筛镍矿-13_4=[0.0]', '塞拉利昂（破碎）-13_4=[0.0]', '还原铁粉-13_4=[0.0]', '赛尔维亚粉-13_4=[0.0]', '印尼粉-13_4=[0.0]', '水洗铁-13_4=[0.0]', '马来西亚-13_4=[0.0]', '重力除尘灰-13_4=[0.1142943]', '高品澳粉-13_5=[0.0]', '赛尔维亚粉-13_5=[0.0]', '高返-13_5=[0.0]', '过筛镍矿-13_5=[0.0]', '过筛塞拉利昂粉-13_5=[0.0]', '印尼粉-13_5=[0.0]', '委内瑞拉粉-13_5=[0.0]', '朝鲜铁粉-13_5=[0.0]', '还原铁粉-13_5=[0.0]', '水洗铁-13_5=[0.0]', '重力除尘灰-13_5=[0.1142943]', '高品澳粉-13_12=[0.0]', '赛尔维亚粉-13_12=[0.0]', '高返-13_12=[0.0]', '过筛镍矿-13_12=[8.0]', '过筛塞拉利昂粉-13_12=[0.0]', '印尼粉-13_12=[0.0]', '委内瑞拉粉-13_12=[0.0]', '朝鲜铁粉-13_12=[0.0]', '还原铁粉-13_12=[0.0]', '水洗铁-13_12=[0.0]', '重力除尘灰-13_12=[0.1142943]', '巴西粗粉-14-1=[0.0]', '高品澳粉-14-1=[0.0]', '高返-14-1=[0.0]', '过筛镍矿-14-1=[0.0]', '塞拉利昂粉-14-1=[0.0]', 'FMG低品澳粉-14-1=[0.0]', '氧化铁-14-1=[0.0]', '铁泥-14-1=[0.0]', '干渣粉-14-1=[0.6261399]', '重力除尘灰-14-1=[0.0]', '巴西粗粉-14-3=[0.0]', '高品澳粉-14-3=[0.0]', '高返-14-3=[0.0]', '过筛镍矿-14-3=[0.0]', '塞拉利昂粉-14-3=[0.0]', 'FMG低品澳粉-14-3=[0.0]', '氧化铁-14-3=[0.0]', '铁泥-14-3=[0.0]', '干渣粉-14-3=[0.6261399]', '重力除尘灰-14-3=[0.0]', '巴西粗粉-14-4=[0.0]', '高品澳粉-14-4=[0.0]', '高返-14-4=[0.0]', '过筛镍矿-14-4=[0.0]', '塞拉利昂粉-14-4=[0.0]', 'FMG低品澳粉-14-4=[0.0]', '氧化铁-14-4=[0.0]', '铁泥-14-4=[0.0]', '干渣粉-14-4=[0.6261399]', '重力除尘灰-14-4=[0.0]', '巴西粗粉-14-4=[11.26373]', '高品澳粉-14-12=[8.390973]', '高返-14-12=[0.0]', '过筛镍矿-14-12=[0.0]', '塞拉利昂粉-14-12=[16.14492]', 'FMG低品澳粉-14-12=[40.0]', '铁泥-14-12=[0.0]', '干渣粉-14-12=[0.6261399]', '重力除尘灰-14-12=[0.0]']
2018-12-05 15:52:57,187 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [55.90000191581774, 5.409476629437501, 2.3327288220499995, 0.7708580982428573, 3.0000003276899996, 0.16553407738, 0.067777713201, 0.1648]
2018-12-05 15:52:57,187 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=485.0324705378101, wet_price=nan, obj_price=nan)
2018-12-05 15:52:57,307 __main__ mainTask ERROR = Traceback (most recent call last):
  File "C:/Users/sun/PycharmProjects/optimizationproblem/gekkoSolution/mainTask.py", line 43, in <module>
    lp.write_to_excel()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\gekkoSolution\gekkoProblem.py", line 90, in write_to_excel
    self.data.write_to_excel(excel_file, prices)
  File "C:\Users\sun\PycharmProjects\optimizationproblem\utils\excelParse.py", line 132, in write_to_excel
    worksheet.write(self._var_nums + 3, j, prices.wet_price, cell_format)
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\xlsxwriter\worksheet.py", line 67, in cell_wrapper
    return method(self, *args, **kwargs)
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\xlsxwriter\worksheet.py", line 408, in write
    return self._write(row, col, *args)
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\xlsxwriter\worksheet.py", line 430, in _write
    return self._write_number(row, col, *args)
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\xlsxwriter\worksheet.py", line 562, in _write_number
    "NAN/INF not supported in write_number() "
TypeError: NAN/INF not supported in write_number() without 'nan_inf_to_errors' Workbook() option

2018-12-05 15:57:18,128 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 680.8815963996892), (1, 1, 1)]
2018-12-05 15:57:18,128 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.7057552595311165, 'sio2': 91.62143003582499, 'cost': 0.6728147046439013}
2018-12-05 15:57:20,022 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [0.0, 0.0, 0.0, 0.0, 0.0, 0.6015498, 0.0, 0.0, 0.0, 0.1142943, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1142943, 0.0, 0.0, 0.0, 0.0, 12.5228, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1142943, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1142943, 0.0, 0.0, 0.0, 8.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1142943, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6261399, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6261399, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6261399, 0.0, 11.26373, 8.390973, 0.0, 0.0, 16.14492, 40.0, 0.0, 0.6261399, 0.0]
2018-12-05 15:57:20,022 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['高宝印粉-13_1=[0.0]', '朝鲜粉-13_1=[0.0]', '伊朗粉-13_1=[0.0]', '海南铁粉-13_1=[0.0]', '高返-13_1=[0.0]', '铁泥-13_1=[0.6015498]', '过筛镍矿-13_1=[0.0]', '塞阿里昂粉-13_1=[0.0]', '巴西粗粉-13_1=[0.0]', '重力除尘灰-13_1=[0.1142943]', '水洗铁-13_1=[0.0]', '巴西粗粉-13_3=[0.0]', '还原铁粉-13_3=[0.0]', '高返-13_3=[0.0]', '过筛镍矿-13_3=[0.0]', '塞拉利昂粉-13_3=[0.0]', '巴西卡粉-13_3=[0.0]', '水洗铁-13_3=[0.0]', '马来西亚粉（高硅）-13_3=[0.0]', '印尼粉-13_3=[0.0]', '塞尔维亚粉-13_3=[0.0]', '重力除尘灰-13_3=[0.1142943]', '马来西亚粉（低硅）-13_3=[0.0]', 'PB粉-13_3=[0.0]', '高品澳粉-13_4=[0.0]', '巴西精粉-13_4=[0.0]', '高返-13_4=[12.5228]', '过筛镍矿-13_4=[0.0]', '塞拉利昂（破碎）-13_4=[0.0]', '还原铁粉-13_4=[0.0]', '赛尔维亚粉-13_4=[0.0]', '印尼粉-13_4=[0.0]', '水洗铁-13_4=[0.0]', '马来西亚-13_4=[0.0]', '重力除尘灰-13_4=[0.1142943]', '高品澳粉-13_5=[0.0]', '赛尔维亚粉-13_5=[0.0]', '高返-13_5=[0.0]', '过筛镍矿-13_5=[0.0]', '过筛塞拉利昂粉-13_5=[0.0]', '印尼粉-13_5=[0.0]', '委内瑞拉粉-13_5=[0.0]', '朝鲜铁粉-13_5=[0.0]', '还原铁粉-13_5=[0.0]', '水洗铁-13_5=[0.0]', '重力除尘灰-13_5=[0.1142943]', '高品澳粉-13_12=[0.0]', '赛尔维亚粉-13_12=[0.0]', '高返-13_12=[0.0]', '过筛镍矿-13_12=[8.0]', '过筛塞拉利昂粉-13_12=[0.0]', '印尼粉-13_12=[0.0]', '委内瑞拉粉-13_12=[0.0]', '朝鲜铁粉-13_12=[0.0]', '还原铁粉-13_12=[0.0]', '水洗铁-13_12=[0.0]', '重力除尘灰-13_12=[0.1142943]', '巴西粗粉-14-1=[0.0]', '高品澳粉-14-1=[0.0]', '高返-14-1=[0.0]', '过筛镍矿-14-1=[0.0]', '塞拉利昂粉-14-1=[0.0]', 'FMG低品澳粉-14-1=[0.0]', '氧化铁-14-1=[0.0]', '铁泥-14-1=[0.0]', '干渣粉-14-1=[0.6261399]', '重力除尘灰-14-1=[0.0]', '巴西粗粉-14-3=[0.0]', '高品澳粉-14-3=[0.0]', '高返-14-3=[0.0]', '过筛镍矿-14-3=[0.0]', '塞拉利昂粉-14-3=[0.0]', 'FMG低品澳粉-14-3=[0.0]', '氧化铁-14-3=[0.0]', '铁泥-14-3=[0.0]', '干渣粉-14-3=[0.6261399]', '重力除尘灰-14-3=[0.0]', '巴西粗粉-14-4=[0.0]', '高品澳粉-14-4=[0.0]', '高返-14-4=[0.0]', '过筛镍矿-14-4=[0.0]', '塞拉利昂粉-14-4=[0.0]', 'FMG低品澳粉-14-4=[0.0]', '氧化铁-14-4=[0.0]', '铁泥-14-4=[0.0]', '干渣粉-14-4=[0.6261399]', '重力除尘灰-14-4=[0.0]', '巴西粗粉-14-4=[11.26373]', '高品澳粉-14-12=[8.390973]', '高返-14-12=[0.0]', '过筛镍矿-14-12=[0.0]', '塞拉利昂粉-14-12=[16.14492]', 'FMG低品澳粉-14-12=[40.0]', '铁泥-14-12=[0.0]', '干渣粉-14-12=[0.6261399]', '重力除尘灰-14-12=[0.0]']
2018-12-05 15:57:20,027 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [55.90000191581774, 5.409476629437501, 2.3327288220499995, 0.7708580982428573, 3.0000003276899996, 0.16553407738, 0.067777713201, 0.1648]
2018-12-05 15:57:20,027 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=485.0324705378101, wet_price=485.0324705378101, obj_price=485.0324705378101)
2018-12-05 17:47:40,887 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 680.8815963996892), (1, 1, 1)]
2018-12-05 17:47:40,887 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.7057552595311165, 'sio2': 91.62143003582499, 'cost': 0.6728147046439013}
2018-12-05 17:47:43,134 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [0.0, 0.0, 0.0, 0.0, 0.0, 0.6015498, 0.0, 0.0, 0.0, 0.1142943, 0.0, 0.0, 0.0, 6.296477, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1142943, 0.0, 0.0, 0.0, 0.0, 6.226321, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1142943, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1142943, 0.0, 0.0, 0.0, 8.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1142943, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6261399, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6261399, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6261399, 0.0, 11.26373, 8.390973, 0.0, 0.0, 16.14492, 40.0, 0.0, 0.6261399, 0.0]
2018-12-05 17:47:43,134 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['高宝印粉-13_1=[0.0]', '朝鲜粉-13_1=[0.0]', '伊朗粉-13_1=[0.0]', '海南铁粉-13_1=[0.0]', '高返-13_1=[0.0]', '铁泥-13_1=[0.6015498]', '过筛镍矿-13_1=[0.0]', '塞阿里昂粉-13_1=[0.0]', '巴西粗粉-13_1=[0.0]', '重力除尘灰-13_1=[0.1142943]', '水洗铁-13_1=[0.0]', '巴西粗粉-13_3=[0.0]', '还原铁粉-13_3=[0.0]', '高返-13_3=[6.296477]', '过筛镍矿-13_3=[0.0]', '塞拉利昂粉-13_3=[0.0]', '巴西卡粉-13_3=[0.0]', '水洗铁-13_3=[0.0]', '马来西亚粉（高硅）-13_3=[0.0]', '印尼粉-13_3=[0.0]', '塞尔维亚粉-13_3=[0.0]', '重力除尘灰-13_3=[0.1142943]', '马来西亚粉（低硅）-13_3=[0.0]', 'PB粉-13_3=[0.0]', '高品澳粉-13_4=[0.0]', '巴西精粉-13_4=[0.0]', '高返-13_4=[6.226321]', '过筛镍矿-13_4=[0.0]', '塞拉利昂（破碎）-13_4=[0.0]', '还原铁粉-13_4=[0.0]', '赛尔维亚粉-13_4=[0.0]', '印尼粉-13_4=[0.0]', '水洗铁-13_4=[0.0]', '马来西亚-13_4=[0.0]', '重力除尘灰-13_4=[0.1142943]', '高品澳粉-13_5=[0.0]', '赛尔维亚粉-13_5=[0.0]', '高返-13_5=[0.0]', '过筛镍矿-13_5=[0.0]', '过筛塞拉利昂粉-13_5=[0.0]', '印尼粉-13_5=[0.0]', '委内瑞拉粉-13_5=[0.0]', '朝鲜铁粉-13_5=[0.0]', '还原铁粉-13_5=[0.0]', '水洗铁-13_5=[0.0]', '重力除尘灰-13_5=[0.1142943]', '高品澳粉-13_12=[0.0]', '赛尔维亚粉-13_12=[0.0]', '高返-13_12=[0.0]', '过筛镍矿-13_12=[8.0]', '过筛塞拉利昂粉-13_12=[0.0]', '印尼粉-13_12=[0.0]', '委内瑞拉粉-13_12=[0.0]', '朝鲜铁粉-13_12=[0.0]', '还原铁粉-13_12=[0.0]', '水洗铁-13_12=[0.0]', '重力除尘灰-13_12=[0.1142943]', '巴西粗粉-14-1=[0.0]', '高品澳粉-14-1=[0.0]', '高返-14-1=[0.0]', '过筛镍矿-14-1=[0.0]', '塞拉利昂粉-14-1=[0.0]', 'FMG低品澳粉-14-1=[0.0]', '氧化铁-14-1=[0.0]', '铁泥-14-1=[0.0]', '干渣粉-14-1=[0.6261399]', '重力除尘灰-14-1=[0.0]', '巴西粗粉-14-3=[0.0]', '高品澳粉-14-3=[0.0]', '高返-14-3=[0.0]', '过筛镍矿-14-3=[0.0]', '塞拉利昂粉-14-3=[0.0]', 'FMG低品澳粉-14-3=[0.0]', '氧化铁-14-3=[0.0]', '铁泥-14-3=[0.0]', '干渣粉-14-3=[0.6261399]', '重力除尘灰-14-3=[0.0]', '巴西粗粉-14-4=[0.0]', '高品澳粉-14-4=[0.0]', '高返-14-4=[0.0]', '过筛镍矿-14-4=[0.0]', '塞拉利昂粉-14-4=[0.0]', 'FMG低品澳粉-14-4=[0.0]', '氧化铁-14-4=[0.0]', '铁泥-14-4=[0.0]', '干渣粉-14-4=[0.6261399]', '重力除尘灰-14-4=[0.0]', '巴西粗粉-14-4=[11.26373]', '高品澳粉-14-12=[8.390973]', '高返-14-12=[0.0]', '过筛镍矿-14-12=[0.0]', '塞拉利昂粉-14-12=[16.14492]', 'FMG低品澳粉-14-12=[40.0]', '铁泥-14-12=[0.0]', '干渣粉-14-12=[0.6261399]', '重力除尘灰-14-12=[0.0]']
2018-12-05 17:47:43,139 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [55.90000087581773, 5.4094765194375, 2.332728622049999, 0.7708580382428574, 3.00000027169, 0.16553406137999999, 0.067777712121, 0.1648]
2018-12-05 17:47:43,140 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=485.0324605378101, wet_price=485.0324605378101, obj_price=485.0324605378101)
2018-12-05 17:47:43,562 __main__ mainTask ERROR = Traceback (most recent call last):
  File "C:/Users/sun/PycharmProjects/optimizationproblem/gekkoSolution/mainTask.py", line 42, in <module>
    lp.write_to_excel()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\gekkoSolution\gekkoProblem.py", line 91, in write_to_excel
    self.data.write_to_excel(excel_file, prices)
  File "C:\Users\sun\PycharmProjects\optimizationproblem\utils\excelParse.py", line 136, in write_to_excel
    writer.save()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\pandas\io\excel.py", line 1732, in save
    return self.book.close()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\xlsxwriter\workbook.py", line 306, in close
    self._store_workbook()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\xlsxwriter\workbook.py", line 655, in _store_workbook
    allowZip64=self.allow_zip64)
  File "C:\Users\sun\AppData\Local\Programs\Python\Python37-32\lib\zipfile.py", line 1182, in __init__
    self.fp = io.open(file, filemode)
PermissionError: [Errno 13] Permission denied: '../data/result.xlsx'

2018-12-05 17:48:10,196 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 680.8815963996892), (1, 1, 1)]
2018-12-05 17:48:10,196 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.7057552595311165, 'sio2': 91.62143003582499, 'cost': 0.6728147046439013}
2018-12-05 17:48:10,381 __main__ mainTask ERROR = Traceback (most recent call last):
  File "C:/Users/sun/PycharmProjects/optimizationproblem/gekkoSolution/mainTask.py", line 37, in <module>
    lp.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\gekkoSolution\gekkoProblem.py", line 46, in solve
    self.prob.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\gekko\gekko.py", line 682, in solve
    raise Exception(apm_error)
Exception:  @error: Max Equation Length
 Error with line number:  134
 minimize((0+((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((((910.99486005)*(v1)))*(1.0)))/(100)))+((((((853.351)*(v2)))*(1.0)))/(100)))+((((((1039.8935286)*(v3)))*(1.0)))/(100)))+((((((770.6612881)*(v4)))*(1.0)))/(100)))+((((((500)*(v5)))*(1.0)))/(100)))+((((((500)*(v6)))*(1.0)))/(100)))+((((((826.195501934952)*(v7)))*(1.0)))/(100)))+((((((989.88716)*(v8)))*(1.0)))/(100)))+((((((1130.5194048)*(v9)))*(1.0)))/(100)))+((((((500)*(v10)))*(1.0)))/(100)))+((((((300)*(v11)))*(1.0)))/(100)))+((((((1069.8162944)*(v12)))*(1.0)))/(100)))+((((((1245.56)*(v13)))*(1.0)))/(100)))+((((((500)*(v14)))*(1.0)))/(100)))+((((((825.711413030191)*(v15)))*(1.0)))/(100)))+((((((1004.658478)*(v16)))*(1.0)))/(100)))+((((((1129.8570048)*(v17)))*(1.0)))/(100)))+((((((300)*(v18)))*(1.0)))/(100)))+((((((801.67994)*(v19)))*(1.0)))/(100)))+((((((834.2588482)*(v20)))*(1.0)))/(100)))+((((((991.6951428)*(v21)))*(1.0)))/(100)))+((((((500)*(v22)))*(1.0)))/(100)))+((((((886.96504)*(v23)))*(1.0)))/(100)))+((((((1049.00673)*(v24)))*(1.0)))/(100)))+((((((1059.7526526)*(v25)))*(1.0)))/(100)))+((((((1097.7898072)*(v26)))*(1.0)))/(100)))+((((((500)*(v27)))*(1.0)))/(100)))+((((((825.711413030191)*(v28)))*(1.0)))/(100)))+((((((1004.658478)*(v29)))*(1.0)))/(100)))+((((((1241.92)*(v30)))*(1.0)))/(100)))+((((((941.547504)*(v31)))*(1.0)))/(100)))+((((((826.7537594)*(v32)))*(1.0)))/(100)))+((((((300)*(v33)))*(1.0)))/(100)))+((((((775.7532696)*(v34)))*(1.0)))/(100)))+((((((500)*(v35)))*(1.0)))/(100)))+((((((944.28)*(v36)))*(1.0)))/(100)))+((((((612.08)*(v37)))*(1.0)))/(100)))+((((((500)*(v38)))*(1.0)))/(100)))+((((((473.38)*(v39)))*(1.0)))/(100)))+((((((925.96)*(v40)))*(1.0)))/(100)))+((((((484.27)*(v41)))*(1.0)))/(100)))+((((((780.55)*(v42)))*(1.0)))/(100)))+((((((434.35)*(v43)))*(1.0)))/(100)))+((((((1228.65)*(v44)))*(1.0)))/(100)))+((((((300)*(v45)))*(1.0)))/(100)))+((((((500)*(v46)))*(1.0)))/(100)))+((((((964.82)*(v47)))*(1.0)))/(100)))+((((((586.286222115809)*(v48)))*(1.0)))/(100)))+((((((500)*(v49)))*(1.0)))/(100)))+((((((408.863293435074)*(v50)))*(1.0)))/(100)))+((((((925.96)*(v51)))*(1.0)))/(100)))+((((((405.863293435074)*(v52)))*(1.0)))/(100)))+((((((910.96)*(v53)))*(1.0)))/(100)))+((((((450.95)*(v54)))*(1.0)))/(100)))+((((((1242.28973578925)*(v55)))*(1.0)))/(100)))+((((((300)*(v56)))*(1.0)))/(100)))+((((((500)*(v57)))*(1.0)))/(100)))+((((((773.95)*(v58)))*(1.0)))/(100)))+((((((793.97)*(v59)))*(1.0)))/(100)))+((((((500)*(v60)))*(1.0)))/(100)))+((((((634.53)*(v61)))*(1.0)))/(100)))+((((((746.2)*(v62)))*(1.0)))/(100)))+((((((747.1)*(v63)))*(1.0)))/(100)))+((((((800)*(v64)))*(1.0)))/(100)))+((((((500)*(v65)))*(1.0)))/(100)))+((((((100)*(v66)))*(1.0)))/(100)))+((((((500)*(v67)))*(1.0)))/(100)))+((((((773.95)*(v68)))*(1.0)))/(100)))+((((((793.97)*(v69)))*(1.0)))/(100)))+((((((500)*(v70)))*(1.0)))/(100)))+((((((634.53)*(v71)))*(1.0)))/(100)))+((((((746.2)*(v72)))*(1.0)))/(100)))+((((((747.1)*(v73)))*(1.0)))/(100)))+((((((800)*(v74)))*(1.0)))/(100)))+((((((500)*(v75)))*(1.0)))/(100)))+((((((100)*(v76)))*(1.0)))/(100)))+((((((500)*(v77)))*(1.0)))/(100)))+((((((773.95)*(v78)))*(1.0)))/(100)))+((((((793.97)*(v79)))*(1.0)))/(100)))+((((((500)*(v80)))*(1.0)))/(100)))+((((((634.53)*(v81)))*(1.0)))/(100)))+((((((746.2)*(v82)))*(1.0)))/(100)))+((((((747.1)*(v83)))*(1.0)))/(100)))+((((((800)*(v84)))*(1.0)))/(100)))+((((((500)*(v85)))*(1.0)))/(100)))+((((((100)*(v86)))*(1.0)))/(100)))+((((((500)*(v87)))*(1.0)))/(100)))+((((((566.5)*(v88)))*(1.0)))/(100)))+((((((600.5)*(v89)))*(1.0)))/(100)))+((((((500)*(v90)))*(1.0)))/(100)))+((((((431.41)*(v91)))*(1.0)))/(100)))+((((((498.015344202792)*(v92)))*(1.0)))/(100)))+((((((466.846846846847)*(v93)))*(1.0)))/(100)))+((((((500)*(v94)))*(1.0)))/(100)))+((((((100)*(v95)))*(1.0)))/(100)))+((((((500)*(v96)))*(1.0)))/(100))))/((1-((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((v1)*(0)))/(100)))+((((v2)*(0)))/(100)))+((((v3)*(0)))/(100)))+((((v4)*(0)))/(100)))+((((v5)*(0)))/(100)))+((((v6)*(0)))/(100)))+((((v7)*(0)))/(100)))+((((v8)*(0)))/(100)))+((((v9)*(0)))/(100)))+((((v10)*(0)))/(100)))+((((v11)*(0)))/(100)))+((((v12)*(0)))/(100)))+((((v13)*(0)))/(100)))+((((v14)*(0)))/(100)))+((((v15)*(0)))/(100)))+((((v16)*(0)))/(100)))+((((v17)*(0)))/(100)))+((((v18)*(0)))/(100)))+((((v19)*(0)))/(100)))+((((v20)*(0)))/(100)))+((((v21)*(0)))/(100)))+((((v22)*(0)))/(100)))+((((v23)*(0)))/(100)))+((((v24)*(0)))/(100)))+((((v25)*(0)))/(100)))+((((v26)*(0)))/(100)))+((((v27)*(0)))/(100)))+((((v28)*(0)))/(100)))+((((v29)*(0)))/(100)))+((((v30)*(0)))/(100)))+((((v31)*(0)))/(100)))+((((v32)*(0)))/(100)))+((((v33)*(0)))/(100)))+((((v34)*(0)))/(100)))+((((v35)*(0)))/(100)))+((((v36)*(0)))/(100)))+((((v37)*(0)))/(100)))+((((v38)*(0)))/(100)))+((((v39)*(0)))/(100)))+((((v40)*(0)))/(100)))+((((v41)*(0)))/(100)))+((((v42)*(0)))/(100)))+((((v43)*(0)))/(100)))+((((v44)*(0)))/(100)))+((((v45)*(0)))/(100)))+((((v46)*(0)))/(100)))+((((v47)*(0)))/(100)))+((((v48)*(0)))/(100)))+((((v49)*(0)))/(100)))+((((v50)*(0)))/(100)))+((((v51)*(0)))/(100)))+((((v52)*(0)))/(100)))+((((v53)*(0)))/(100)))+((((v54)*(0)))/(100)))+((((v55)*(0)))/(100)))+((((v56)*(0)))/(100)))+((((v57)*(0)))/(100)))+((((v58)*(0)))/(100)))+((((v59)*(0)))/(100)))+((((v60)*(0)))/(100)))+((((v61)*(0)))/(100)))+((((v62)*(0)))/(100)))+((((v63)*(0)))/(100)))+((((v64)*(0)))/(100)))+((((v65)*(0)))/(100)))+((((v66)*(0)))/(100)))+((((v67)*(0)))/(100)))+((((v68)*(0)))/(100)))+((((v69)*(0)))/(100)))+((((v70)*(0)))/(100)))+((((v71)*(0)))/(100)))+((((v72)*(0)))/(100)))+((((v73)*(0)))/(100)))+((((v74)*(0)))/(100)))+((((v75)*(0)))/(100)))+((((v76)*(0)))/(100)))+((((v77)*(0)))/(100)))+((((v78)*(0)))/(100)))+((((v79)*(0)))/(100)))+((((v80)*(0)))/(100)))+((((v81)*(0)))/(100)))+((((v82)*(0)))/(100)))+((((v83)*(0)))/(100)))+((((v84)*(0)))/(100)))+((((v85)*(0)))/(100)))+((((v86)*(0)))/(100)))+((((v87)*(0)))/(100)))+((((v88)*(0)))/(100)))+((((v89)*(0)))/(100)))+((((v90)*(0)))/(100)))+((((v91)*(0)))/(100)))+((((v92)*(0)))/(100)))+((((v93)*(0)))/(100)))+((((v94)*(0)))/(100)))+((((v95)*(0)))/(100)))+((((v96)*(0)))/(100))))/(100))))))/((1-((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((((0)*(v1)))*(1.0)))/(100)))+((((((0)*(v2)))*(1.0)))/(100)))+((((((0)*(v3)))*(1.0)))/(100)))+((((((0)*(v4)))*(1.0)))/(100)))+((((((0)*(v5)))*(1.0)))/(100)))+((((((0)*(v6)))*(1.0)))/(100)))+((((((0)*(v7)))*(1.0)))/(100)))+((((((0)*(v8)))*(1.0)))/(100)))+((((((0)*(v9)))*(1.0)))/(100)))+((((((0)*(v10)))*(1.0)))/(100)))+((((((0)*(v11)))*(1.0)))/(100)))+((((((0)*(v12)))*(1.0)))/(100)))+((((((0)*(v13)))*(1.0)))/(100)))+((((((0)*(v14)))*(1.0)))/(100)))+((((((0)*(v15)))*(1.0)))/(100)))+((((((0)*(v16)))*(1.0)))/(100)))+((((((0)*(v17)))*(1.0)))/(100)))+((((((0)*(v18)))*(1.0)))/(100)))+((((((0)*(v19)))*(1.0)))/(100)))+((((((0)*(v20)))*(1.0)))/(100)))+((((((0)*(v21)))*(1.0)))/(100)))+((((((0)*(v22)))*(1.0)))/(100)))+((((((0)*(v23)))*(1.0)))/(100)))+((((((0)*(v24)))*(1.0)))/(100)))+((((((0)*(v25)))*(1.0)))/(100)))+((((((0)*(v26)))*(1.0)))/(100)))+((((((0)*(v27)))*(1.0)))/(100)))+((((((0)*(v28)))*(1.0)))/(100)))+((((((0)*(v29)))*(1.0)))/(100)))+((((((0)*(v30)))*(1.0)))/(100)))+((((((0)*(v31)))*(1.0)))/(100)))+((((((0)*(v32)))*(1.0)))/(100)))+((((((0)*(v33)))*(1.0)))/(100)))+((((((0)*(v34)))*(1.0)))/(100)))+((((((0)*(v35)))*(1.0)))/(100)))+((((((0)*(v36)))*(1.0)))/(100)))+((((((0)*(v37)))*(1.0)))/(100)))+((((((0)*(v38)))*(1.0)))/(100)))+((((((0)*(v39)))*(1.0)))/(100)))+((((((0)*(v40)))*(1.0)))/(100)))+((((((0)*(v41)))*(1.0)))/(100)))+((((((0)*(v42)))*(1.0)))/(100)))+((((((0)*(v43)))*(1.0)))/(100)))+((((((0)*(v44)))*(1.0)))/(100)))+((((((0)*(v45)))*(1.0)))/(100)))+((((((0)*(v46)))*(1.0)))/(100)))+((((((0)*(v47)))*(1.0)))/(100)))+((((((0)*(v48)))*(1.0)))/(100)))+((((((0)*(v49)))*(1.0)))/(100)))+((((((0)*(v50)))*(1.0)))/(100)))+((((((0)*(v51)))*(1.0)))/(100)))+((((((0)*(v52)))*(1.0)))/(100)))+((((((0)*(v53)))*(1.0)))/(100)))+((((((0)*(v54)))*(1.0)))/(100)))+((((((0)*(v55)))*(1.0)))/(100)))+((((((0)*(v56)))*(1.0)))/(100)))+((((((0)*(v57)))*(1.0)))/(100)))+((((((0)*(v58)))*(1.0)))/(100)))+((((((0)*(v59)))*(1.0)))/(100)))+((((((0)*(v60)))*(1.0)))/(100)))+((((((0)*(v61)))*(1.0)))/(100)))+((((((0)*(v62)))*(1.0)))/(100)))+((((((0)*(v63)))*(1.0)))/(100)))+((((((0)*(v64)))*(1.0)))/(100)))+((((((0)*(v65)))*(1.0)))/(100)))+((((((0)*(v66)))*(1.0)))/(100)))+((((((0)*(v67)))*(1.0)))/(100)))+((((((0)*(v68)))*(1.0)))/(100)))+((((((0)*(v69)))*(1.0)))/(100)))+((((((0)*(v70)))*(1.0)))/(100)))+((((((0)*(v71)))*(1.0)))/(100)))+((((((0)*(v72)))*(1.0)))/(100)))+((((((0)*(v73)))*(1.0)))/(100)))+((((((0)*(v74)))*(1.0)))/(100)))+((((((0)*(v75)))*(1.0)))/(100)))+((((((0)*(v76)))*(1.0)))/(100)))+((((((0)*(v77)))*(1.0)))/(100)))+((((((0)*(v78)))*(1.0)))/(100)))+((((((0)*(v79)))*(1.0)))/(100)))+((((((0)*(v80)))*(1.0)))/(100)))+((((((0)*(v81)))*(1.0)))/(100)))+((((((0)*(v82)))*(1.0)))/(100)))+((((((0)*(v83)))*(1.0)))/(100)))+((((((0)*(v84)))*(1.0)))/(100)))+((((((0)*(v85)))*(1.0)))/(100)))+((((((0)*(v86)))*(1.0)))/(100)))+((((((0)*(v87)))*(1.0)))/(100)))+((((((0)*(v88)))*(1.0)))/(100)))+((((((0)*(v89)))*(1.0)))/(100)))+((((((0)*(v90)))*(1.0)))/(100)))+((((((0)*(v91)))*(1.0)))/(100)))+((((((0)*(v92)))*(1.0)))/(100)))+((((((0)*(v93)))*(1.0)))/(100)))+((((((0)*(v94)))*(1.0)))/(100)))+((((((0)*(v95)))*(1.0)))/(100)))+((((((0)*(v96)))*(1.0)))/(100))))/((1-((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((v1)*(0)))/(100)))+((((v2)*(0)))/(100)))+((((v3)*(0)))/(100)))+((((v4)*(0)))/(100)))+((((v5)*(0)))/(100)))+((((v6)*(0)))/(100)))+((((v7)*(0)))/(100)))+((((v8)*(0)))/(100)))+((((v9)*(0)))/(100)))+((((v10)*(0)))/(100)))+((((v11)*(0)))/(100)))+((((v12)*(0)))/(100)))+((((v13)*(0)))/(100)))+((((v14)*(0)))/(100)))+((((v15)*(0)))/(100)))+((((v16)*(0)))/(100)))+((((v17)*(0)))/(100)))+((((v18)*(0)))/(100)))+((((v19)*(0)))/(100)))+((((v20)*(0)))/(100)))+((((v21)*(0)))/(100)))+((((v22)*(0)))/(100)))+((((v23)*(0)))/(100)))+((((v24)*(0)))/(100)))+((((v25)*(0)))/(100)))+((((v26)*(0)))/(100)))+((((v27)*(0)))/(100)))+((((v28)*(0)))/(100)))+((((v29)*(0)))/(100)))+((((v30)*(0)))/(100)))+((((v31)*(0)))/(100)))+((((v32)*(0)))/(100)))+((((v33)*(0)))/(100)))+((((v34)*(0)))/(100)))+((((v35)*(0)))/(100)))+((((v36)*(0)))/(100)))+((((v37)*(0)))/(100)))+((((v38)*(0)))/(100)))+((((v39)*(0)))/(100)))+((((v40)*(0)))/(100)))+((((v41)*(0)))/(100)))+((((v42)*(0)))/(100)))+((((v43)*(0)))/(100)))+((((v44)*(0)))/(100)))+((((v45)*(0)))/(100)))+((((v46)*(0)))/(100)))+((((v47)*(0)))/(100)))+((((v48)*(0)))/(100)))+((((v49)*(0)))/(100)))+((((v50)*(0)))/(100)))+((((v51)*(0)))/(100)))+((((v52)*(0)))/(100)))+((((v53)*(0)))/(100)))+((((v54)*(0)))/(100)))+((((v55)*(0)))/(100)))+((((v56)*(0)))/(100)))+((((v57)*(0)))/(100)))+((((v58)*(0)))/(100)))+((((v59)*(0)))/(100)))+((((v60)*(0)))/(100)))+((((v61)*(0)))/(100)))+((((v62)*(0)))/(100)))+((((v63)*(0)))/(100)))+((((v64)*(0)))/(100)))+((((v65)*(0)))/(100)))+((((v66)*(0)))/(100)))+((((v67)*(0)))/(100)))+((((v68)*(0)))/(100)))+((((v69)*(0)))/(100)))+((((v70)*(0)))/(100)))+((((v71)*(0)))/(100)))+((((v72)*(0)))/(100)))+((((v73)*(0)))/(100)))+((((v74)*(0)))/(100)))+((((v75)*(0)))/(100)))+((((v76)*(0)))/(100)))+((((v77)*(0)))/(100)))+((((v78)*(0)))/(100)))+((((v79)*(0)))/(100)))+((((v80)*(0)))/(100)))+((((v81)*(0)))/(100)))+((((v82)*(0)))/(100)))+((((v83)*(0)))/(100)))+((((v84)*(0)))/(100)))+((((v85)*(0)))/(100)))+((((v86)*(0)))/(100)))+((((v87)*(0)))/(100)))+((((v88)*(0)))/(100)))+((((v89)*(0)))/(100)))+((((v90)*(0)))/(100)))+((((v91)*(0)))/(100)))+((((v92)*(0)))/(100)))+((((v93)*(0)))/(100)))+((((v94)*(0)))/(100)))+((((v95)*(0)))/(100)))+((((v96)*(0)))/(100))))/(100))))))/(100))))))*(0.6728147046439013)))+(((-((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((((v1)*(53.3775)))*(100)))/(100)))+((((((v2)*(50)))*(100)))/(100)))+((((((v3)*(60.93)))*(100)))/(100)))+((((((v4)*(45.155)))*(100)))/(100)))+((((((v5)*(52)))*(100)))/(100)))+((((((v6)*(52.92)))*(100)))/(100)))+((((((v7)*(48.4088904761905)))*(100)))/(100)))+((((((v8)*(58)))*(100)))/(100)))+((((((v9)*(66.24)))*(100)))/(100)))+((((((v10)*(35.5541666666667)))*(100)))/(100)))+((((((v11)*(36.763)))*(100)))/(100)))+((((((v12)*(62.72)))*(100)))/(100)))+((((((v13)*(70)))*(100)))/(100)))+((((((v14)*(52)))*(100)))/(100)))+((((((v15)*(48.4088904761905)))*(100)))/(100)))+((((((v16)*(58.9)))*(100)))/(100)))+((((((v17)*(66.24)))*(100)))/(100)))+((((((v18)*(42)))*(100)))/(100)))+((((((v19)*(47)))*(100)))/(100)))+((((((v20)*(48.91)))*(100)))/(100)))+((((((v21)*(58.14)))*(100)))/(100)))+((((((v22)*(35.5541666666667)))*(100)))/(100)))+((((((v23)*(52)))*(100)))/(100)))+((((((v24)*(61.5)))*(100)))/(100)))+((((((v25)*(62.13)))*(100)))/(100)))+((((((v26)*(64.36)))*(100)))/(100)))+((((((v27)*(52)))*(100)))/(100)))+((((((v28)*(48.4088904761905)))*(100)))/(100)))+((((((v29)*(58.9)))*(100)))/(100)))+((((((v30)*(69.65)))*(100)))/(100)))+((((((v31)*(55.2)))*(100)))/(100)))+((((((v32)*(48.47)))*(100)))/(100)))+((((((v33)*(42.23)))*(100)))/(100)))+((((((v34)*(45.48)))*(100)))/(100)))+((((((v35)*(35.5541666666667)))*(100)))/(100)))+((((((v36)*(61.5)))*(100)))/(100)))+((((((v37)*(55.2)))*(100)))/(100)))+((((((v38)*(52)))*(100)))/(100)))+((((((v39)*(48.4088904761905)))*(100)))/(100)))+((((((v40)*(58.2)))*(100)))/(100)))+((((((v41)*(48.47)))*(100)))/(100)))+((((((v42)*(57.26)))*(100)))/(100)))+((((((v43)*(50)))*(100)))/(100)))+((((((v44)*(86)))*(100)))/(100)))+((((((v45)*(42.23)))*(100)))/(100)))+((((((v46)*(35.5541666666667)))*(100)))/(100)))+((((((v47)*(61.5)))*(100)))/(100)))+((((((v48)*(55.2)))*(100)))/(100)))+((((((v49)*(52)))*(100)))/(100)))+((((((v50)*(48.4088904761905)))*(100)))/(100)))+((((((v51)*(58.2)))*(100)))/(100)))+((((((v52)*(48.47)))*(100)))/(100)))+((((((v53)*(57.26)))*(100)))/(100)))+((((((v54)*(50)))*(100)))/(100)))+((((((v55)*(86)))*(100)))/(100)))+((((((v56)*(42.23)))*(100)))/(100)))+((((((v57)*(35.5541666666667)))*(100)))/(100)))+((((((v58)*(59.95)))*(100)))/(100)))+((((((v59)*(61.5)))*(100)))/(100)))+((((((v60)*(52)))*(100)))/(100)))+((((((v61)*(49.15)))*(100)))/(100)))+((((((v62)*(57.8)))*(100)))/(100)))+((((((v63)*(57.87)))*(100)))/(100)))+((((((v64)*(69.5)))*(100)))/(100)))+((((((v65)*(51.9)))*(100)))/(100)))+((((((v66)*(24)))*(100)))/(100)))+((((((v67)*(34.5)))*(100)))/(100)))+((((((v68)*(59.95)))*(100)))/(100)))+((((((v69)*(61.5)))*(100)))/(100)))+((((((v70)*(52)))*(100)))/(100)))+((((((v71)*(49.15)))*(100)))/(100)))+((((((v72)*(57.8)))*(100)))/(100)))+((((((v73)*(57.87)))*(100)))/(100)))+((((((v74)*(69.5)))*(100)))/(100)))+((((((v75)*(51.9)))*(100)))/(100)))+((((((v76)*(24)))*(100)))/(100)))+((((((v77)*(34.5)))*(100)))/(100)))+((((((v78)*(59.95)))*(100)))/(100)))+((((((v79)*(61.5)))*(100)))/(100)))+((((((v80)*(52)))*(100)))/(100)))+((((((v81)*(49.15)))*(100)))/(100)))+((((((v82)*(57.8)))*(100)))/(100)))+((((((v83)*(57.87)))*(100)))/(100)))+((((((v84)*(69.5)))*(100)))/(100)))+((((((v85)*(51.9)))*(100)))/(100)))+((((((v86)*(24)))*(100)))/(100)))+((((((v87)*(34.5)))*(100)))/(100)))+((((((v88)*(59.95)))*(100)))/(100)))+((((((v89)*(61.5)))*(100)))/(100)))+((((((v90)*(52)))*(100)))/(100)))+((((((v91)*(49.15)))*(100)))/(100)))+((((((v92)*(57.8)))*(100)))/(100)))+((((((v93)*(57.87)))*(100)))/(100)))+((((((v94)*(51.9)))*(100)))/(100)))+((((((v95)*(24)))*(100)))/(100)))+((((((v96)*(34.5)))*(100)))/(100))))/((100-(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((
 
 APM model error: string > 15000  characters
 Consider breaking up the line into multiple equations
 
 The may also be due to only using newline character CR
   instead of CR LF (for Windows) or LF (for MacOS/Linux) 
 To fix this problem, save APM file with appropriate newline characters
 
 STOPPING...
 


