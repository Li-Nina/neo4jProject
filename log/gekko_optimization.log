2018-12-05 12:04:52,855 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 462.58579900551536), (1, 1, 1)]
2018-12-05 12:04:52,855 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.681366649542781, 'sio2': 91.33144946306368, 'cost': 0.9871838873935551}
2018-12-05 12:04:53,891 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [8.0, 15.0, 12.5228, 8.410955, 12.38867, 40.0, 0.6015498, 2.504559, 0.5714713]
2018-12-05 12:04:53,891 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['巴西粗粉=[8.0]', '高品澳粉=[15.0]', '高返=[12.5228]', '过筛镍矿=[8.410955]', '塞拉利昂粉=[12.38867]', 'FMG低品澳粉=[40.0]', '铁泥=[0.6015498]', '干渣粉=[2.504559]', '重力除尘灰=[0.5714713]']
2018-12-05 12:04:53,893 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [56.17565633128305, 5.199951920097999, 2.6982416318639566, 0.7128133123365088, 3.000000273920421, 0.048518530915677816, 0.06764917045197939, 0.1319273653048831]
2018-12-05 12:04:53,893 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=447.75303320145434, wet_price=492.506582248679, obj_price=530.7026698741009)
2018-12-05 12:05:21,900 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 462.58579900551536), (1, 1, 1)]
2018-12-05 12:05:21,900 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.681366649542781, 'sio2': 91.33144946306368, 'cost': 0.9871838873935551}
2018-12-05 12:05:22,295 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [8.0, 15.0, 12.5228, 8.410955, 12.38867, 40.0, 0.6015498, 2.504559, 0.5714713]
2018-12-05 12:05:22,296 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['巴西粗粉=[8.0]', '高品澳粉=[15.0]', '高返=[12.5228]', '过筛镍矿=[8.410955]', '塞拉利昂粉=[12.38867]', 'FMG低品澳粉=[40.0]', '铁泥=[0.6015498]', '干渣粉=[2.504559]', '重力除尘灰=[0.5714713]']
2018-12-05 12:05:22,298 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [56.17565633128305, 5.199951920097999, 2.6982416318639566, 0.7128133123365088, 3.000000273920421, 0.048518530915677816, 0.06764917045197939, 0.1319273653048831]
2018-12-05 12:05:22,298 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=447.75303320145434, wet_price=492.506582248679, obj_price=530.7026698741009)
2018-12-05 12:41:56,691 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 462.58579900551536), (1, 1, 1)]
2018-12-05 12:41:56,691 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.681366649542781, 'sio2': 91.33144946306368, 'cost': 0.9871838873935551}
2018-12-05 12:50:27,195 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 462.58579900551536), (1, 1, 1)]
2018-12-05 12:50:27,195 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.681366649542781, 'sio2': 91.33144946306368, 'cost': 0.9871838873935551}
2018-12-05 12:50:27,432 __main__ mainTask ERROR = <traceback object at 0x09359F08>
2018-12-05 12:51:03,258 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 462.58579900551536), (1, 1, 1)]
2018-12-05 12:51:03,258 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.681366649542781, 'sio2': 91.33144946306368, 'cost': 0.9871838873935551}
2018-12-05 12:51:03,576 __main__ mainTask ERROR =  @error: Solution Not Found

2018-12-05 12:53:19,424 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 462.58579900551536), (1, 1, 1)]
2018-12-05 12:53:19,424 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.681366649542781, 'sio2': 91.33144946306368, 'cost': 0.9871838873935551}
2018-12-05 12:53:19,672 __main__ mainTask ERROR = Traceback (most recent call last):
  File "C:/Users/sun/PycharmProjects/optimizationproblem/gekkoSolution/mainTask.py", line 37, in <module>
    lp.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\gekkoSolution\gekkoProblem.py", line 46, in solve
    self.prob.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\gekko\gekko.py", line 682, in solve
    raise Exception(apm_error)
Exception:  @error: Solution Not Found


2018-12-05 12:54:48,995 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 462.58579900551536), (1, 1, 1)]
2018-12-05 12:54:48,995 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.681366649542781, 'sio2': 91.33144946306368, 'cost': 0.9871838873935551}
2018-12-05 12:54:49,233 __main__ mainTask ERROR = Traceback (most recent call last):
  File "C:/Users/sun/PycharmProjects/optimizationproblem/gekkoSolution/mainTask.py", line 37, in <module>
    lp.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\gekkoSolution\gekkoProblem.py", line 46, in solve
    self.prob.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\gekko\gekko.py", line 682, in solve
    raise Exception(apm_error)
Exception:  @error: Solution Not Found


2018-12-05 12:56:32,913 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 462.58579900551536), (1, 1, 1)]
2018-12-05 12:56:32,913 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.681366649542781, 'sio2': 91.33144946306368, 'cost': 0.9871838873935551}
2018-12-05 12:56:33,196 __main__ mainTask ERROR = Exception(' @error: Solution Not Found\n')
2018-12-05 12:56:33,197 __main__ mainTask ERROR = Traceback (most recent call last):
  File "C:/Users/sun/PycharmProjects/optimizationproblem/gekkoSolution/mainTask.py", line 37, in <module>
    lp.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\gekkoSolution\gekkoProblem.py", line 46, in solve
    self.prob.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\gekko\gekko.py", line 682, in solve
    raise Exception(apm_error)
Exception:  @error: Solution Not Found


2018-12-05 13:12:27,442 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 462.58579900551536), (1, 1, 1)]
2018-12-05 13:12:27,442 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.681366649542781, 'sio2': 91.33144946306368, 'cost': 0.9871838873935551}
2018-12-05 13:12:27,847 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [8.0, 15.0, 12.5228, 8.410955, 12.38867, 40.0, 0.6015498, 2.504559, 0.5714713]
2018-12-05 13:12:27,847 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['巴西粗粉=[8.0]', '高品澳粉=[15.0]', '高返=[12.5228]', '过筛镍矿=[8.410955]', '塞拉利昂粉=[12.38867]', 'FMG低品澳粉=[40.0]', '铁泥=[0.6015498]', '干渣粉=[2.504559]', '重力除尘灰=[0.5714713]']
2018-12-05 13:12:27,849 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [56.17565633128305, 5.199951920097999, 2.6982416318639566, 0.7128133123365088, 3.000000273920421, 0.048518530915677816, 0.06764917045197939, 0.1319273653048831]
2018-12-05 13:12:27,849 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=447.75303320145434, wet_price=492.506582248679, obj_price=530.7026698741009)
2018-12-05 14:25:18,232 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 462.58579900551536), (1, 1, 1)]
2018-12-05 14:25:18,232 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.681366649542781, 'sio2': 91.33144946306368, 'cost': 0.9871838873935551}
2018-12-05 14:25:19,253 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [8.0, 15.0, 12.5228, 8.410955, 12.38867, 40.0, 0.6015498, 2.504559, 0.5714713]
2018-12-05 14:25:19,253 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['巴西粗粉=[8.0]', '高品澳粉=[15.0]', '高返=[12.5228]', '过筛镍矿=[8.410955]', '塞拉利昂粉=[12.38867]', 'FMG低品澳粉=[40.0]', '铁泥=[0.6015498]', '干渣粉=[2.504559]', '重力除尘灰=[0.5714713]']
2018-12-05 14:25:19,255 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [56.17565633128305, 5.199951920097999, 2.6982416318639566, 0.7128133123365088, 3.000000273920421, 0.048518530915677816, 0.06764917045197939, 0.1319273653048831]
2018-12-05 14:25:19,256 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=447.75303320145434, wet_price=492.506582248679, obj_price=530.7026698741009)
2018-12-05 14:25:19,779 __main__ mainTask ERROR = Traceback (most recent call last):
  File "C:/Users/sun/PycharmProjects/optimizationproblem/gekkoSolution/mainTask.py", line 42, in <module>
    lp.write_to_excel()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\gekkoSolution\gekkoProblem.py", line 90, in write_to_excel
    self.data.write_to_excel(excel_file, prices)
  File "C:\Users\sun\PycharmProjects\optimizationproblem\utils\excelParse.py", line 136, in write_to_excel
    writer.save()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\pandas\io\excel.py", line 1732, in save
    return self.book.close()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\xlsxwriter\workbook.py", line 306, in close
    self._store_workbook()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\xlsxwriter\workbook.py", line 655, in _store_workbook
    allowZip64=self.allow_zip64)
  File "C:\Users\sun\AppData\Local\Programs\Python\Python37-32\lib\zipfile.py", line 1182, in __init__
    self.fp = io.open(file, filemode)
PermissionError: [Errno 13] Permission denied: '../data/result.xlsx'

2018-12-05 14:37:51,702 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 680.8815963996892), (1, 1, 1)]
2018-12-05 14:37:51,702 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.7057552595311165, 'sio2': 91.62143003582499, 'cost': 0.6728147046439013}
2018-12-05 14:37:52,089 __main__ mainTask ERROR = Traceback (most recent call last):
  File "C:/Users/sun/PycharmProjects/optimizationproblem/gekkoSolution/mainTask.py", line 37, in <module>
    lp.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\gekkoSolution\gekkoProblem.py", line 46, in solve
    self.prob.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\gekko\gekko.py", line 682, in solve
    raise Exception(apm_error)
Exception:  @error: Max Equation Length
 Error with line number:  134
 minimize(((0+((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((((910.99486005)*(v1)))*(1.0)))/(100)))+((((((853.351)*(v2)))*(1.0)))/(100)))+((((((1039.8935286)*(v3)))*(1.0)))/(100)))+((((((770.6612881)*(v4)))*(1.0)))/(100)))+((((((500)*(v5)))*(1.0)))/(100)))+((((((500)*(v6)))*(1.0)))/(100)))+((((((826.195501934952)*(v7)))*(1.0)))/(100)))+((((((989.88716)*(v8)))*(1.0)))/(100)))+((((((1130.5194048)*(v9)))*(1.0)))/(100)))+((((((500)*(v10)))*(1.0)))/(100)))+((((((300)*(v11)))*(1.0)))/(100)))+((((((1069.8162944)*(v12)))*(1.0)))/(100)))+((((((1245.56)*(v13)))*(1.0)))/(100)))+((((((500)*(v14)))*(1.0)))/(100)))+((((((825.711413030191)*(v15)))*(1.0)))/(100)))+((((((1004.658478)*(v16)))*(1.0)))/(100)))+((((((1129.8570048)*(v17)))*(1.0)))/(100)))+((((((300)*(v18)))*(1.0)))/(100)))+((((((801.67994)*(v19)))*(1.0)))/(100)))+((((((834.2588482)*(v20)))*(1.0)))/(100)))+((((((991.6951428)*(v21)))*(1.0)))/(100)))+((((((500)*(v22)))*(1.0)))/(100)))+((((((886.96504)*(v23)))*(1.0)))/(100)))+((((((1049.00673)*(v24)))*(1.0)))/(100)))+((((((1059.7526526)*(v25)))*(1.0)))/(100)))+((((((1097.7898072)*(v26)))*(1.0)))/(100)))+((((((500)*(v27)))*(1.0)))/(100)))+((((((825.711413030191)*(v28)))*(1.0)))/(100)))+((((((1004.658478)*(v29)))*(1.0)))/(100)))+((((((1241.92)*(v30)))*(1.0)))/(100)))+((((((941.547504)*(v31)))*(1.0)))/(100)))+((((((826.7537594)*(v32)))*(1.0)))/(100)))+((((((300)*(v33)))*(1.0)))/(100)))+((((((775.7532696)*(v34)))*(1.0)))/(100)))+((((((500)*(v35)))*(1.0)))/(100)))+((((((944.28)*(v36)))*(1.0)))/(100)))+((((((612.08)*(v37)))*(1.0)))/(100)))+((((((500)*(v38)))*(1.0)))/(100)))+((((((473.38)*(v39)))*(1.0)))/(100)))+((((((925.96)*(v40)))*(1.0)))/(100)))+((((((484.27)*(v41)))*(1.0)))/(100)))+((((((780.55)*(v42)))*(1.0)))/(100)))+((((((434.35)*(v43)))*(1.0)))/(100)))+((((((1228.65)*(v44)))*(1.0)))/(100)))+((((((300)*(v45)))*(1.0)))/(100)))+((((((500)*(v46)))*(1.0)))/(100)))+((((((964.82)*(v47)))*(1.0)))/(100)))+((((((586.286222115809)*(v48)))*(1.0)))/(100)))+((((((500)*(v49)))*(1.0)))/(100)))+((((((408.863293435074)*(v50)))*(1.0)))/(100)))+((((((925.96)*(v51)))*(1.0)))/(100)))+((((((405.863293435074)*(v52)))*(1.0)))/(100)))+((((((910.96)*(v53)))*(1.0)))/(100)))+((((((450.95)*(v54)))*(1.0)))/(100)))+((((((1242.28973578925)*(v55)))*(1.0)))/(100)))+((((((300)*(v56)))*(1.0)))/(100)))+((((((500)*(v57)))*(1.0)))/(100)))+((((((773.95)*(v58)))*(1.0)))/(100)))+((((((793.97)*(v59)))*(1.0)))/(100)))+((((((500)*(v60)))*(1.0)))/(100)))+((((((634.53)*(v61)))*(1.0)))/(100)))+((((((746.2)*(v62)))*(1.0)))/(100)))+((((((747.1)*(v63)))*(1.0)))/(100)))+((((((800)*(v64)))*(1.0)))/(100)))+((((((500)*(v65)))*(1.0)))/(100)))+((((((100)*(v66)))*(1.0)))/(100)))+((((((500)*(v67)))*(1.0)))/(100)))+((((((773.95)*(v68)))*(1.0)))/(100)))+((((((793.97)*(v69)))*(1.0)))/(100)))+((((((500)*(v70)))*(1.0)))/(100)))+((((((634.53)*(v71)))*(1.0)))/(100)))+((((((746.2)*(v72)))*(1.0)))/(100)))+((((((747.1)*(v73)))*(1.0)))/(100)))+((((((800)*(v74)))*(1.0)))/(100)))+((((((500)*(v75)))*(1.0)))/(100)))+((((((100)*(v76)))*(1.0)))/(100)))+((((((500)*(v77)))*(1.0)))/(100)))+((((((773.95)*(v78)))*(1.0)))/(100)))+((((((793.97)*(v79)))*(1.0)))/(100)))+((((((500)*(v80)))*(1.0)))/(100)))+((((((634.53)*(v81)))*(1.0)))/(100)))+((((((746.2)*(v82)))*(1.0)))/(100)))+((((((747.1)*(v83)))*(1.0)))/(100)))+((((((800)*(v84)))*(1.0)))/(100)))+((((((500)*(v85)))*(1.0)))/(100)))+((((((100)*(v86)))*(1.0)))/(100)))+((((((500)*(v87)))*(1.0)))/(100)))+((((((566.5)*(v88)))*(1.0)))/(100)))+((((((600.5)*(v89)))*(1.0)))/(100)))+((((((500)*(v90)))*(1.0)))/(100)))+((((((431.41)*(v91)))*(1.0)))/(100)))+((((((498.015344202792)*(v92)))*(1.0)))/(100)))+((((((466.846846846847)*(v93)))*(1.0)))/(100)))+((((((500)*(v94)))*(1.0)))/(100)))+((((((100)*(v95)))*(1.0)))/(100)))+((((((500)*(v96)))*(1.0)))/(100))))/((1-((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((v1)*(nan)))/(100)))+((((v2)*(nan)))/(100)))+((((v3)*(nan)))/(100)))+((((v4)*(nan)))/(100)))+((((v5)*(nan)))/(100)))+((((v6)*(nan)))/(100)))+((((v7)*(nan)))/(100)))+((((v8)*(nan)))/(100)))+((((v9)*(nan)))/(100)))+((((v10)*(nan)))/(100)))+((((v11)*(nan)))/(100)))+((((v12)*(nan)))/(100)))+((((v13)*(nan)))/(100)))+((((v14)*(nan)))/(100)))+((((v15)*(nan)))/(100)))+((((v16)*(nan)))/(100)))+((((v17)*(nan)))/(100)))+((((v18)*(nan)))/(100)))+((((v19)*(nan)))/(100)))+((((v20)*(nan)))/(100)))+((((v21)*(nan)))/(100)))+((((v22)*(nan)))/(100)))+((((v23)*(nan)))/(100)))+((((v24)*(nan)))/(100)))+((((v25)*(nan)))/(100)))+((((v26)*(nan)))/(100)))+((((v27)*(nan)))/(100)))+((((v28)*(nan)))/(100)))+((((v29)*(nan)))/(100)))+((((v30)*(nan)))/(100)))+((((v31)*(nan)))/(100)))+((((v32)*(nan)))/(100)))+((((v33)*(nan)))/(100)))+((((v34)*(nan)))/(100)))+((((v35)*(nan)))/(100)))+((((v36)*(nan)))/(100)))+((((v37)*(nan)))/(100)))+((((v38)*(nan)))/(100)))+((((v39)*(nan)))/(100)))+((((v40)*(nan)))/(100)))+((((v41)*(nan)))/(100)))+((((v42)*(nan)))/(100)))+((((v43)*(nan)))/(100)))+((((v44)*(nan)))/(100)))+((((v45)*(nan)))/(100)))+((((v46)*(nan)))/(100)))+((((v47)*(nan)))/(100)))+((((v48)*(nan)))/(100)))+((((v49)*(nan)))/(100)))+((((v50)*(nan)))/(100)))+((((v51)*(nan)))/(100)))+((((v52)*(nan)))/(100)))+((((v53)*(nan)))/(100)))+((((v54)*(nan)))/(100)))+((((v55)*(nan)))/(100)))+((((v56)*(nan)))/(100)))+((((v57)*(nan)))/(100)))+((((v58)*(nan)))/(100)))+((((v59)*(nan)))/(100)))+((((v60)*(nan)))/(100)))+((((v61)*(nan)))/(100)))+((((v62)*(nan)))/(100)))+((((v63)*(nan)))/(100)))+((((v64)*(nan)))/(100)))+((((v65)*(nan)))/(100)))+((((v66)*(nan)))/(100)))+((((v67)*(nan)))/(100)))+((((v68)*(nan)))/(100)))+((((v69)*(nan)))/(100)))+((((v70)*(nan)))/(100)))+((((v71)*(nan)))/(100)))+((((v72)*(nan)))/(100)))+((((v73)*(nan)))/(100)))+((((v74)*(nan)))/(100)))+((((v75)*(nan)))/(100)))+((((v76)*(nan)))/(100)))+((((v77)*(nan)))/(100)))+((((v78)*(nan)))/(100)))+((((v79)*(nan)))/(100)))+((((v80)*(nan)))/(100)))+((((v81)*(nan)))/(100)))+((((v82)*(nan)))/(100)))+((((v83)*(nan)))/(100)))+((((v84)*(nan)))/(100)))+((((v85)*(nan)))/(100)))+((((v86)*(nan)))/(100)))+((((v87)*(nan)))/(100)))+((((v88)*(nan)))/(100)))+((((v89)*(nan)))/(100)))+((((v90)*(nan)))/(100)))+((((v91)*(nan)))/(100)))+((((v92)*(nan)))/(100)))+((((v93)*(nan)))/(100)))+((((v94)*(nan)))/(100)))+((((v95)*(nan)))/(100)))+((((v96)*(nan)))/(100))))/(100))))))/((1-((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((((0)*(v1)))*(1.0)))/(100)))+((((((0)*(v2)))*(1.0)))/(100)))+((((((0)*(v3)))*(1.0)))/(100)))+((((((0)*(v4)))*(1.0)))/(100)))+((((((0)*(v5)))*(1.0)))/(100)))+((((((0)*(v6)))*(1.0)))/(100)))+((((((0)*(v7)))*(1.0)))/(100)))+((((((0)*(v8)))*(1.0)))/(100)))+((((((0)*(v9)))*(1.0)))/(100)))+((((((0)*(v10)))*(1.0)))/(100)))+((((((0)*(v11)))*(1.0)))/(100)))+((((((0)*(v12)))*(1.0)))/(100)))+((((((0)*(v13)))*(1.0)))/(100)))+((((((0)*(v14)))*(1.0)))/(100)))+((((((0)*(v15)))*(1.0)))/(100)))+((((((0)*(v16)))*(1.0)))/(100)))+((((((0)*(v17)))*(1.0)))/(100)))+((((((0)*(v18)))*(1.0)))/(100)))+((((((0)*(v19)))*(1.0)))/(100)))+((((((0)*(v20)))*(1.0)))/(100)))+((((((0)*(v21)))*(1.0)))/(100)))+((((((0)*(v22)))*(1.0)))/(100)))+((((((0)*(v23)))*(1.0)))/(100)))+((((((0)*(v24)))*(1.0)))/(100)))+((((((0)*(v25)))*(1.0)))/(100)))+((((((0)*(v26)))*(1.0)))/(100)))+((((((0)*(v27)))*(1.0)))/(100)))+((((((0)*(v28)))*(1.0)))/(100)))+((((((0)*(v29)))*(1.0)))/(100)))+((((((0)*(v30)))*(1.0)))/(100)))+((((((0)*(v31)))*(1.0)))/(100)))+((((((0)*(v32)))*(1.0)))/(100)))+((((((0)*(v33)))*(1.0)))/(100)))+((((((0)*(v34)))*(1.0)))/(100)))+((((((0)*(v35)))*(1.0)))/(100)))+((((((0)*(v36)))*(1.0)))/(100)))+((((((0)*(v37)))*(1.0)))/(100)))+((((((0)*(v38)))*(1.0)))/(100)))+((((((0)*(v39)))*(1.0)))/(100)))+((((((0)*(v40)))*(1.0)))/(100)))+((((((0)*(v41)))*(1.0)))/(100)))+((((((0)*(v42)))*(1.0)))/(100)))+((((((0)*(v43)))*(1.0)))/(100)))+((((((0)*(v44)))*(1.0)))/(100)))+((((((0)*(v45)))*(1.0)))/(100)))+((((((0)*(v46)))*(1.0)))/(100)))+((((((0)*(v47)))*(1.0)))/(100)))+((((((0)*(v48)))*(1.0)))/(100)))+((((((0)*(v49)))*(1.0)))/(100)))+((((((0)*(v50)))*(1.0)))/(100)))+((((((0)*(v51)))*(1.0)))/(100)))+((((((0)*(v52)))*(1.0)))/(100)))+((((((0)*(v53)))*(1.0)))/(100)))+((((((0)*(v54)))*(1.0)))/(100)))+((((((0)*(v55)))*(1.0)))/(100)))+((((((0)*(v56)))*(1.0)))/(100)))+((((((0)*(v57)))*(1.0)))/(100)))+((((((0)*(v58)))*(1.0)))/(100)))+((((((0)*(v59)))*(1.0)))/(100)))+((((((0)*(v60)))*(1.0)))/(100)))+((((((0)*(v61)))*(1.0)))/(100)))+((((((0)*(v62)))*(1.0)))/(100)))+((((((0)*(v63)))*(1.0)))/(100)))+((((((0)*(v64)))*(1.0)))/(100)))+((((((0)*(v65)))*(1.0)))/(100)))+((((((0)*(v66)))*(1.0)))/(100)))+((((((0)*(v67)))*(1.0)))/(100)))+((((((0)*(v68)))*(1.0)))/(100)))+((((((0)*(v69)))*(1.0)))/(100)))+((((((0)*(v70)))*(1.0)))/(100)))+((((((0)*(v71)))*(1.0)))/(100)))+((((((0)*(v72)))*(1.0)))/(100)))+((((((0)*(v73)))*(1.0)))/(100)))+((((((0)*(v74)))*(1.0)))/(100)))+((((((0)*(v75)))*(1.0)))/(100)))+((((((0)*(v76)))*(1.0)))/(100)))+((((((0)*(v77)))*(1.0)))/(100)))+((((((0)*(v78)))*(1.0)))/(100)))+((((((0)*(v79)))*(1.0)))/(100)))+((((((0)*(v80)))*(1.0)))/(100)))+((((((0)*(v81)))*(1.0)))/(100)))+((((((0)*(v82)))*(1.0)))/(100)))+((((((0)*(v83)))*(1.0)))/(100)))+((((((0)*(v84)))*(1.0)))/(100)))+((((((0)*(v85)))*(1.0)))/(100)))+((((((0)*(v86)))*(1.0)))/(100)))+((((((0)*(v87)))*(1.0)))/(100)))+((((((0)*(v88)))*(1.0)))/(100)))+((((((0)*(v89)))*(1.0)))/(100)))+((((((0)*(v90)))*(1.0)))/(100)))+((((((0)*(v91)))*(1.0)))/(100)))+((((((0)*(v92)))*(1.0)))/(100)))+((((((0)*(v93)))*(1.0)))/(100)))+((((((0)*(v94)))*(1.0)))/(100)))+((((((0)*(v95)))*(1.0)))/(100)))+((((((0)*(v96)))*(1.0)))/(100))))/((1-((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((v1)*(nan)))/(100)))+((((v2)*(nan)))/(100)))+((((v3)*(nan)))/(100)))+((((v4)*(nan)))/(100)))+((((v5)*(nan)))/(100)))+((((v6)*(nan)))/(100)))+((((v7)*(nan)))/(100)))+((((v8)*(nan)))/(100)))+((((v9)*(nan)))/(100)))+((((v10)*(nan)))/(100)))+((((v11)*(nan)))/(100)))+((((v12)*(nan)))/(100)))+((((v13)*(nan)))/(100)))+((((v14)*(nan)))/(100)))+((((v15)*(nan)))/(100)))+((((v16)*(nan)))/(100)))+((((v17)*(nan)))/(100)))+((((v18)*(nan)))/(100)))+((((v19)*(nan)))/(100)))+((((v20)*(nan)))/(100)))+((((v21)*(nan)))/(100)))+((((v22)*(nan)))/(100)))+((((v23)*(nan)))/(100)))+((((v24)*(nan)))/(100)))+((((v25)*(nan)))/(100)))+((((v26)*(nan)))/(100)))+((((v27)*(nan)))/(100)))+((((v28)*(nan)))/(100)))+((((v29)*(nan)))/(100)))+((((v30)*(nan)))/(100)))+((((v31)*(nan)))/(100)))+((((v32)*(nan)))/(100)))+((((v33)*(nan)))/(100)))+((((v34)*(nan)))/(100)))+((((v35)*(nan)))/(100)))+((((v36)*(nan)))/(100)))+((((v37)*(nan)))/(100)))+((((v38)*(nan)))/(100)))+((((v39)*(nan)))/(100)))+((((v40)*(nan)))/(100)))+((((v41)*(nan)))/(100)))+((((v42)*(nan)))/(100)))+((((v43)*(nan)))/(100)))+((((v44)*(nan)))/(100)))+((((v45)*(nan)))/(100)))+((((v46)*(nan)))/(100)))+((((v47)*(nan)))/(100)))+((((v48)*(nan)))/(100)))+((((v49)*(nan)))/(100)))+((((v50)*(nan)))/(100)))+((((v51)*(nan)))/(100)))+((((v52)*(nan)))/(100)))+((((v53)*(nan)))/(100)))+((((v54)*(nan)))/(100)))+((((v55)*(nan)))/(100)))+((((v56)*(nan)))/(100)))+((((v57)*(nan)))/(100)))+((((v58)*(nan)))/(100)))+((((v59)*(nan)))/(100)))+((((v60)*(nan)))/(100)))+((((v61)*(nan)))/(100)))+((((v62)*(nan)))/(100)))+((((v63)*(nan)))/(100)))+((((v64)*(nan)))/(100)))+((((v65)*(nan)))/(100)))+((((v66)*(nan)))/(100)))+((((v67)*(nan)))/(100)))+((((v68)*(nan)))/(100)))+((((v69)*(nan)))/(100)))+((((v70)*(nan)))/(100)))+((((v71)*(nan)))/(100)))+((((v72)*(nan)))/(100)))+((((v73)*(nan)))/(100)))+((((v74)*(nan)))/(100)))+((((v75)*(nan)))/(100)))+((((v76)*(nan)))/(100)))+((((v77)*(nan)))/(100)))+((((v78)*(nan)))/(100)))+((((v79)*(nan)))/(100)))+((((v80)*(nan)))/(100)))+((((v81)*(nan)))/(100)))+((((v82)*(nan)))/(100)))+((((v83)*(nan)))/(100)))+((((v84)*(nan)))/(100)))+((((v85)*(nan)))/(100)))+((((v86)*(nan)))/(100)))+((((v87)*(nan)))/(100)))+((((v88)*(nan)))/(100)))+((((v89)*(nan)))/(100)))+((((v90)*(nan)))/(100)))+((((v91)*(nan)))/(100)))+((((v92)*(nan)))/(100)))+((((v93)*(nan)))/(100)))+((((v94)*(nan)))/(100)))+((((v95)*(nan)))/(100)))+((((v96)*(nan)))/(100))))/(100))))))/(100))))))*(0.6728147046439013)))+(((-((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((((v1)*(53.3775)))*(100)))/(100)))+((((((v2)*(50)))*(100)))/(100)))+((((((v3)*(60.93)))*(100)))/(100)))+((((((v4)*(45.155)))*(100)))/(100)))+((((((v5)*(52)))*(100)))/(100)))+((((((v6)*(52.92)))*(100)))/(100)))+((((((v7)*(48.4088904761905)))*(100)))/(100)))+((((((v8)*(58)))*(100)))/(100)))+((((((v9)*(66.24)))*(100)))/(100)))+((((((v10)*(35.5541666666667)))*(100)))/(100)))+((((((v11)*(36.763)))*(100)))/(100)))+((((((v12)*(62.72)))*(100)))/(100)))+((((((v13)*(70)))*(100)))/(100)))+((((((v14)*(52)))*(100)))/(100)))+((((((v15)*(48.4088904761905)))*(100)))/(100)))+((((((v16)*(58.9)))*(100)))/(100)))+((((((v17)*(66.24)))*(100)))/(100)))+((((((v18)*(42)))*(100)))/(100)))+((((((v19)*(47)))*(100)))/(100)))+((((((v20)*(48.91)))*(100)))/(100)))+((((((v21)*(58.14)))*(100)))/(100)))+((((((v22)*(35.5541666666667)))*(100)))/(100)))+((((((v23)*(52)))*(100)))/(100)))+((((((v24)*(61.5)))*(100)))/(100)))+((((((v25)*(62.13)))*(100)))/(100)))+((((((v26)*(64.36)))*(100)))/(100)))+((((((v27)*(52)))*(100)))/(100)))+((((((v28)*(48.4088904761905)))*(100)))/(100)))+((((((v29)*(58.9)))*(100)))/(100)))+((((((v30)*(69.65)))*(100)))/(100)))+((((((v31)*(55.2)))*(100)))/(100)))+((((((v32)*(48.47)))*(100)))/(100)))+((((((v33)*(42.23)))*(100)))/(100)))+((((((v34)*(45.48)))*(100)))/(100)))+((((((v35)*(35.5541666666667)))*(100)))/(100)))+((((((v36)*(61.5)))*(100)))/(100)))+((((((v37)*(55.2)))*(100)))/(100)))+((((((v38)*(52)))*(100)))/(100)))+((((((v39)*(48.4088904761905)))*(100)))/(100)))+((((((v40)*(58.2)))*(100)))/(100)))+((((((v41)*(48.47)))*(100)))/(100)))+((((((v42)*(57.26)))*(100)))/(100)))+((((((v43)*(50)))*(100)))/(100)))+((((((v44)*(86)))*(100)))/(100)))+((((((v45)*(42.23)))*(100)))/(100)))+((((((v46)*(35.5541666666667)))*(100)))/(100)))+((((((v47)*(61.5)))*(100)))/(100)))+((((((v48)*(55.2)))*(100)))/(100)))+((((((v49)*(52)))*(100)))/(100)))+((((((v50)*(48.4088904761905)))*(100)))/(100)))+((((((v51)*(58.2)))*(100)))/(100)))+((((((v52)*(48.47)))*(100)))/(100)))+((((((v53)*(57.26)))*(100)))/(100)))+((((((v54)*(50)))*(100)))/(100)))+((((((v55)*(86)))*(100)))/(100)))+((((((v56)*(42.23)))*(100)))/(100)))+((((((v57)*(35.5541666666667)))*(100)))/(100)))+((((((v58)*(59.95)))*(100)))/(100)))+((((((v59)*(61.5)))*(100)))/(100)))+((((((v60)*(52)))*(100)))/(100)))+((((((v61)*(49.15)))*(100)))/(100)))+((((((v62)*(57.8)))*(100)))/(100)))+((((((v63)*(57.87)))*(100)))/(100)))+((((((v64)*(69.5)))*(100)))/(100)))+((((((v65)*(51.9)))*(100)))/(100)))+((((((v66)*(24)))*(100)))/(100)))+((((((v67)*(34.5)))*(100)))/(100)))+((((((v68)*(59.95)))*(100)))/(100)))+((((((v69)*(61.5)))*(100)))/(100)))+((((((v70)*(52)))*(100)))/(100)))+((((((v71)*(49.15)))*(100)))/(100)))+((((((v72)*(57.8)))*(100)))/(100)))+((((((v73)*(57.87)))*(100)))/(100)))+((((((v74)*(69.5)))*(100)))/(100)))+((((((v75)*(51.9)))*(100)))/(100)))+((((((v76)*(24)))*(100)))/(100)))+((((((v77)*(34.5)))*(100)))/(100)))+((((((v78)*(59.95)))*(100)))/(100)))+((((((v79)*(61.5)))*(100)))/(100)))+((((((v80)*(52)))*(100)))/(100)))+((((((v81)*(49.15)))*(100)))/(100)))+((((((v82)*(57.8)))*(100)))/(100)))+((((((v83)*(57.87)))*(100)))/(100)))+((((((v84)*(69.5)))*(100)))/(100)))+((((((v85)*(51.9)))*(100)))/(100)))+((((((v86)*(24)))*(100)))/(100)))+((((((v87)*(34.5)))*(100)))/(100)))+((((((v88)*(
 
 APM model error: string > 15000  characters
 Consider breaking up the line into multiple equations
 
 The may also be due to only using newline character CR
   instead of CR LF (for Windows) or LF (for MacOS/Linux) 
 To fix this problem, save APM file with appropriate newline characters
 
 STOPPING...
 


2018-12-05 14:39:33,277 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 680.8815963996892), (1, 1, 1)]
2018-12-05 14:39:33,277 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.7057552595311165, 'sio2': 91.62143003582499, 'cost': 0.6728147046439013}
2018-12-05 14:39:34,846 __main__ mainTask ERROR = Traceback (most recent call last):
  File "C:/Users/sun/PycharmProjects/optimizationproblem/gekkoSolution/mainTask.py", line 37, in <module>
    lp.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\gekkoSolution\gekkoProblem.py", line 46, in solve
    self.prob.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\gekko\gekko.py", line 682, in solve
    raise Exception(apm_error)
Exception:  @error: Model Expression
 *** Error in syntax of function string: Invalid element: nan

Position: 3936                
 (0+((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((((910.99486005)*(v1)))*(1.0)))/(100)))+((((((853.351)*(v2)))*(1.0)))/(100)))+((((((1039.8935286)*(v3)))*(1.0)))/(100)))+((((((770.6612881)*(v4)))*(1.0)))/(100)))+((((((500)*(v5)))*(1.0)))/(100)))+((((((500)*(v6)))*(1.0)))/(100)))+((((((826.195501934952)*(v7)))*(1.0)))/(100)))+((((((989.88716)*(v8)))*(1.0)))/(100)))+((((((1130.5194048)*(v9)))*(1.0)))/(100)))+((((((500)*(v10)))*(1.0)))/(100)))+((((((300)*(v11)))*(1.0)))/(100)))+((((((1069.8162944)*(v12)))*(1.0)))/(100)))+((((((1245.56)*(v13)))*(1.0)))/(100)))+((((((500)*(v14)))*(1.0)))/(100)))+((((((825.711413030191)*(v15)))*(1.0)))/(100)))+((((((1004.658478)*(v16)))*(1.0)))/(100)))+((((((1129.8570048)*(v17)))*(1.0)))/(100)))+((((((300)*(v18)))*(1.0)))/(100)))+((((((801.67994)*(v19)))*(1.0)))/(100)))+((((((834.2588482)*(v20)))*(1.0)))/(100)))+((((((991.6951428)*(v21)))*(1.0)))/(100)))+((((((500)*(v22)))*(1.0)))/(100)))+((((((886.96504)*(v23)))*(1.0)))/(100)))+((((((1049.00673)*(v24)))*(1.0)))/(100)))+((((((1059.7526526)*(v25)))*(1.0)))/(100)))+((((((1097.7898072)*(v26)))*(1.0)))/(100)))+((((((500)*(v27)))*(1.0)))/(100)))+((((((825.711413030191)*(v28)))*(1.0)))/(100)))+((((((1004.658478)*(v29)))*(1.0)))/(100)))+((((((1241.92)*(v30)))*(1.0)))/(100)))+((((((941.547504)*(v31)))*(1.0)))/(100)))+((((((826.7537594)*(v32)))*(1.0)))/(100)))+((((((300)*(v33)))*(1.0)))/(100)))+((((((775.7532696)*(v34)))*(1.0)))/(100)))+((((((500)*(v35)))*(1.0)))/(100)))+((((((944.28)*(v36)))*(1.0)))/(100)))+((((((612.08)*(v37)))*(1.0)))/(100)))+((((((500)*(v38)))*(1.0)))/(100)))+((((((473.38)*(v39)))*(1.0)))/(100)))+((((((925.96)*(v40)))*(1.0)))/(100)))+((((((484.27)*(v41)))*(1.0)))/(100)))+((((((780.55)*(v42)))*(1.0)))/(100)))+((((((434.35)*(v43)))*(1.0)))/(100)))+((((((1228.65)*(v44)))*(1.0)))/(100)))+((((((300)*(v45)))*(1.0)))/(100)))+((((((500)*(v46)))*(1.0)))/(100)))+((((((964.82)*(v47)))*(1.0)))/(100)))+((((((586.286222115809)*(v48)))*(1.0)))/(100)))+((((((500)*(v49)))*(1.0)))/(100)))+((((((408.863293435074)*(v50)))*(1.0)))/(100)))+((((((925.96)*(v51)))*(1.0)))/(100)))+((((((405.863293435074)*(v52)))*(1.0)))/(100)))+((((((910.96)*(v53)))*(1.0)))/(100)))+((((((450.95)*(v54)))*(1.0)))/(100)))+((((((1242.28973578925)*(v55)))*(1.0)))/(100)))+((((((300)*(v56)))*(1.0)))/(100)))+((((((500)*(v57)))*(1.0)))/(100)))+((((((773.95)*(v58)))*(1.0)))/(100)))+((((((793.97)*(v59)))*(1.0)))/(100)))+((((((500)*(v60)))*(1.0)))/(100)))+((((((634.53)*(v61)))*(1.0)))/(100)))+((((((746.2)*(v62)))*(1.0)))/(100)))+((((((747.1)*(v63)))*(1.0)))/(100)))+((((((800)*(v64)))*(1.0)))/(100)))+((((((500)*(v65)))*(1.0)))/(100)))+((((((100)*(v66)))*(1.0)))/(100)))+((((((500)*(v67)))*(1.0)))/(100)))+((((((773.95)*(v68)))*(1.0)))/(100)))+((((((793.97)*(v69)))*(1.0)))/(100)))+((((((500)*(v70)))*(1.0)))/(100)))+((((((634.53)*(v71)))*(1.0)))/(100)))+((((((746.2)*(v72)))*(1.0)))/(100)))+((((((747.1)*(v73)))*(1.0)))/(100)))+((((((800)*(v74)))*(1.0)))/(100)))+((((((500)*(v75)))*(1.0)))/(100)))+((((((100)*(v76)))*(1.0)))/(100)))+((((((500)*(v77)))*(1.0)))/(100)))+((((((773.95)*(v78)))*(1.0)))/(100)))+((((((793.97)*(v79)))*(1.0)))/(100)))+((((((500)*(v80)))*(1.0)))/(100)))+((((((634.53)*(v81)))*(1.0)))/(100)))+((((((746.2)*(v82)))*(1.0)))/(100)))+((((((747.1)*(v83)))*(1.0)))/(100)))+((((((800)*(v84)))*(1.0)))/(100)))+((((((500)*(v85)))*(1.0)))/(100)))+((((((100)*(v86)))*(1.0)))/(100)))+((((((500)*(v87)))*(1.0)))/(100)))+((((((566.5)*(v88)))*(1.0)))/(100)))+((((((600.5)*(v89)))*(1.0)))/(100)))+((((((500)*(v90)))*(1.0)))/(100)))+((((((431.41)*(v91)))*(1.0)))/(100)))+((((((498.015344202792)*(v92)))*(1.0)))/(100)))+((((((466.846846846847)*(v93)))*(1.0)))/(100)))+((((((500)*(v94)))*(1.0)))/(100)))+((((((100)*(v95)))*(1.0)))/(100)))+((((((500)*(v96)))*(1.0)))/(100))))/((1-((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((v1)*(nan)))/(100)))+((((v2)*(nan)))/(100)))+((((v3)*(nan)))/(100)))+((((v4)*(nan)))/(100)))+((((v5)*(nan)))/(100)))+((((v6)*(nan)))/(100)))+((((v7)*(nan)))/(100)))+((((v8)*(nan)))/(100)))+((((v9)*(nan)))/(100)))+((((v10)*(nan)))/(100)))+((((v11)*(nan)))/(100)))+((((v12)*(nan)))/(100)))+((((v13)*(nan)))/(100)))+((((v14)*(nan)))/(100)))+((((v15)*(nan)))/(100)))+((((v16)*(nan)))/(100)))+((((v17)*(nan)))/(100)))+((((v18)*(nan)))/(100)))+((((v19)*(nan)))/(100)))+((((v20)*(nan)))/(100)))+((((v21)*(nan)))/(100)))+((((v22)*(nan)))/(100)))+((((v23)*(nan)))/(100)))+((((v24)*(nan)))/(100)))+((((v25)*(nan)))/(100)))+((((v26)*(nan)))/(100)))+((((v27)*(nan)))/(100)))+((((v28)*(nan)))/(100)))+((((v29)*(nan)))/(100)))+((((v30)*(nan)))/(100)))+((((v31)*(nan)))/(100)))+((((v32)*(nan)))/(100)))+((((v33)*(nan)))/(100)))+((((v34)*(nan)))/(100)))+((((v35)*(nan)))/(100)))+((((v36)*(nan)))/(100)))+((((v37)*(nan)))/(100)))+((((v38)*(nan)))/(100)))+((((v39)*(nan)))/(100)))+((((v40)*(nan)))/(100)))+((((v41)*(nan)))/(100)))+((((v42)*(nan)))/(100)))+((((v43)*(nan)))/(100)))+((((v44)*(nan)))/(100)))+((((v45)*(nan)))/(100)))+((((v46)*(nan)))/(100)))+((((v47)*(nan)))/(100)))+((((v48)*(nan)))/(100)))+((((v49)*(nan)))/(100)))+((((v50)*(nan)))/(100)))+((((v51)*(nan)))/(100)))+((((v52)*(nan)))/(100)))+((((v53)*(nan)))/(100)))+((((v54)*(nan)))/(100)))+((((v55)*(nan)))/(100)))+((((v56)*(nan)))/(100)))+((((v57)*(nan)))/(100)))+((((v58)*(nan)))/(100)))+((((v59)*(nan)))/(100)))+((((v60)*(nan)))/(100)))+((((v61)*(nan)))/(100)))+((((v62)*(nan)))/(100)))+((((v63)*(nan)))/(100)))+((((v64)*(nan)))/(100)))+((((v65)*(nan)))/(100)))+((((v66)*(nan)))/(100)))+((((v67)*(nan)))/(100)))+((((v68)*(nan)))/(100)))+((((v69)*(nan)))/(100)))+((((v70)*(nan)))/(100)))+((((v71)*(nan)))/(100)))+((((v72)*(nan)))/(100)))+((((v73)*(nan)))/(100)))+((((v74)*(nan)))/(100)))+((((v75)*(nan)))/(100)))+((((v76)*(nan)))/(100)))+((((v77)*(nan)))/(100)))+((((v78)*(nan)))/(100)))+((((v79)*(nan)))/(100)))+((((v80)*(nan)))/(100)))+((((v81)*(nan)))/(100)))+((((v82)*(nan)))/(100)))+((((v83)*(nan)))/(100)))+((((v84)*(nan)))/(100)))+((((v85)*(nan)))/(100)))+((((v86)*(nan)))/(100)))+((((v87)*(nan)))/(100)))+((((v88)*(nan)))/(100)))+((((v89)*(nan)))/(100)))+((((v90)*(nan)))/(100)))+((((v91)*(nan)))/(100)))+((((v92)*(nan)))/(100)))+((((v93)*(nan)))/(100)))+((((v94)*(nan)))/(100)))+((((v95)*(nan)))/(100)))+((((v96)*(nan)))/(100))))/(100))))))/((1-((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((((0)*(v1)))*(1.0)))/(100)))+((((((0)*(v2)))*(1.0)))/(100)))+((((((0)*(v3)))*(1.0)))/(100)))+((((((0)*(v4)))*(1.0)))/(100)))+((((((0)*(v5)))*(1.0)))/(100)))+((((((0)*(v6)))*(1.0)))/(100)))+((((((0)*(v7)))*(1.0)))/(100)))+((((((0)*(v8)))*(1.0)))/(100)))+((((((0)*(v9)))*(1.0)))/(100)))+((((((0)*(v10)))*(1.0)))/(100)))+((((((0)*(v11)))*(1.0)))/(100)))+((((((0)*(v12)))*(1.0)))/(100)))+((((((0)*(v13)))*(1.0)))/(100)))+((((((0)*(v14)))*(1.0)))/(100)))+((((((0)*(v15)))*(1.0)))/(100)))+((((((0)*(v16)))*(1.0)))/(100)))+((((((0)*(v17)))*(1.0)))/(100)))+((((((0)*(v18)))*(1.0)))/(100)))+((((((0)*(v19)))*(1.0)))/(100)))+((((((0)*(v20)))*(1.0)))/(100)))+((((((0)*(v21)))*(1.0)))/(100)))+((((((0)*(v22)))*(1.0)))/(100)))+((((((0)*(v23)))*(1.0)))/(100)))+((((((0)*(v24)))*(1.0)))/(100)))+((((((0)*(v25)))*(1.0)))/(100)))+((((((0)*(v26)))*(1.0)))/(100)))+((((((0)*(v27)))*(1.0)))/(100)))+((((((0)*(v28)))*(1.0)))/(100)))+((((((0)*(v29)))*(1.0)))/(100)))+((((((0)*(v30)))*(1.0)))/(100)))+((((((0)*(v31)))*(1.0)))/(100)))+((((((0)*(v32)))*(1.0)))/(100)))+((((((0)*(v33)))*(1.0)))/(100)))+((((((0)*(v34)))*(1.0)))/(100)))+((((((0)*(v35)))*(1.0)))/(100)))+((((((0)*(v36)))*(1.0)))/(100)))+((((((0)*(v37)))*(1.0)))/(100)))+((((((0)*(v38)))*(1.0)))/(100)))+((((((0)*(v39)))*(1.0)))/(100)))+((((((0)*(v40)))*(1.0)))/(100)))+((((((0)*(v41)))*(1.0)))/(100)))+((((((0)*(v42)))*(1.0)))/(100)))+((((((0)*(v43)))*(1.0)))/(100)))+((((((0)*(v44)))*(1.0)))/(100)))+((((((0)*(v45)))*(1.0)))/(100)))+((((((0)*(v46)))*(1.0)))/(100)))+((((((0)*(v47)))*(1.0)))/(100)))+((((((0)*(v48)))*(1.0)))/(100)))+((((((0)*(v49)))*(1.0)))/(100)))+((((((0)*(v50)))*(1.0)))/(100)))+((((((0)*(v51)))*(1.0)))/(100)))+((((((0)*(v52)))*(1.0)))/(100)))+((((((0)*(v53)))*(1.0)))/(100)))+((((((0)*(v54)))*(1.0)))/(100)))+((((((0)*(v55)))*(1.0)))/(100)))+((((((0)*(v56)))*(1.0)))/(100)))+((((((0)*(v57)))*(1.0)))/(100)))+((((((0)*(v58)))*(1.0)))/(100)))+((((((0)*(v59)))*(1.0)))/(100)))+((((((0)*(v60)))*(1.0)))/(100)))+((((((0)*(v61)))*(1.0)))/(100)))+((((((0)*(v62)))*(1.0)))/(100)))+((((((0)*(v63)))*(1.0)))/(100)))+((((((0)*(v64)))*(1.0)))/(100)))+((((((0)*(v65)))*(1.0)))/(100)))+((((((0)*(v66)))*(1.0)))/(100)))+((((((0)*(v67)))*(1.0)))/(100)))+((((((0)*(v68)))*(1.0)))/(100)))+((((((0)*(v69)))*(1.0)))/(100)))+((((((0)*(v70)))*(1.0)))/(100)))+((((((0)*(v71)))*(1.0)))/(100)))+((((((0)*(v72)))*(1.0)))/(100)))+((((((0)*(v73)))*(1.0)))/(100)))+((((((0)*(v74)))*(1.0)))/(100)))+((((((0)*(v75)))*(1.0)))/(100)))+((((((0)*(v76)))*(1.0)))/(100)))+((((((0)*(v77)))*(1.0)))/(100)))+((((((0)*(v78)))*(1.0)))/(100)))+((((((0)*(v79)))*(1.0)))/(100)))+((((((0)*(v80)))*(1.0)))/(100)))+((((((0)*(v81)))*(1.0)))/(100)))+((((((0)*(v82)))*(1.0)))/(100)))+((((((0)*(v83)))*(1.0)))/(100)))+((((((0)*(v84)))*(1.0)))/(100)))+((((((0)*(v85)))*(1.0)))/(100)))+((((((0)*(v86)))*(1.0)))/(100)))+((((((0)*(v87)))*(1.0)))/(100)))+((((((0)*(v88)))*(1.0)))/(100)))+((((((0)*(v89)))*(1.0)))/(100)))+((((((0)*(v90)))*(1.0)))/(100)))+((((((0)*(v91)))*(1.0)))/(100)))+((((((0)*(v92)))*(1.0)))/(100)))+((((((0)*(v93)))*(1.0)))/(100)))+((((((0)*(v94)))*(1.0)))/(100)))+((((((0)*(v95)))*(1.0)))/(100)))+((((((0)*(v96)))*(1.0)))/(100))))/((1-((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((v1)*(nan)))/(100)))+((((v2)*(nan)))/(100)))+((((v3)*(nan)))/(100)))+((((v4)*(nan)))/(100)))+((((v5)*(nan)))/(100)))+((((v6)*(nan)))/(100)))+((((v7)*(nan)))/(100)))+((((v8)*(nan)))/(100)))+((((v9)*(nan)))/(100)))+((((v10)*(nan)))/(100)))+((((v11)*(nan)))/(100)))+((((v12)*(nan)))/(100)))+((((v13)*(nan)))/(100)))+((((v14)*(nan)))/(100)))+((((v15)*(nan)))/(100)))+((((v16)*(nan)))/(100)))+((((v17)*(nan)))/(100)))+((((v18)*(nan)))/(100)))+((((v19)*(nan)))/(100)))+((((v20)*(nan)))/(100)))+((((v21)*(nan)))/(100)))+((((v22)*(nan)))/(100)))+((((v23)*(nan)))/(100)))+((((v24)*(nan)))/(100)))+((((v25)*(nan)))/(100)))+((((v26)*(nan)))/(100)))+((((v27)*(nan)))/(100)))+((((v28)*(nan)))/(100)))+((((v29)*(nan)))/(100)))+((((v30)*(nan)))/(100)))+((((v31)*(nan)))/(100)))+((((v32)*(nan)))/(100)))+((((v33)*(nan)))/(100)))+((((v34)*(nan)))/(100)))+((((v35)*(nan)))/(100)))+((((v36)*(nan)))/(100)))+((((v37)*(nan)))/(100)))+((((v38)*(nan)))/(100)))+((((v39)*(nan)))/(100)))+((((v40)*(nan)))/(100)))+((((v41)*(nan)))/(100)))+((((v42)*(nan)))/(100)))+((((v43)*(nan)))/(100)))+((((v44)*(nan)))/(100)))+((((v45)*(nan)))/(100)))+((((v46)*(nan)))/(100)))+((((v47)*(nan)))/(100)))+((((v48)*(nan)))/(100)))+((((v49)*(nan)))/(100)))+((((v50)*(nan)))/(100)))+((((v51)*(nan)))/(100)))+((((v52)*(nan)))/(100)))+((((v53)*(nan)))/(100)))+((((v54)*(nan)))/(100)))+((((v55)*(nan)))/(100)))+((((v56)*(nan)))/(100)))+((((v57)*(nan)))/(100)))+((((v58)*(nan)))/(100)))+((((v59)*(nan)))/(100)))+((((v60)*(nan)))/(100)))+((((v61)*(nan)))/(100)))+((((v62)*(nan)))/(100)))+((((v63)*(nan)))/(100)))+((((v64)*(nan)))/(100)))+((((v65)*(nan)))/(100)))+((((v66)*(nan)))/(100)))+((((v67)*(nan)))/(100)))+((((v68)*(nan)))/(100)))+((((v69)*(nan)))/(100)))+((((v70)*(nan)))/(100)))+((((v71)*(nan)))/(100)))+((((v72)*(nan)))/(100)))+((((v73)*(nan)))/(100)))+((((v74)*(nan)))/(100)))+((((v75)*(nan)))/(100)))+((((v76)*(nan)))/(100)))+((((v77)*(nan)))/(100)))+((((v78)*(nan)))/(100)))+((((v79)*(nan)))/(100)))+((((v80)*(nan)))/(100)))+((((v81)*(nan)))/(100)))+((((v82)*(nan)))/(100)))+((((v83)*(nan)))/(100)))+((((v84)*(nan)))/(100)))+((((v85)*(nan)))/(100)))+((((v86)*(nan)))/(100)))+((((v87)*(nan)))/(100)))+((((v88)*(nan)))/(100)))+((((v89)*(nan)))/(100)))+((((v90)*(nan)))/(100)))+((((v91)*(nan)))/(100)))+((((v92)*(nan)))/(100)))+((((v93)*(nan)))/(100)))+((((v94)*(nan)))/(100)))+((((v95)*(nan)))/(100)))+((((v96)*(nan)))/(100))))/(100))))))/(100))))))*(0.6728147046439013)))




2018-12-05 14:40:25,338 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 680.8815963996892), (1, 1, 1)]
2018-12-05 14:40:25,338 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.7057552595311165, 'sio2': 91.62143003582499, 'cost': 0.6728147046439013}
2018-12-05 14:40:26,900 __main__ mainTask ERROR = Traceback (most recent call last):
  File "C:/Users/sun/PycharmProjects/optimizationproblem/gekkoSolution/mainTask.py", line 38, in <module>
    lp.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\gekkoSolution\gekkoProblem.py", line 46, in solve
    self.prob.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\gekko\gekko.py", line 682, in solve
    raise Exception(apm_error)
Exception:  @error: Model Expression
 *** Error in syntax of function string: Invalid element: nan

Position: 3936                
 (0+((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((((910.99486005)*(v1)))*(1.0)))/(100)))+((((((853.351)*(v2)))*(1.0)))/(100)))+((((((1039.8935286)*(v3)))*(1.0)))/(100)))+((((((770.6612881)*(v4)))*(1.0)))/(100)))+((((((500)*(v5)))*(1.0)))/(100)))+((((((500)*(v6)))*(1.0)))/(100)))+((((((826.195501934952)*(v7)))*(1.0)))/(100)))+((((((989.88716)*(v8)))*(1.0)))/(100)))+((((((1130.5194048)*(v9)))*(1.0)))/(100)))+((((((500)*(v10)))*(1.0)))/(100)))+((((((300)*(v11)))*(1.0)))/(100)))+((((((1069.8162944)*(v12)))*(1.0)))/(100)))+((((((1245.56)*(v13)))*(1.0)))/(100)))+((((((500)*(v14)))*(1.0)))/(100)))+((((((825.711413030191)*(v15)))*(1.0)))/(100)))+((((((1004.658478)*(v16)))*(1.0)))/(100)))+((((((1129.8570048)*(v17)))*(1.0)))/(100)))+((((((300)*(v18)))*(1.0)))/(100)))+((((((801.67994)*(v19)))*(1.0)))/(100)))+((((((834.2588482)*(v20)))*(1.0)))/(100)))+((((((991.6951428)*(v21)))*(1.0)))/(100)))+((((((500)*(v22)))*(1.0)))/(100)))+((((((886.96504)*(v23)))*(1.0)))/(100)))+((((((1049.00673)*(v24)))*(1.0)))/(100)))+((((((1059.7526526)*(v25)))*(1.0)))/(100)))+((((((1097.7898072)*(v26)))*(1.0)))/(100)))+((((((500)*(v27)))*(1.0)))/(100)))+((((((825.711413030191)*(v28)))*(1.0)))/(100)))+((((((1004.658478)*(v29)))*(1.0)))/(100)))+((((((1241.92)*(v30)))*(1.0)))/(100)))+((((((941.547504)*(v31)))*(1.0)))/(100)))+((((((826.7537594)*(v32)))*(1.0)))/(100)))+((((((300)*(v33)))*(1.0)))/(100)))+((((((775.7532696)*(v34)))*(1.0)))/(100)))+((((((500)*(v35)))*(1.0)))/(100)))+((((((944.28)*(v36)))*(1.0)))/(100)))+((((((612.08)*(v37)))*(1.0)))/(100)))+((((((500)*(v38)))*(1.0)))/(100)))+((((((473.38)*(v39)))*(1.0)))/(100)))+((((((925.96)*(v40)))*(1.0)))/(100)))+((((((484.27)*(v41)))*(1.0)))/(100)))+((((((780.55)*(v42)))*(1.0)))/(100)))+((((((434.35)*(v43)))*(1.0)))/(100)))+((((((1228.65)*(v44)))*(1.0)))/(100)))+((((((300)*(v45)))*(1.0)))/(100)))+((((((500)*(v46)))*(1.0)))/(100)))+((((((964.82)*(v47)))*(1.0)))/(100)))+((((((586.286222115809)*(v48)))*(1.0)))/(100)))+((((((500)*(v49)))*(1.0)))/(100)))+((((((408.863293435074)*(v50)))*(1.0)))/(100)))+((((((925.96)*(v51)))*(1.0)))/(100)))+((((((405.863293435074)*(v52)))*(1.0)))/(100)))+((((((910.96)*(v53)))*(1.0)))/(100)))+((((((450.95)*(v54)))*(1.0)))/(100)))+((((((1242.28973578925)*(v55)))*(1.0)))/(100)))+((((((300)*(v56)))*(1.0)))/(100)))+((((((500)*(v57)))*(1.0)))/(100)))+((((((773.95)*(v58)))*(1.0)))/(100)))+((((((793.97)*(v59)))*(1.0)))/(100)))+((((((500)*(v60)))*(1.0)))/(100)))+((((((634.53)*(v61)))*(1.0)))/(100)))+((((((746.2)*(v62)))*(1.0)))/(100)))+((((((747.1)*(v63)))*(1.0)))/(100)))+((((((800)*(v64)))*(1.0)))/(100)))+((((((500)*(v65)))*(1.0)))/(100)))+((((((100)*(v66)))*(1.0)))/(100)))+((((((500)*(v67)))*(1.0)))/(100)))+((((((773.95)*(v68)))*(1.0)))/(100)))+((((((793.97)*(v69)))*(1.0)))/(100)))+((((((500)*(v70)))*(1.0)))/(100)))+((((((634.53)*(v71)))*(1.0)))/(100)))+((((((746.2)*(v72)))*(1.0)))/(100)))+((((((747.1)*(v73)))*(1.0)))/(100)))+((((((800)*(v74)))*(1.0)))/(100)))+((((((500)*(v75)))*(1.0)))/(100)))+((((((100)*(v76)))*(1.0)))/(100)))+((((((500)*(v77)))*(1.0)))/(100)))+((((((773.95)*(v78)))*(1.0)))/(100)))+((((((793.97)*(v79)))*(1.0)))/(100)))+((((((500)*(v80)))*(1.0)))/(100)))+((((((634.53)*(v81)))*(1.0)))/(100)))+((((((746.2)*(v82)))*(1.0)))/(100)))+((((((747.1)*(v83)))*(1.0)))/(100)))+((((((800)*(v84)))*(1.0)))/(100)))+((((((500)*(v85)))*(1.0)))/(100)))+((((((100)*(v86)))*(1.0)))/(100)))+((((((500)*(v87)))*(1.0)))/(100)))+((((((566.5)*(v88)))*(1.0)))/(100)))+((((((600.5)*(v89)))*(1.0)))/(100)))+((((((500)*(v90)))*(1.0)))/(100)))+((((((431.41)*(v91)))*(1.0)))/(100)))+((((((498.015344202792)*(v92)))*(1.0)))/(100)))+((((((466.846846846847)*(v93)))*(1.0)))/(100)))+((((((500)*(v94)))*(1.0)))/(100)))+((((((100)*(v95)))*(1.0)))/(100)))+((((((500)*(v96)))*(1.0)))/(100))))/((1-((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((v1)*(nan)))/(100)))+((((v2)*(nan)))/(100)))+((((v3)*(nan)))/(100)))+((((v4)*(nan)))/(100)))+((((v5)*(nan)))/(100)))+((((v6)*(nan)))/(100)))+((((v7)*(nan)))/(100)))+((((v8)*(nan)))/(100)))+((((v9)*(nan)))/(100)))+((((v10)*(nan)))/(100)))+((((v11)*(nan)))/(100)))+((((v12)*(nan)))/(100)))+((((v13)*(nan)))/(100)))+((((v14)*(nan)))/(100)))+((((v15)*(nan)))/(100)))+((((v16)*(nan)))/(100)))+((((v17)*(nan)))/(100)))+((((v18)*(nan)))/(100)))+((((v19)*(nan)))/(100)))+((((v20)*(nan)))/(100)))+((((v21)*(nan)))/(100)))+((((v22)*(nan)))/(100)))+((((v23)*(nan)))/(100)))+((((v24)*(nan)))/(100)))+((((v25)*(nan)))/(100)))+((((v26)*(nan)))/(100)))+((((v27)*(nan)))/(100)))+((((v28)*(nan)))/(100)))+((((v29)*(nan)))/(100)))+((((v30)*(nan)))/(100)))+((((v31)*(nan)))/(100)))+((((v32)*(nan)))/(100)))+((((v33)*(nan)))/(100)))+((((v34)*(nan)))/(100)))+((((v35)*(nan)))/(100)))+((((v36)*(nan)))/(100)))+((((v37)*(nan)))/(100)))+((((v38)*(nan)))/(100)))+((((v39)*(nan)))/(100)))+((((v40)*(nan)))/(100)))+((((v41)*(nan)))/(100)))+((((v42)*(nan)))/(100)))+((((v43)*(nan)))/(100)))+((((v44)*(nan)))/(100)))+((((v45)*(nan)))/(100)))+((((v46)*(nan)))/(100)))+((((v47)*(nan)))/(100)))+((((v48)*(nan)))/(100)))+((((v49)*(nan)))/(100)))+((((v50)*(nan)))/(100)))+((((v51)*(nan)))/(100)))+((((v52)*(nan)))/(100)))+((((v53)*(nan)))/(100)))+((((v54)*(nan)))/(100)))+((((v55)*(nan)))/(100)))+((((v56)*(nan)))/(100)))+((((v57)*(nan)))/(100)))+((((v58)*(nan)))/(100)))+((((v59)*(nan)))/(100)))+((((v60)*(nan)))/(100)))+((((v61)*(nan)))/(100)))+((((v62)*(nan)))/(100)))+((((v63)*(nan)))/(100)))+((((v64)*(nan)))/(100)))+((((v65)*(nan)))/(100)))+((((v66)*(nan)))/(100)))+((((v67)*(nan)))/(100)))+((((v68)*(nan)))/(100)))+((((v69)*(nan)))/(100)))+((((v70)*(nan)))/(100)))+((((v71)*(nan)))/(100)))+((((v72)*(nan)))/(100)))+((((v73)*(nan)))/(100)))+((((v74)*(nan)))/(100)))+((((v75)*(nan)))/(100)))+((((v76)*(nan)))/(100)))+((((v77)*(nan)))/(100)))+((((v78)*(nan)))/(100)))+((((v79)*(nan)))/(100)))+((((v80)*(nan)))/(100)))+((((v81)*(nan)))/(100)))+((((v82)*(nan)))/(100)))+((((v83)*(nan)))/(100)))+((((v84)*(nan)))/(100)))+((((v85)*(nan)))/(100)))+((((v86)*(nan)))/(100)))+((((v87)*(nan)))/(100)))+((((v88)*(nan)))/(100)))+((((v89)*(nan)))/(100)))+((((v90)*(nan)))/(100)))+((((v91)*(nan)))/(100)))+((((v92)*(nan)))/(100)))+((((v93)*(nan)))/(100)))+((((v94)*(nan)))/(100)))+((((v95)*(nan)))/(100)))+((((v96)*(nan)))/(100))))/(100))))))/((1-((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((((0)*(v1)))*(1.0)))/(100)))+((((((0)*(v2)))*(1.0)))/(100)))+((((((0)*(v3)))*(1.0)))/(100)))+((((((0)*(v4)))*(1.0)))/(100)))+((((((0)*(v5)))*(1.0)))/(100)))+((((((0)*(v6)))*(1.0)))/(100)))+((((((0)*(v7)))*(1.0)))/(100)))+((((((0)*(v8)))*(1.0)))/(100)))+((((((0)*(v9)))*(1.0)))/(100)))+((((((0)*(v10)))*(1.0)))/(100)))+((((((0)*(v11)))*(1.0)))/(100)))+((((((0)*(v12)))*(1.0)))/(100)))+((((((0)*(v13)))*(1.0)))/(100)))+((((((0)*(v14)))*(1.0)))/(100)))+((((((0)*(v15)))*(1.0)))/(100)))+((((((0)*(v16)))*(1.0)))/(100)))+((((((0)*(v17)))*(1.0)))/(100)))+((((((0)*(v18)))*(1.0)))/(100)))+((((((0)*(v19)))*(1.0)))/(100)))+((((((0)*(v20)))*(1.0)))/(100)))+((((((0)*(v21)))*(1.0)))/(100)))+((((((0)*(v22)))*(1.0)))/(100)))+((((((0)*(v23)))*(1.0)))/(100)))+((((((0)*(v24)))*(1.0)))/(100)))+((((((0)*(v25)))*(1.0)))/(100)))+((((((0)*(v26)))*(1.0)))/(100)))+((((((0)*(v27)))*(1.0)))/(100)))+((((((0)*(v28)))*(1.0)))/(100)))+((((((0)*(v29)))*(1.0)))/(100)))+((((((0)*(v30)))*(1.0)))/(100)))+((((((0)*(v31)))*(1.0)))/(100)))+((((((0)*(v32)))*(1.0)))/(100)))+((((((0)*(v33)))*(1.0)))/(100)))+((((((0)*(v34)))*(1.0)))/(100)))+((((((0)*(v35)))*(1.0)))/(100)))+((((((0)*(v36)))*(1.0)))/(100)))+((((((0)*(v37)))*(1.0)))/(100)))+((((((0)*(v38)))*(1.0)))/(100)))+((((((0)*(v39)))*(1.0)))/(100)))+((((((0)*(v40)))*(1.0)))/(100)))+((((((0)*(v41)))*(1.0)))/(100)))+((((((0)*(v42)))*(1.0)))/(100)))+((((((0)*(v43)))*(1.0)))/(100)))+((((((0)*(v44)))*(1.0)))/(100)))+((((((0)*(v45)))*(1.0)))/(100)))+((((((0)*(v46)))*(1.0)))/(100)))+((((((0)*(v47)))*(1.0)))/(100)))+((((((0)*(v48)))*(1.0)))/(100)))+((((((0)*(v49)))*(1.0)))/(100)))+((((((0)*(v50)))*(1.0)))/(100)))+((((((0)*(v51)))*(1.0)))/(100)))+((((((0)*(v52)))*(1.0)))/(100)))+((((((0)*(v53)))*(1.0)))/(100)))+((((((0)*(v54)))*(1.0)))/(100)))+((((((0)*(v55)))*(1.0)))/(100)))+((((((0)*(v56)))*(1.0)))/(100)))+((((((0)*(v57)))*(1.0)))/(100)))+((((((0)*(v58)))*(1.0)))/(100)))+((((((0)*(v59)))*(1.0)))/(100)))+((((((0)*(v60)))*(1.0)))/(100)))+((((((0)*(v61)))*(1.0)))/(100)))+((((((0)*(v62)))*(1.0)))/(100)))+((((((0)*(v63)))*(1.0)))/(100)))+((((((0)*(v64)))*(1.0)))/(100)))+((((((0)*(v65)))*(1.0)))/(100)))+((((((0)*(v66)))*(1.0)))/(100)))+((((((0)*(v67)))*(1.0)))/(100)))+((((((0)*(v68)))*(1.0)))/(100)))+((((((0)*(v69)))*(1.0)))/(100)))+((((((0)*(v70)))*(1.0)))/(100)))+((((((0)*(v71)))*(1.0)))/(100)))+((((((0)*(v72)))*(1.0)))/(100)))+((((((0)*(v73)))*(1.0)))/(100)))+((((((0)*(v74)))*(1.0)))/(100)))+((((((0)*(v75)))*(1.0)))/(100)))+((((((0)*(v76)))*(1.0)))/(100)))+((((((0)*(v77)))*(1.0)))/(100)))+((((((0)*(v78)))*(1.0)))/(100)))+((((((0)*(v79)))*(1.0)))/(100)))+((((((0)*(v80)))*(1.0)))/(100)))+((((((0)*(v81)))*(1.0)))/(100)))+((((((0)*(v82)))*(1.0)))/(100)))+((((((0)*(v83)))*(1.0)))/(100)))+((((((0)*(v84)))*(1.0)))/(100)))+((((((0)*(v85)))*(1.0)))/(100)))+((((((0)*(v86)))*(1.0)))/(100)))+((((((0)*(v87)))*(1.0)))/(100)))+((((((0)*(v88)))*(1.0)))/(100)))+((((((0)*(v89)))*(1.0)))/(100)))+((((((0)*(v90)))*(1.0)))/(100)))+((((((0)*(v91)))*(1.0)))/(100)))+((((((0)*(v92)))*(1.0)))/(100)))+((((((0)*(v93)))*(1.0)))/(100)))+((((((0)*(v94)))*(1.0)))/(100)))+((((((0)*(v95)))*(1.0)))/(100)))+((((((0)*(v96)))*(1.0)))/(100))))/((1-((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((v1)*(nan)))/(100)))+((((v2)*(nan)))/(100)))+((((v3)*(nan)))/(100)))+((((v4)*(nan)))/(100)))+((((v5)*(nan)))/(100)))+((((v6)*(nan)))/(100)))+((((v7)*(nan)))/(100)))+((((v8)*(nan)))/(100)))+((((v9)*(nan)))/(100)))+((((v10)*(nan)))/(100)))+((((v11)*(nan)))/(100)))+((((v12)*(nan)))/(100)))+((((v13)*(nan)))/(100)))+((((v14)*(nan)))/(100)))+((((v15)*(nan)))/(100)))+((((v16)*(nan)))/(100)))+((((v17)*(nan)))/(100)))+((((v18)*(nan)))/(100)))+((((v19)*(nan)))/(100)))+((((v20)*(nan)))/(100)))+((((v21)*(nan)))/(100)))+((((v22)*(nan)))/(100)))+((((v23)*(nan)))/(100)))+((((v24)*(nan)))/(100)))+((((v25)*(nan)))/(100)))+((((v26)*(nan)))/(100)))+((((v27)*(nan)))/(100)))+((((v28)*(nan)))/(100)))+((((v29)*(nan)))/(100)))+((((v30)*(nan)))/(100)))+((((v31)*(nan)))/(100)))+((((v32)*(nan)))/(100)))+((((v33)*(nan)))/(100)))+((((v34)*(nan)))/(100)))+((((v35)*(nan)))/(100)))+((((v36)*(nan)))/(100)))+((((v37)*(nan)))/(100)))+((((v38)*(nan)))/(100)))+((((v39)*(nan)))/(100)))+((((v40)*(nan)))/(100)))+((((v41)*(nan)))/(100)))+((((v42)*(nan)))/(100)))+((((v43)*(nan)))/(100)))+((((v44)*(nan)))/(100)))+((((v45)*(nan)))/(100)))+((((v46)*(nan)))/(100)))+((((v47)*(nan)))/(100)))+((((v48)*(nan)))/(100)))+((((v49)*(nan)))/(100)))+((((v50)*(nan)))/(100)))+((((v51)*(nan)))/(100)))+((((v52)*(nan)))/(100)))+((((v53)*(nan)))/(100)))+((((v54)*(nan)))/(100)))+((((v55)*(nan)))/(100)))+((((v56)*(nan)))/(100)))+((((v57)*(nan)))/(100)))+((((v58)*(nan)))/(100)))+((((v59)*(nan)))/(100)))+((((v60)*(nan)))/(100)))+((((v61)*(nan)))/(100)))+((((v62)*(nan)))/(100)))+((((v63)*(nan)))/(100)))+((((v64)*(nan)))/(100)))+((((v65)*(nan)))/(100)))+((((v66)*(nan)))/(100)))+((((v67)*(nan)))/(100)))+((((v68)*(nan)))/(100)))+((((v69)*(nan)))/(100)))+((((v70)*(nan)))/(100)))+((((v71)*(nan)))/(100)))+((((v72)*(nan)))/(100)))+((((v73)*(nan)))/(100)))+((((v74)*(nan)))/(100)))+((((v75)*(nan)))/(100)))+((((v76)*(nan)))/(100)))+((((v77)*(nan)))/(100)))+((((v78)*(nan)))/(100)))+((((v79)*(nan)))/(100)))+((((v80)*(nan)))/(100)))+((((v81)*(nan)))/(100)))+((((v82)*(nan)))/(100)))+((((v83)*(nan)))/(100)))+((((v84)*(nan)))/(100)))+((((v85)*(nan)))/(100)))+((((v86)*(nan)))/(100)))+((((v87)*(nan)))/(100)))+((((v88)*(nan)))/(100)))+((((v89)*(nan)))/(100)))+((((v90)*(nan)))/(100)))+((((v91)*(nan)))/(100)))+((((v92)*(nan)))/(100)))+((((v93)*(nan)))/(100)))+((((v94)*(nan)))/(100)))+((((v95)*(nan)))/(100)))+((((v96)*(nan)))/(100))))/(100))))))/(100))))))*(1)))




2018-12-05 15:52:54,983 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 680.8815963996892), (1, 1, 1)]
2018-12-05 15:52:54,983 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.7057552595311165, 'sio2': 91.62143003582499, 'cost': 0.6728147046439013}
2018-12-05 15:52:57,182 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [0.0, 0.0, 0.0, 0.0, 0.0, 0.6015498, 0.0, 0.0, 0.0, 0.1142943, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1142943, 0.0, 0.0, 0.0, 0.0, 12.5228, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1142943, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1142943, 0.0, 0.0, 0.0, 8.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1142943, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6261399, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6261399, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6261399, 0.0, 11.26373, 8.390973, 0.0, 0.0, 16.14492, 40.0, 0.0, 0.6261399, 0.0]
2018-12-05 15:52:57,182 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['高宝印粉-13_1=[0.0]', '朝鲜粉-13_1=[0.0]', '伊朗粉-13_1=[0.0]', '海南铁粉-13_1=[0.0]', '高返-13_1=[0.0]', '铁泥-13_1=[0.6015498]', '过筛镍矿-13_1=[0.0]', '塞阿里昂粉-13_1=[0.0]', '巴西粗粉-13_1=[0.0]', '重力除尘灰-13_1=[0.1142943]', '水洗铁-13_1=[0.0]', '巴西粗粉-13_3=[0.0]', '还原铁粉-13_3=[0.0]', '高返-13_3=[0.0]', '过筛镍矿-13_3=[0.0]', '塞拉利昂粉-13_3=[0.0]', '巴西卡粉-13_3=[0.0]', '水洗铁-13_3=[0.0]', '马来西亚粉（高硅）-13_3=[0.0]', '印尼粉-13_3=[0.0]', '塞尔维亚粉-13_3=[0.0]', '重力除尘灰-13_3=[0.1142943]', '马来西亚粉（低硅）-13_3=[0.0]', 'PB粉-13_3=[0.0]', '高品澳粉-13_4=[0.0]', '巴西精粉-13_4=[0.0]', '高返-13_4=[12.5228]', '过筛镍矿-13_4=[0.0]', '塞拉利昂（破碎）-13_4=[0.0]', '还原铁粉-13_4=[0.0]', '赛尔维亚粉-13_4=[0.0]', '印尼粉-13_4=[0.0]', '水洗铁-13_4=[0.0]', '马来西亚-13_4=[0.0]', '重力除尘灰-13_4=[0.1142943]', '高品澳粉-13_5=[0.0]', '赛尔维亚粉-13_5=[0.0]', '高返-13_5=[0.0]', '过筛镍矿-13_5=[0.0]', '过筛塞拉利昂粉-13_5=[0.0]', '印尼粉-13_5=[0.0]', '委内瑞拉粉-13_5=[0.0]', '朝鲜铁粉-13_5=[0.0]', '还原铁粉-13_5=[0.0]', '水洗铁-13_5=[0.0]', '重力除尘灰-13_5=[0.1142943]', '高品澳粉-13_12=[0.0]', '赛尔维亚粉-13_12=[0.0]', '高返-13_12=[0.0]', '过筛镍矿-13_12=[8.0]', '过筛塞拉利昂粉-13_12=[0.0]', '印尼粉-13_12=[0.0]', '委内瑞拉粉-13_12=[0.0]', '朝鲜铁粉-13_12=[0.0]', '还原铁粉-13_12=[0.0]', '水洗铁-13_12=[0.0]', '重力除尘灰-13_12=[0.1142943]', '巴西粗粉-14-1=[0.0]', '高品澳粉-14-1=[0.0]', '高返-14-1=[0.0]', '过筛镍矿-14-1=[0.0]', '塞拉利昂粉-14-1=[0.0]', 'FMG低品澳粉-14-1=[0.0]', '氧化铁-14-1=[0.0]', '铁泥-14-1=[0.0]', '干渣粉-14-1=[0.6261399]', '重力除尘灰-14-1=[0.0]', '巴西粗粉-14-3=[0.0]', '高品澳粉-14-3=[0.0]', '高返-14-3=[0.0]', '过筛镍矿-14-3=[0.0]', '塞拉利昂粉-14-3=[0.0]', 'FMG低品澳粉-14-3=[0.0]', '氧化铁-14-3=[0.0]', '铁泥-14-3=[0.0]', '干渣粉-14-3=[0.6261399]', '重力除尘灰-14-3=[0.0]', '巴西粗粉-14-4=[0.0]', '高品澳粉-14-4=[0.0]', '高返-14-4=[0.0]', '过筛镍矿-14-4=[0.0]', '塞拉利昂粉-14-4=[0.0]', 'FMG低品澳粉-14-4=[0.0]', '氧化铁-14-4=[0.0]', '铁泥-14-4=[0.0]', '干渣粉-14-4=[0.6261399]', '重力除尘灰-14-4=[0.0]', '巴西粗粉-14-4=[11.26373]', '高品澳粉-14-12=[8.390973]', '高返-14-12=[0.0]', '过筛镍矿-14-12=[0.0]', '塞拉利昂粉-14-12=[16.14492]', 'FMG低品澳粉-14-12=[40.0]', '铁泥-14-12=[0.0]', '干渣粉-14-12=[0.6261399]', '重力除尘灰-14-12=[0.0]']
2018-12-05 15:52:57,187 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [55.90000191581774, 5.409476629437501, 2.3327288220499995, 0.7708580982428573, 3.0000003276899996, 0.16553407738, 0.067777713201, 0.1648]
2018-12-05 15:52:57,187 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=485.0324705378101, wet_price=nan, obj_price=nan)
2018-12-05 15:52:57,307 __main__ mainTask ERROR = Traceback (most recent call last):
  File "C:/Users/sun/PycharmProjects/optimizationproblem/gekkoSolution/mainTask.py", line 43, in <module>
    lp.write_to_excel()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\gekkoSolution\gekkoProblem.py", line 90, in write_to_excel
    self.data.write_to_excel(excel_file, prices)
  File "C:\Users\sun\PycharmProjects\optimizationproblem\utils\excelParse.py", line 132, in write_to_excel
    worksheet.write(self._var_nums + 3, j, prices.wet_price, cell_format)
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\xlsxwriter\worksheet.py", line 67, in cell_wrapper
    return method(self, *args, **kwargs)
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\xlsxwriter\worksheet.py", line 408, in write
    return self._write(row, col, *args)
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\xlsxwriter\worksheet.py", line 430, in _write
    return self._write_number(row, col, *args)
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\xlsxwriter\worksheet.py", line 562, in _write_number
    "NAN/INF not supported in write_number() "
TypeError: NAN/INF not supported in write_number() without 'nan_inf_to_errors' Workbook() option

2018-12-05 15:57:18,128 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 680.8815963996892), (1, 1, 1)]
2018-12-05 15:57:18,128 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.7057552595311165, 'sio2': 91.62143003582499, 'cost': 0.6728147046439013}
2018-12-05 15:57:20,022 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [0.0, 0.0, 0.0, 0.0, 0.0, 0.6015498, 0.0, 0.0, 0.0, 0.1142943, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1142943, 0.0, 0.0, 0.0, 0.0, 12.5228, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1142943, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1142943, 0.0, 0.0, 0.0, 8.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1142943, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6261399, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6261399, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6261399, 0.0, 11.26373, 8.390973, 0.0, 0.0, 16.14492, 40.0, 0.0, 0.6261399, 0.0]
2018-12-05 15:57:20,022 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['高宝印粉-13_1=[0.0]', '朝鲜粉-13_1=[0.0]', '伊朗粉-13_1=[0.0]', '海南铁粉-13_1=[0.0]', '高返-13_1=[0.0]', '铁泥-13_1=[0.6015498]', '过筛镍矿-13_1=[0.0]', '塞阿里昂粉-13_1=[0.0]', '巴西粗粉-13_1=[0.0]', '重力除尘灰-13_1=[0.1142943]', '水洗铁-13_1=[0.0]', '巴西粗粉-13_3=[0.0]', '还原铁粉-13_3=[0.0]', '高返-13_3=[0.0]', '过筛镍矿-13_3=[0.0]', '塞拉利昂粉-13_3=[0.0]', '巴西卡粉-13_3=[0.0]', '水洗铁-13_3=[0.0]', '马来西亚粉（高硅）-13_3=[0.0]', '印尼粉-13_3=[0.0]', '塞尔维亚粉-13_3=[0.0]', '重力除尘灰-13_3=[0.1142943]', '马来西亚粉（低硅）-13_3=[0.0]', 'PB粉-13_3=[0.0]', '高品澳粉-13_4=[0.0]', '巴西精粉-13_4=[0.0]', '高返-13_4=[12.5228]', '过筛镍矿-13_4=[0.0]', '塞拉利昂（破碎）-13_4=[0.0]', '还原铁粉-13_4=[0.0]', '赛尔维亚粉-13_4=[0.0]', '印尼粉-13_4=[0.0]', '水洗铁-13_4=[0.0]', '马来西亚-13_4=[0.0]', '重力除尘灰-13_4=[0.1142943]', '高品澳粉-13_5=[0.0]', '赛尔维亚粉-13_5=[0.0]', '高返-13_5=[0.0]', '过筛镍矿-13_5=[0.0]', '过筛塞拉利昂粉-13_5=[0.0]', '印尼粉-13_5=[0.0]', '委内瑞拉粉-13_5=[0.0]', '朝鲜铁粉-13_5=[0.0]', '还原铁粉-13_5=[0.0]', '水洗铁-13_5=[0.0]', '重力除尘灰-13_5=[0.1142943]', '高品澳粉-13_12=[0.0]', '赛尔维亚粉-13_12=[0.0]', '高返-13_12=[0.0]', '过筛镍矿-13_12=[8.0]', '过筛塞拉利昂粉-13_12=[0.0]', '印尼粉-13_12=[0.0]', '委内瑞拉粉-13_12=[0.0]', '朝鲜铁粉-13_12=[0.0]', '还原铁粉-13_12=[0.0]', '水洗铁-13_12=[0.0]', '重力除尘灰-13_12=[0.1142943]', '巴西粗粉-14-1=[0.0]', '高品澳粉-14-1=[0.0]', '高返-14-1=[0.0]', '过筛镍矿-14-1=[0.0]', '塞拉利昂粉-14-1=[0.0]', 'FMG低品澳粉-14-1=[0.0]', '氧化铁-14-1=[0.0]', '铁泥-14-1=[0.0]', '干渣粉-14-1=[0.6261399]', '重力除尘灰-14-1=[0.0]', '巴西粗粉-14-3=[0.0]', '高品澳粉-14-3=[0.0]', '高返-14-3=[0.0]', '过筛镍矿-14-3=[0.0]', '塞拉利昂粉-14-3=[0.0]', 'FMG低品澳粉-14-3=[0.0]', '氧化铁-14-3=[0.0]', '铁泥-14-3=[0.0]', '干渣粉-14-3=[0.6261399]', '重力除尘灰-14-3=[0.0]', '巴西粗粉-14-4=[0.0]', '高品澳粉-14-4=[0.0]', '高返-14-4=[0.0]', '过筛镍矿-14-4=[0.0]', '塞拉利昂粉-14-4=[0.0]', 'FMG低品澳粉-14-4=[0.0]', '氧化铁-14-4=[0.0]', '铁泥-14-4=[0.0]', '干渣粉-14-4=[0.6261399]', '重力除尘灰-14-4=[0.0]', '巴西粗粉-14-4=[11.26373]', '高品澳粉-14-12=[8.390973]', '高返-14-12=[0.0]', '过筛镍矿-14-12=[0.0]', '塞拉利昂粉-14-12=[16.14492]', 'FMG低品澳粉-14-12=[40.0]', '铁泥-14-12=[0.0]', '干渣粉-14-12=[0.6261399]', '重力除尘灰-14-12=[0.0]']
2018-12-05 15:57:20,027 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [55.90000191581774, 5.409476629437501, 2.3327288220499995, 0.7708580982428573, 3.0000003276899996, 0.16553407738, 0.067777713201, 0.1648]
2018-12-05 15:57:20,027 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=485.0324705378101, wet_price=485.0324705378101, obj_price=485.0324705378101)
2018-12-05 17:47:40,887 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 680.8815963996892), (1, 1, 1)]
2018-12-05 17:47:40,887 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.7057552595311165, 'sio2': 91.62143003582499, 'cost': 0.6728147046439013}
2018-12-05 17:47:43,134 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [0.0, 0.0, 0.0, 0.0, 0.0, 0.6015498, 0.0, 0.0, 0.0, 0.1142943, 0.0, 0.0, 0.0, 6.296477, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1142943, 0.0, 0.0, 0.0, 0.0, 6.226321, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1142943, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1142943, 0.0, 0.0, 0.0, 8.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1142943, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6261399, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6261399, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6261399, 0.0, 11.26373, 8.390973, 0.0, 0.0, 16.14492, 40.0, 0.0, 0.6261399, 0.0]
2018-12-05 17:47:43,134 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['高宝印粉-13_1=[0.0]', '朝鲜粉-13_1=[0.0]', '伊朗粉-13_1=[0.0]', '海南铁粉-13_1=[0.0]', '高返-13_1=[0.0]', '铁泥-13_1=[0.6015498]', '过筛镍矿-13_1=[0.0]', '塞阿里昂粉-13_1=[0.0]', '巴西粗粉-13_1=[0.0]', '重力除尘灰-13_1=[0.1142943]', '水洗铁-13_1=[0.0]', '巴西粗粉-13_3=[0.0]', '还原铁粉-13_3=[0.0]', '高返-13_3=[6.296477]', '过筛镍矿-13_3=[0.0]', '塞拉利昂粉-13_3=[0.0]', '巴西卡粉-13_3=[0.0]', '水洗铁-13_3=[0.0]', '马来西亚粉（高硅）-13_3=[0.0]', '印尼粉-13_3=[0.0]', '塞尔维亚粉-13_3=[0.0]', '重力除尘灰-13_3=[0.1142943]', '马来西亚粉（低硅）-13_3=[0.0]', 'PB粉-13_3=[0.0]', '高品澳粉-13_4=[0.0]', '巴西精粉-13_4=[0.0]', '高返-13_4=[6.226321]', '过筛镍矿-13_4=[0.0]', '塞拉利昂（破碎）-13_4=[0.0]', '还原铁粉-13_4=[0.0]', '赛尔维亚粉-13_4=[0.0]', '印尼粉-13_4=[0.0]', '水洗铁-13_4=[0.0]', '马来西亚-13_4=[0.0]', '重力除尘灰-13_4=[0.1142943]', '高品澳粉-13_5=[0.0]', '赛尔维亚粉-13_5=[0.0]', '高返-13_5=[0.0]', '过筛镍矿-13_5=[0.0]', '过筛塞拉利昂粉-13_5=[0.0]', '印尼粉-13_5=[0.0]', '委内瑞拉粉-13_5=[0.0]', '朝鲜铁粉-13_5=[0.0]', '还原铁粉-13_5=[0.0]', '水洗铁-13_5=[0.0]', '重力除尘灰-13_5=[0.1142943]', '高品澳粉-13_12=[0.0]', '赛尔维亚粉-13_12=[0.0]', '高返-13_12=[0.0]', '过筛镍矿-13_12=[8.0]', '过筛塞拉利昂粉-13_12=[0.0]', '印尼粉-13_12=[0.0]', '委内瑞拉粉-13_12=[0.0]', '朝鲜铁粉-13_12=[0.0]', '还原铁粉-13_12=[0.0]', '水洗铁-13_12=[0.0]', '重力除尘灰-13_12=[0.1142943]', '巴西粗粉-14-1=[0.0]', '高品澳粉-14-1=[0.0]', '高返-14-1=[0.0]', '过筛镍矿-14-1=[0.0]', '塞拉利昂粉-14-1=[0.0]', 'FMG低品澳粉-14-1=[0.0]', '氧化铁-14-1=[0.0]', '铁泥-14-1=[0.0]', '干渣粉-14-1=[0.6261399]', '重力除尘灰-14-1=[0.0]', '巴西粗粉-14-3=[0.0]', '高品澳粉-14-3=[0.0]', '高返-14-3=[0.0]', '过筛镍矿-14-3=[0.0]', '塞拉利昂粉-14-3=[0.0]', 'FMG低品澳粉-14-3=[0.0]', '氧化铁-14-3=[0.0]', '铁泥-14-3=[0.0]', '干渣粉-14-3=[0.6261399]', '重力除尘灰-14-3=[0.0]', '巴西粗粉-14-4=[0.0]', '高品澳粉-14-4=[0.0]', '高返-14-4=[0.0]', '过筛镍矿-14-4=[0.0]', '塞拉利昂粉-14-4=[0.0]', 'FMG低品澳粉-14-4=[0.0]', '氧化铁-14-4=[0.0]', '铁泥-14-4=[0.0]', '干渣粉-14-4=[0.6261399]', '重力除尘灰-14-4=[0.0]', '巴西粗粉-14-4=[11.26373]', '高品澳粉-14-12=[8.390973]', '高返-14-12=[0.0]', '过筛镍矿-14-12=[0.0]', '塞拉利昂粉-14-12=[16.14492]', 'FMG低品澳粉-14-12=[40.0]', '铁泥-14-12=[0.0]', '干渣粉-14-12=[0.6261399]', '重力除尘灰-14-12=[0.0]']
2018-12-05 17:47:43,139 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [55.90000087581773, 5.4094765194375, 2.332728622049999, 0.7708580382428574, 3.00000027169, 0.16553406137999999, 0.067777712121, 0.1648]
2018-12-05 17:47:43,140 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=485.0324605378101, wet_price=485.0324605378101, obj_price=485.0324605378101)
2018-12-05 17:47:43,562 __main__ mainTask ERROR = Traceback (most recent call last):
  File "C:/Users/sun/PycharmProjects/optimizationproblem/gekkoSolution/mainTask.py", line 42, in <module>
    lp.write_to_excel()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\gekkoSolution\gekkoProblem.py", line 91, in write_to_excel
    self.data.write_to_excel(excel_file, prices)
  File "C:\Users\sun\PycharmProjects\optimizationproblem\utils\excelParse.py", line 136, in write_to_excel
    writer.save()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\pandas\io\excel.py", line 1732, in save
    return self.book.close()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\xlsxwriter\workbook.py", line 306, in close
    self._store_workbook()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\xlsxwriter\workbook.py", line 655, in _store_workbook
    allowZip64=self.allow_zip64)
  File "C:\Users\sun\AppData\Local\Programs\Python\Python37-32\lib\zipfile.py", line 1182, in __init__
    self.fp = io.open(file, filemode)
PermissionError: [Errno 13] Permission denied: '../data/result.xlsx'

2018-12-05 17:48:10,196 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 680.8815963996892), (1, 1, 1)]
2018-12-05 17:48:10,196 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.7057552595311165, 'sio2': 91.62143003582499, 'cost': 0.6728147046439013}
2018-12-05 17:48:10,381 __main__ mainTask ERROR = Traceback (most recent call last):
  File "C:/Users/sun/PycharmProjects/optimizationproblem/gekkoSolution/mainTask.py", line 37, in <module>
    lp.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\gekkoSolution\gekkoProblem.py", line 46, in solve
    self.prob.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\gekko\gekko.py", line 682, in solve
    raise Exception(apm_error)
Exception:  @error: Max Equation Length
 Error with line number:  134
 minimize((0+((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((((910.99486005)*(v1)))*(1.0)))/(100)))+((((((853.351)*(v2)))*(1.0)))/(100)))+((((((1039.8935286)*(v3)))*(1.0)))/(100)))+((((((770.6612881)*(v4)))*(1.0)))/(100)))+((((((500)*(v5)))*(1.0)))/(100)))+((((((500)*(v6)))*(1.0)))/(100)))+((((((826.195501934952)*(v7)))*(1.0)))/(100)))+((((((989.88716)*(v8)))*(1.0)))/(100)))+((((((1130.5194048)*(v9)))*(1.0)))/(100)))+((((((500)*(v10)))*(1.0)))/(100)))+((((((300)*(v11)))*(1.0)))/(100)))+((((((1069.8162944)*(v12)))*(1.0)))/(100)))+((((((1245.56)*(v13)))*(1.0)))/(100)))+((((((500)*(v14)))*(1.0)))/(100)))+((((((825.711413030191)*(v15)))*(1.0)))/(100)))+((((((1004.658478)*(v16)))*(1.0)))/(100)))+((((((1129.8570048)*(v17)))*(1.0)))/(100)))+((((((300)*(v18)))*(1.0)))/(100)))+((((((801.67994)*(v19)))*(1.0)))/(100)))+((((((834.2588482)*(v20)))*(1.0)))/(100)))+((((((991.6951428)*(v21)))*(1.0)))/(100)))+((((((500)*(v22)))*(1.0)))/(100)))+((((((886.96504)*(v23)))*(1.0)))/(100)))+((((((1049.00673)*(v24)))*(1.0)))/(100)))+((((((1059.7526526)*(v25)))*(1.0)))/(100)))+((((((1097.7898072)*(v26)))*(1.0)))/(100)))+((((((500)*(v27)))*(1.0)))/(100)))+((((((825.711413030191)*(v28)))*(1.0)))/(100)))+((((((1004.658478)*(v29)))*(1.0)))/(100)))+((((((1241.92)*(v30)))*(1.0)))/(100)))+((((((941.547504)*(v31)))*(1.0)))/(100)))+((((((826.7537594)*(v32)))*(1.0)))/(100)))+((((((300)*(v33)))*(1.0)))/(100)))+((((((775.7532696)*(v34)))*(1.0)))/(100)))+((((((500)*(v35)))*(1.0)))/(100)))+((((((944.28)*(v36)))*(1.0)))/(100)))+((((((612.08)*(v37)))*(1.0)))/(100)))+((((((500)*(v38)))*(1.0)))/(100)))+((((((473.38)*(v39)))*(1.0)))/(100)))+((((((925.96)*(v40)))*(1.0)))/(100)))+((((((484.27)*(v41)))*(1.0)))/(100)))+((((((780.55)*(v42)))*(1.0)))/(100)))+((((((434.35)*(v43)))*(1.0)))/(100)))+((((((1228.65)*(v44)))*(1.0)))/(100)))+((((((300)*(v45)))*(1.0)))/(100)))+((((((500)*(v46)))*(1.0)))/(100)))+((((((964.82)*(v47)))*(1.0)))/(100)))+((((((586.286222115809)*(v48)))*(1.0)))/(100)))+((((((500)*(v49)))*(1.0)))/(100)))+((((((408.863293435074)*(v50)))*(1.0)))/(100)))+((((((925.96)*(v51)))*(1.0)))/(100)))+((((((405.863293435074)*(v52)))*(1.0)))/(100)))+((((((910.96)*(v53)))*(1.0)))/(100)))+((((((450.95)*(v54)))*(1.0)))/(100)))+((((((1242.28973578925)*(v55)))*(1.0)))/(100)))+((((((300)*(v56)))*(1.0)))/(100)))+((((((500)*(v57)))*(1.0)))/(100)))+((((((773.95)*(v58)))*(1.0)))/(100)))+((((((793.97)*(v59)))*(1.0)))/(100)))+((((((500)*(v60)))*(1.0)))/(100)))+((((((634.53)*(v61)))*(1.0)))/(100)))+((((((746.2)*(v62)))*(1.0)))/(100)))+((((((747.1)*(v63)))*(1.0)))/(100)))+((((((800)*(v64)))*(1.0)))/(100)))+((((((500)*(v65)))*(1.0)))/(100)))+((((((100)*(v66)))*(1.0)))/(100)))+((((((500)*(v67)))*(1.0)))/(100)))+((((((773.95)*(v68)))*(1.0)))/(100)))+((((((793.97)*(v69)))*(1.0)))/(100)))+((((((500)*(v70)))*(1.0)))/(100)))+((((((634.53)*(v71)))*(1.0)))/(100)))+((((((746.2)*(v72)))*(1.0)))/(100)))+((((((747.1)*(v73)))*(1.0)))/(100)))+((((((800)*(v74)))*(1.0)))/(100)))+((((((500)*(v75)))*(1.0)))/(100)))+((((((100)*(v76)))*(1.0)))/(100)))+((((((500)*(v77)))*(1.0)))/(100)))+((((((773.95)*(v78)))*(1.0)))/(100)))+((((((793.97)*(v79)))*(1.0)))/(100)))+((((((500)*(v80)))*(1.0)))/(100)))+((((((634.53)*(v81)))*(1.0)))/(100)))+((((((746.2)*(v82)))*(1.0)))/(100)))+((((((747.1)*(v83)))*(1.0)))/(100)))+((((((800)*(v84)))*(1.0)))/(100)))+((((((500)*(v85)))*(1.0)))/(100)))+((((((100)*(v86)))*(1.0)))/(100)))+((((((500)*(v87)))*(1.0)))/(100)))+((((((566.5)*(v88)))*(1.0)))/(100)))+((((((600.5)*(v89)))*(1.0)))/(100)))+((((((500)*(v90)))*(1.0)))/(100)))+((((((431.41)*(v91)))*(1.0)))/(100)))+((((((498.015344202792)*(v92)))*(1.0)))/(100)))+((((((466.846846846847)*(v93)))*(1.0)))/(100)))+((((((500)*(v94)))*(1.0)))/(100)))+((((((100)*(v95)))*(1.0)))/(100)))+((((((500)*(v96)))*(1.0)))/(100))))/((1-((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((v1)*(0)))/(100)))+((((v2)*(0)))/(100)))+((((v3)*(0)))/(100)))+((((v4)*(0)))/(100)))+((((v5)*(0)))/(100)))+((((v6)*(0)))/(100)))+((((v7)*(0)))/(100)))+((((v8)*(0)))/(100)))+((((v9)*(0)))/(100)))+((((v10)*(0)))/(100)))+((((v11)*(0)))/(100)))+((((v12)*(0)))/(100)))+((((v13)*(0)))/(100)))+((((v14)*(0)))/(100)))+((((v15)*(0)))/(100)))+((((v16)*(0)))/(100)))+((((v17)*(0)))/(100)))+((((v18)*(0)))/(100)))+((((v19)*(0)))/(100)))+((((v20)*(0)))/(100)))+((((v21)*(0)))/(100)))+((((v22)*(0)))/(100)))+((((v23)*(0)))/(100)))+((((v24)*(0)))/(100)))+((((v25)*(0)))/(100)))+((((v26)*(0)))/(100)))+((((v27)*(0)))/(100)))+((((v28)*(0)))/(100)))+((((v29)*(0)))/(100)))+((((v30)*(0)))/(100)))+((((v31)*(0)))/(100)))+((((v32)*(0)))/(100)))+((((v33)*(0)))/(100)))+((((v34)*(0)))/(100)))+((((v35)*(0)))/(100)))+((((v36)*(0)))/(100)))+((((v37)*(0)))/(100)))+((((v38)*(0)))/(100)))+((((v39)*(0)))/(100)))+((((v40)*(0)))/(100)))+((((v41)*(0)))/(100)))+((((v42)*(0)))/(100)))+((((v43)*(0)))/(100)))+((((v44)*(0)))/(100)))+((((v45)*(0)))/(100)))+((((v46)*(0)))/(100)))+((((v47)*(0)))/(100)))+((((v48)*(0)))/(100)))+((((v49)*(0)))/(100)))+((((v50)*(0)))/(100)))+((((v51)*(0)))/(100)))+((((v52)*(0)))/(100)))+((((v53)*(0)))/(100)))+((((v54)*(0)))/(100)))+((((v55)*(0)))/(100)))+((((v56)*(0)))/(100)))+((((v57)*(0)))/(100)))+((((v58)*(0)))/(100)))+((((v59)*(0)))/(100)))+((((v60)*(0)))/(100)))+((((v61)*(0)))/(100)))+((((v62)*(0)))/(100)))+((((v63)*(0)))/(100)))+((((v64)*(0)))/(100)))+((((v65)*(0)))/(100)))+((((v66)*(0)))/(100)))+((((v67)*(0)))/(100)))+((((v68)*(0)))/(100)))+((((v69)*(0)))/(100)))+((((v70)*(0)))/(100)))+((((v71)*(0)))/(100)))+((((v72)*(0)))/(100)))+((((v73)*(0)))/(100)))+((((v74)*(0)))/(100)))+((((v75)*(0)))/(100)))+((((v76)*(0)))/(100)))+((((v77)*(0)))/(100)))+((((v78)*(0)))/(100)))+((((v79)*(0)))/(100)))+((((v80)*(0)))/(100)))+((((v81)*(0)))/(100)))+((((v82)*(0)))/(100)))+((((v83)*(0)))/(100)))+((((v84)*(0)))/(100)))+((((v85)*(0)))/(100)))+((((v86)*(0)))/(100)))+((((v87)*(0)))/(100)))+((((v88)*(0)))/(100)))+((((v89)*(0)))/(100)))+((((v90)*(0)))/(100)))+((((v91)*(0)))/(100)))+((((v92)*(0)))/(100)))+((((v93)*(0)))/(100)))+((((v94)*(0)))/(100)))+((((v95)*(0)))/(100)))+((((v96)*(0)))/(100))))/(100))))))/((1-((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((((0)*(v1)))*(1.0)))/(100)))+((((((0)*(v2)))*(1.0)))/(100)))+((((((0)*(v3)))*(1.0)))/(100)))+((((((0)*(v4)))*(1.0)))/(100)))+((((((0)*(v5)))*(1.0)))/(100)))+((((((0)*(v6)))*(1.0)))/(100)))+((((((0)*(v7)))*(1.0)))/(100)))+((((((0)*(v8)))*(1.0)))/(100)))+((((((0)*(v9)))*(1.0)))/(100)))+((((((0)*(v10)))*(1.0)))/(100)))+((((((0)*(v11)))*(1.0)))/(100)))+((((((0)*(v12)))*(1.0)))/(100)))+((((((0)*(v13)))*(1.0)))/(100)))+((((((0)*(v14)))*(1.0)))/(100)))+((((((0)*(v15)))*(1.0)))/(100)))+((((((0)*(v16)))*(1.0)))/(100)))+((((((0)*(v17)))*(1.0)))/(100)))+((((((0)*(v18)))*(1.0)))/(100)))+((((((0)*(v19)))*(1.0)))/(100)))+((((((0)*(v20)))*(1.0)))/(100)))+((((((0)*(v21)))*(1.0)))/(100)))+((((((0)*(v22)))*(1.0)))/(100)))+((((((0)*(v23)))*(1.0)))/(100)))+((((((0)*(v24)))*(1.0)))/(100)))+((((((0)*(v25)))*(1.0)))/(100)))+((((((0)*(v26)))*(1.0)))/(100)))+((((((0)*(v27)))*(1.0)))/(100)))+((((((0)*(v28)))*(1.0)))/(100)))+((((((0)*(v29)))*(1.0)))/(100)))+((((((0)*(v30)))*(1.0)))/(100)))+((((((0)*(v31)))*(1.0)))/(100)))+((((((0)*(v32)))*(1.0)))/(100)))+((((((0)*(v33)))*(1.0)))/(100)))+((((((0)*(v34)))*(1.0)))/(100)))+((((((0)*(v35)))*(1.0)))/(100)))+((((((0)*(v36)))*(1.0)))/(100)))+((((((0)*(v37)))*(1.0)))/(100)))+((((((0)*(v38)))*(1.0)))/(100)))+((((((0)*(v39)))*(1.0)))/(100)))+((((((0)*(v40)))*(1.0)))/(100)))+((((((0)*(v41)))*(1.0)))/(100)))+((((((0)*(v42)))*(1.0)))/(100)))+((((((0)*(v43)))*(1.0)))/(100)))+((((((0)*(v44)))*(1.0)))/(100)))+((((((0)*(v45)))*(1.0)))/(100)))+((((((0)*(v46)))*(1.0)))/(100)))+((((((0)*(v47)))*(1.0)))/(100)))+((((((0)*(v48)))*(1.0)))/(100)))+((((((0)*(v49)))*(1.0)))/(100)))+((((((0)*(v50)))*(1.0)))/(100)))+((((((0)*(v51)))*(1.0)))/(100)))+((((((0)*(v52)))*(1.0)))/(100)))+((((((0)*(v53)))*(1.0)))/(100)))+((((((0)*(v54)))*(1.0)))/(100)))+((((((0)*(v55)))*(1.0)))/(100)))+((((((0)*(v56)))*(1.0)))/(100)))+((((((0)*(v57)))*(1.0)))/(100)))+((((((0)*(v58)))*(1.0)))/(100)))+((((((0)*(v59)))*(1.0)))/(100)))+((((((0)*(v60)))*(1.0)))/(100)))+((((((0)*(v61)))*(1.0)))/(100)))+((((((0)*(v62)))*(1.0)))/(100)))+((((((0)*(v63)))*(1.0)))/(100)))+((((((0)*(v64)))*(1.0)))/(100)))+((((((0)*(v65)))*(1.0)))/(100)))+((((((0)*(v66)))*(1.0)))/(100)))+((((((0)*(v67)))*(1.0)))/(100)))+((((((0)*(v68)))*(1.0)))/(100)))+((((((0)*(v69)))*(1.0)))/(100)))+((((((0)*(v70)))*(1.0)))/(100)))+((((((0)*(v71)))*(1.0)))/(100)))+((((((0)*(v72)))*(1.0)))/(100)))+((((((0)*(v73)))*(1.0)))/(100)))+((((((0)*(v74)))*(1.0)))/(100)))+((((((0)*(v75)))*(1.0)))/(100)))+((((((0)*(v76)))*(1.0)))/(100)))+((((((0)*(v77)))*(1.0)))/(100)))+((((((0)*(v78)))*(1.0)))/(100)))+((((((0)*(v79)))*(1.0)))/(100)))+((((((0)*(v80)))*(1.0)))/(100)))+((((((0)*(v81)))*(1.0)))/(100)))+((((((0)*(v82)))*(1.0)))/(100)))+((((((0)*(v83)))*(1.0)))/(100)))+((((((0)*(v84)))*(1.0)))/(100)))+((((((0)*(v85)))*(1.0)))/(100)))+((((((0)*(v86)))*(1.0)))/(100)))+((((((0)*(v87)))*(1.0)))/(100)))+((((((0)*(v88)))*(1.0)))/(100)))+((((((0)*(v89)))*(1.0)))/(100)))+((((((0)*(v90)))*(1.0)))/(100)))+((((((0)*(v91)))*(1.0)))/(100)))+((((((0)*(v92)))*(1.0)))/(100)))+((((((0)*(v93)))*(1.0)))/(100)))+((((((0)*(v94)))*(1.0)))/(100)))+((((((0)*(v95)))*(1.0)))/(100)))+((((((0)*(v96)))*(1.0)))/(100))))/((1-((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((v1)*(0)))/(100)))+((((v2)*(0)))/(100)))+((((v3)*(0)))/(100)))+((((v4)*(0)))/(100)))+((((v5)*(0)))/(100)))+((((v6)*(0)))/(100)))+((((v7)*(0)))/(100)))+((((v8)*(0)))/(100)))+((((v9)*(0)))/(100)))+((((v10)*(0)))/(100)))+((((v11)*(0)))/(100)))+((((v12)*(0)))/(100)))+((((v13)*(0)))/(100)))+((((v14)*(0)))/(100)))+((((v15)*(0)))/(100)))+((((v16)*(0)))/(100)))+((((v17)*(0)))/(100)))+((((v18)*(0)))/(100)))+((((v19)*(0)))/(100)))+((((v20)*(0)))/(100)))+((((v21)*(0)))/(100)))+((((v22)*(0)))/(100)))+((((v23)*(0)))/(100)))+((((v24)*(0)))/(100)))+((((v25)*(0)))/(100)))+((((v26)*(0)))/(100)))+((((v27)*(0)))/(100)))+((((v28)*(0)))/(100)))+((((v29)*(0)))/(100)))+((((v30)*(0)))/(100)))+((((v31)*(0)))/(100)))+((((v32)*(0)))/(100)))+((((v33)*(0)))/(100)))+((((v34)*(0)))/(100)))+((((v35)*(0)))/(100)))+((((v36)*(0)))/(100)))+((((v37)*(0)))/(100)))+((((v38)*(0)))/(100)))+((((v39)*(0)))/(100)))+((((v40)*(0)))/(100)))+((((v41)*(0)))/(100)))+((((v42)*(0)))/(100)))+((((v43)*(0)))/(100)))+((((v44)*(0)))/(100)))+((((v45)*(0)))/(100)))+((((v46)*(0)))/(100)))+((((v47)*(0)))/(100)))+((((v48)*(0)))/(100)))+((((v49)*(0)))/(100)))+((((v50)*(0)))/(100)))+((((v51)*(0)))/(100)))+((((v52)*(0)))/(100)))+((((v53)*(0)))/(100)))+((((v54)*(0)))/(100)))+((((v55)*(0)))/(100)))+((((v56)*(0)))/(100)))+((((v57)*(0)))/(100)))+((((v58)*(0)))/(100)))+((((v59)*(0)))/(100)))+((((v60)*(0)))/(100)))+((((v61)*(0)))/(100)))+((((v62)*(0)))/(100)))+((((v63)*(0)))/(100)))+((((v64)*(0)))/(100)))+((((v65)*(0)))/(100)))+((((v66)*(0)))/(100)))+((((v67)*(0)))/(100)))+((((v68)*(0)))/(100)))+((((v69)*(0)))/(100)))+((((v70)*(0)))/(100)))+((((v71)*(0)))/(100)))+((((v72)*(0)))/(100)))+((((v73)*(0)))/(100)))+((((v74)*(0)))/(100)))+((((v75)*(0)))/(100)))+((((v76)*(0)))/(100)))+((((v77)*(0)))/(100)))+((((v78)*(0)))/(100)))+((((v79)*(0)))/(100)))+((((v80)*(0)))/(100)))+((((v81)*(0)))/(100)))+((((v82)*(0)))/(100)))+((((v83)*(0)))/(100)))+((((v84)*(0)))/(100)))+((((v85)*(0)))/(100)))+((((v86)*(0)))/(100)))+((((v87)*(0)))/(100)))+((((v88)*(0)))/(100)))+((((v89)*(0)))/(100)))+((((v90)*(0)))/(100)))+((((v91)*(0)))/(100)))+((((v92)*(0)))/(100)))+((((v93)*(0)))/(100)))+((((v94)*(0)))/(100)))+((((v95)*(0)))/(100)))+((((v96)*(0)))/(100))))/(100))))))/(100))))))*(0.6728147046439013)))+(((-((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((((v1)*(53.3775)))*(100)))/(100)))+((((((v2)*(50)))*(100)))/(100)))+((((((v3)*(60.93)))*(100)))/(100)))+((((((v4)*(45.155)))*(100)))/(100)))+((((((v5)*(52)))*(100)))/(100)))+((((((v6)*(52.92)))*(100)))/(100)))+((((((v7)*(48.4088904761905)))*(100)))/(100)))+((((((v8)*(58)))*(100)))/(100)))+((((((v9)*(66.24)))*(100)))/(100)))+((((((v10)*(35.5541666666667)))*(100)))/(100)))+((((((v11)*(36.763)))*(100)))/(100)))+((((((v12)*(62.72)))*(100)))/(100)))+((((((v13)*(70)))*(100)))/(100)))+((((((v14)*(52)))*(100)))/(100)))+((((((v15)*(48.4088904761905)))*(100)))/(100)))+((((((v16)*(58.9)))*(100)))/(100)))+((((((v17)*(66.24)))*(100)))/(100)))+((((((v18)*(42)))*(100)))/(100)))+((((((v19)*(47)))*(100)))/(100)))+((((((v20)*(48.91)))*(100)))/(100)))+((((((v21)*(58.14)))*(100)))/(100)))+((((((v22)*(35.5541666666667)))*(100)))/(100)))+((((((v23)*(52)))*(100)))/(100)))+((((((v24)*(61.5)))*(100)))/(100)))+((((((v25)*(62.13)))*(100)))/(100)))+((((((v26)*(64.36)))*(100)))/(100)))+((((((v27)*(52)))*(100)))/(100)))+((((((v28)*(48.4088904761905)))*(100)))/(100)))+((((((v29)*(58.9)))*(100)))/(100)))+((((((v30)*(69.65)))*(100)))/(100)))+((((((v31)*(55.2)))*(100)))/(100)))+((((((v32)*(48.47)))*(100)))/(100)))+((((((v33)*(42.23)))*(100)))/(100)))+((((((v34)*(45.48)))*(100)))/(100)))+((((((v35)*(35.5541666666667)))*(100)))/(100)))+((((((v36)*(61.5)))*(100)))/(100)))+((((((v37)*(55.2)))*(100)))/(100)))+((((((v38)*(52)))*(100)))/(100)))+((((((v39)*(48.4088904761905)))*(100)))/(100)))+((((((v40)*(58.2)))*(100)))/(100)))+((((((v41)*(48.47)))*(100)))/(100)))+((((((v42)*(57.26)))*(100)))/(100)))+((((((v43)*(50)))*(100)))/(100)))+((((((v44)*(86)))*(100)))/(100)))+((((((v45)*(42.23)))*(100)))/(100)))+((((((v46)*(35.5541666666667)))*(100)))/(100)))+((((((v47)*(61.5)))*(100)))/(100)))+((((((v48)*(55.2)))*(100)))/(100)))+((((((v49)*(52)))*(100)))/(100)))+((((((v50)*(48.4088904761905)))*(100)))/(100)))+((((((v51)*(58.2)))*(100)))/(100)))+((((((v52)*(48.47)))*(100)))/(100)))+((((((v53)*(57.26)))*(100)))/(100)))+((((((v54)*(50)))*(100)))/(100)))+((((((v55)*(86)))*(100)))/(100)))+((((((v56)*(42.23)))*(100)))/(100)))+((((((v57)*(35.5541666666667)))*(100)))/(100)))+((((((v58)*(59.95)))*(100)))/(100)))+((((((v59)*(61.5)))*(100)))/(100)))+((((((v60)*(52)))*(100)))/(100)))+((((((v61)*(49.15)))*(100)))/(100)))+((((((v62)*(57.8)))*(100)))/(100)))+((((((v63)*(57.87)))*(100)))/(100)))+((((((v64)*(69.5)))*(100)))/(100)))+((((((v65)*(51.9)))*(100)))/(100)))+((((((v66)*(24)))*(100)))/(100)))+((((((v67)*(34.5)))*(100)))/(100)))+((((((v68)*(59.95)))*(100)))/(100)))+((((((v69)*(61.5)))*(100)))/(100)))+((((((v70)*(52)))*(100)))/(100)))+((((((v71)*(49.15)))*(100)))/(100)))+((((((v72)*(57.8)))*(100)))/(100)))+((((((v73)*(57.87)))*(100)))/(100)))+((((((v74)*(69.5)))*(100)))/(100)))+((((((v75)*(51.9)))*(100)))/(100)))+((((((v76)*(24)))*(100)))/(100)))+((((((v77)*(34.5)))*(100)))/(100)))+((((((v78)*(59.95)))*(100)))/(100)))+((((((v79)*(61.5)))*(100)))/(100)))+((((((v80)*(52)))*(100)))/(100)))+((((((v81)*(49.15)))*(100)))/(100)))+((((((v82)*(57.8)))*(100)))/(100)))+((((((v83)*(57.87)))*(100)))/(100)))+((((((v84)*(69.5)))*(100)))/(100)))+((((((v85)*(51.9)))*(100)))/(100)))+((((((v86)*(24)))*(100)))/(100)))+((((((v87)*(34.5)))*(100)))/(100)))+((((((v88)*(59.95)))*(100)))/(100)))+((((((v89)*(61.5)))*(100)))/(100)))+((((((v90)*(52)))*(100)))/(100)))+((((((v91)*(49.15)))*(100)))/(100)))+((((((v92)*(57.8)))*(100)))/(100)))+((((((v93)*(57.87)))*(100)))/(100)))+((((((v94)*(51.9)))*(100)))/(100)))+((((((v95)*(24)))*(100)))/(100)))+((((((v96)*(34.5)))*(100)))/(100))))/((100-(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((
 
 APM model error: string > 15000  characters
 Consider breaking up the line into multiple equations
 
 The may also be due to only using newline character CR
   instead of CR LF (for Windows) or LF (for MacOS/Linux) 
 To fix this problem, save APM file with appropriate newline characters
 
 STOPPING...
 


2018-12-06 11:33:43,080 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 462.58579900551536), (1, 1, 1)]
2018-12-06 11:33:43,081 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.681366649542781, 'sio2': 91.33144946306368, 'cost': 0.9871838873935551}
2018-12-06 11:33:43,900 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [8.0, 15.0, 12.5228, 8.410955, 12.38867, 40.0, 0.6015498, 2.504559, 0.5714713]
2018-12-06 11:33:43,900 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['巴西粗粉=[8.0]', '高品澳粉=[15.0]', '高返=[12.5228]', '过筛镍矿=[8.410955]', '塞拉利昂粉=[12.38867]', 'FMG低品澳粉=[40.0]', '铁泥=[0.6015498]', '干渣粉=[2.504559]', '重力除尘灰=[0.5714713]']
2018-12-06 11:33:43,926 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [56.17565633128305, 5.199951920097999, 2.6982416318639566, 0.7128133123365088, 3.000000273920421, 0.048518530915677816, 0.06764917045197939, 0.1319273653048831]
2018-12-06 11:33:43,926 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=447.75303320145434, wet_price=492.506582248679, obj_price=530.7026698741009)
2018-12-06 11:35:46,451 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 462.58579900551536), (1, 1, 1)]
2018-12-06 11:35:46,452 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.681366649542781, 'sio2': 91.33144946306368, 'cost': 0.9871838873935551}
2018-12-06 11:35:46,694 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [8.0, 15.0, 12.5228, 8.410955, 12.38867, 40.0, 0.6015498, 2.504559, 0.5714713]
2018-12-06 11:35:46,694 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['巴西粗粉=[8.0]', '高品澳粉=[15.0]', '高返=[12.5228]', '过筛镍矿=[8.410955]', '塞拉利昂粉=[12.38867]', 'FMG低品澳粉=[40.0]', '铁泥=[0.6015498]', '干渣粉=[2.504559]', '重力除尘灰=[0.5714713]']
2018-12-06 11:35:46,697 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [56.17565633128305, 5.199951920097999, 2.6982416318639566, 0.7128133123365088, 3.000000273920421, 0.048518530915677816, 0.06764917045197939, 0.1319273653048831]
2018-12-06 11:35:46,697 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=447.75303320145434, wet_price=492.506582248679, obj_price=530.7026698741009)
2018-12-06 11:39:35,775 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 462.58579900551536), (1, 1, 1)]
2018-12-06 11:39:35,775 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.681366649542781, 'sio2': 91.33144946306368, 'cost': 0.9871838873935551}
2018-12-06 11:39:36,007 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [8.0, 15.0, 12.5228, 8.410955, 12.38867, 40.0, 0.6015498, 2.504559, 0.5714713]
2018-12-06 11:39:36,007 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['巴西粗粉=[8.0]', '高品澳粉=[15.0]', '高返=[12.5228]', '过筛镍矿=[8.410955]', '塞拉利昂粉=[12.38867]', 'FMG低品澳粉=[40.0]', '铁泥=[0.6015498]', '干渣粉=[2.504559]', '重力除尘灰=[0.5714713]']
2018-12-06 11:39:36,009 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [56.17565633128305, 5.199951920097999, 2.6982416318639566, 0.7128133123365088, 3.000000273920421, 0.048518530915677816, 0.06764917045197939, 0.1319273653048831]
2018-12-06 11:39:36,009 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=447.75303320145434, wet_price=492.506582248679, obj_price=530.7026698741009)
2018-12-06 11:39:36,169 __main__ mainTask ERROR = Traceback (most recent call last):
  File "C:/Users/sun/PycharmProjects/optimizationproblem/gekkoSolution/mainTask.py", line 42, in <module>
    lp.write_to_excel()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\gekkoSolution\gekkoProblem.py", line 91, in write_to_excel
    self.data.write_to_excel(excel_file, prices)
  File "C:\Users\sun\PycharmProjects\optimizationproblem\utils\excelParse.py", line 136, in write_to_excel
    writer.save()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\pandas\io\excel.py", line 1732, in save
    return self.book.close()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\xlsxwriter\workbook.py", line 306, in close
    self._store_workbook()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\xlsxwriter\workbook.py", line 655, in _store_workbook
    allowZip64=self.allow_zip64)
  File "C:\Users\sun\AppData\Local\Programs\Python\Python37-32\lib\zipfile.py", line 1182, in __init__
    self.fp = io.open(file, filemode)
PermissionError: [Errno 13] Permission denied: '../data/result.xlsx'

2018-12-06 11:44:43,043 __main__ mainTask ERROR = Traceback (most recent call last):
  File "C:/Users/sun/PycharmProjects/optimizationproblem/gekkoSolution/mainTask.py", line 16, in <module>
    lp = GekkoProblem()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\gekkoSolution\gekkoProblem.py", line 26, in __init__
    self._init_constructs()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\gekkoSolution\gekkoProblem.py", line 29, in _init_constructs
    self._constructs["objective"] = ObjectiveConstructBuilder(self, (PriceObjectiveConstruct(self), 1))
  File "C:\Users\sun\PycharmProjects\optimizationproblem\gekkoSolution\gekkoConstruct.py", line 99, in __init__
    self._obj = sum(self.pb.Intermediate(objective[0].get_obj() * objective[1]) for objective in objectives)
  File "C:\Users\sun\PycharmProjects\optimizationproblem\gekkoSolution\gekkoConstruct.py", line 99, in <genexpr>
    self._obj = sum(self.pb.Intermediate(objective[0].get_obj() * objective[1]) for objective in objectives)
AttributeError: 'GekkoProblem' object has no attribute 'Intermediate'

2018-12-06 11:47:16,038 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 462.58579900551536), (1, 1, 1)]
2018-12-06 11:47:16,038 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.681366649542781, 'sio2': 91.33144946306368, 'cost': 0.9871838873935551}
2018-12-06 11:47:16,292 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [8.0, 15.0, 12.5228, 8.410955, 12.38867, 40.0, 0.6015498, 2.504559, 0.5714713]
2018-12-06 11:47:16,292 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['巴西粗粉=[8.0]', '高品澳粉=[15.0]', '高返=[12.5228]', '过筛镍矿=[8.410955]', '塞拉利昂粉=[12.38867]', 'FMG低品澳粉=[40.0]', '铁泥=[0.6015498]', '干渣粉=[2.504559]', '重力除尘灰=[0.5714713]']
2018-12-06 11:47:16,294 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [56.17565633128305, 5.199951920097999, 2.6982416318639566, 0.7128133123365088, 3.000000273920421, 0.048518530915677816, 0.06764917045197939, 0.1319273653048831]
2018-12-06 11:47:16,294 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=447.75303320145434, wet_price=492.506582248679, obj_price=530.7026698741009)
2018-12-06 11:48:13,878 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 680.8815963996892), (1, 1, 1)]
2018-12-06 11:48:13,878 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.7057552595311165, 'sio2': 91.62143003582499, 'cost': 0.6728147046439013}
2018-12-06 11:48:16,159 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [0.0, 0.0, 0.0, 0.0, 4.174266, 0.6015498, 0.0, 0.0, 0.0, 0.1142943, 0.0, 0.0, 0.0, 4.174266, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1142943, 0.0, 0.0, 0.0, 0.0, 3.718342, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5526916, 0.0, 0.1142943, 0.0, 0.0, 0.1988863, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5526916, 0.1142943, 0.0, 0.0, 0.2570375, 8.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.456512, 0.1142943, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.076149, 0.0, 0.6261399, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.312939, 0.0, 0.6261399, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6261399, 0.0, 0.0, 15.0, 0.0, 0.0, 14.84864, 40.0, 0.0, 0.6261399, 0.0]
2018-12-06 11:48:16,178 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['高宝印粉-13_1=[0.0]', '朝鲜粉-13_1=[0.0]', '伊朗粉-13_1=[0.0]', '海南铁粉-13_1=[0.0]', '高返-13_1=[4.174266]', '铁泥-13_1=[0.6015498]', '过筛镍矿-13_1=[0.0]', '塞阿里昂粉-13_1=[0.0]', '巴西粗粉-13_1=[0.0]', '重力除尘灰-13_1=[0.1142943]', '水洗铁-13_1=[0.0]', '巴西粗粉-13_3=[0.0]', '还原铁粉-13_3=[0.0]', '高返-13_3=[4.174266]', '过筛镍矿-13_3=[0.0]', '塞拉利昂粉-13_3=[0.0]', '巴西卡粉-13_3=[0.0]', '水洗铁-13_3=[0.0]', '马来西亚粉（高硅）-13_3=[0.0]', '印尼粉-13_3=[0.0]', '塞尔维亚粉-13_3=[0.0]', '重力除尘灰-13_3=[0.1142943]', '马来西亚粉（低硅）-13_3=[0.0]', 'PB粉-13_3=[0.0]', '高品澳粉-13_4=[0.0]', '巴西精粉-13_4=[0.0]', '高返-13_4=[3.718342]', '过筛镍矿-13_4=[0.0]', '塞拉利昂（破碎）-13_4=[0.0]', '还原铁粉-13_4=[0.0]', '赛尔维亚粉-13_4=[0.0]', '印尼粉-13_4=[0.0]', '水洗铁-13_4=[0.5526916]', '马来西亚-13_4=[0.0]', '重力除尘灰-13_4=[0.1142943]', '高品澳粉-13_5=[0.0]', '赛尔维亚粉-13_5=[0.0]', '高返-13_5=[0.1988863]', '过筛镍矿-13_5=[0.0]', '过筛塞拉利昂粉-13_5=[0.0]', '印尼粉-13_5=[0.0]', '委内瑞拉粉-13_5=[0.0]', '朝鲜铁粉-13_5=[0.0]', '还原铁粉-13_5=[0.0]', '水洗铁-13_5=[0.5526916]', '重力除尘灰-13_5=[0.1142943]', '高品澳粉-13_12=[0.0]', '赛尔维亚粉-13_12=[0.0]', '高返-13_12=[0.2570375]', '过筛镍矿-13_12=[8.0]', '过筛塞拉利昂粉-13_12=[0.0]', '印尼粉-13_12=[0.0]', '委内瑞拉粉-13_12=[0.0]', '朝鲜铁粉-13_12=[0.0]', '还原铁粉-13_12=[0.0]', '水洗铁-13_12=[1.456512]', '重力除尘灰-13_12=[0.1142943]', '巴西粗粉-14-1=[0.0]', '高品澳粉-14-1=[0.0]', '高返-14-1=[0.0]', '过筛镍矿-14-1=[0.0]', '塞拉利昂粉-14-1=[0.0]', 'FMG低品澳粉-14-1=[0.0]', '氧化铁-14-1=[2.076149]', '铁泥-14-1=[0.0]', '干渣粉-14-1=[0.6261399]', '重力除尘灰-14-1=[0.0]', '巴西粗粉-14-3=[0.0]', '高品澳粉-14-3=[0.0]', '高返-14-3=[0.0]', '过筛镍矿-14-3=[0.0]', '塞拉利昂粉-14-3=[0.0]', 'FMG低品澳粉-14-3=[0.0]', '氧化铁-14-3=[1.312939]', '铁泥-14-3=[0.0]', '干渣粉-14-3=[0.6261399]', '重力除尘灰-14-3=[0.0]', '巴西粗粉-14-4=[0.0]', '高品澳粉-14-4=[0.0]', '高返-14-4=[0.0]', '过筛镍矿-14-4=[0.0]', '塞拉利昂粉-14-4=[0.0]', 'FMG低品澳粉-14-4=[0.0]', '氧化铁-14-4=[0.0]', '铁泥-14-4=[0.0]', '干渣粉-14-4=[0.6261399]', '重力除尘灰-14-4=[0.0]', '巴西粗粉-14-4=[0.0]', '高品澳粉-14-12=[15.0]', '高返-14-12=[0.0]', '过筛镍矿-14-12=[0.0]', '塞拉利昂粉-14-12=[14.84864]', 'FMG低品澳粉-14-12=[40.0]', '铁泥-14-12=[0.0]', '干渣粉-14-12=[0.6261399]', '重力除尘灰-14-12=[0.0]']
2018-12-06 11:48:16,183 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [55.900000904777734, 4.5000000675375, 2.897264995189999, 0.9762019118428573, 3.00000014589, 0.16320884839999997, 0.079652114285, 0.16721795398]
2018-12-06 11:48:16,183 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=489.25335251897815, wet_price=489.25335251897815, obj_price=489.25335251897815)
2018-12-06 14:15:29,653 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 680.8815963996896), (1, 1, 1)]
2018-12-06 14:15:29,653 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.7057552595311165, 'sio2': 91.62143003582499, 'cost': 0.672814704643901}
2018-12-06 14:15:30,062 __main__ mainTask ERROR = Traceback (most recent call last):
  File "C:/Users/sun/PycharmProjects/optimizationproblem/gekkoSolution/mainTask.py", line 37, in <module>
    lp.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\gekkoSolution\gekkoProblem.py", line 46, in solve
    self.prob.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\gekko\gekko.py", line 682, in solve
    raise Exception(apm_error)
Exception:  @error: Max Equation Length
 Error with line number:  197
 i0=((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((((910.99486005)*(v1)))*(1.0)))/(100)))+((((((853.351)*(v2)))*(1.0)))/(100)))+((((((1039.8935286)*(v3)))*(1.0)))/(100)))+((((((770.6612881)*(v4)))*(1.0)))/(100)))+((((((500)*(v5)))*(1.0)))/(100)))+((((((500)*(v6)))*(1.0)))/(100)))+((((((826.195501934952)*(v7)))*(1.0)))/(100)))+((((((989.88716)*(v8)))*(1.0)))/(100)))+((((((1130.5194048)*(v9)))*(1.0)))/(100)))+((((((500)*(v10)))*(1.0)))/(100)))+((((((300)*(v11)))*(1.0)))/(100)))+((((((1069.8162944)*(v12)))*(1.0)))/(100)))+((((((1245.56)*(v13)))*(1.0)))/(100)))+((((((500)*(v14)))*(1.0)))/(100)))+((((((825.711413030191)*(v15)))*(1.0)))/(100)))+((((((1004.658478)*(v16)))*(1.0)))/(100)))+((((((1129.8570048)*(v17)))*(1.0)))/(100)))+((((((300)*(v18)))*(1.0)))/(100)))+((((((801.67994)*(v19)))*(1.0)))/(100)))+((((((834.2588482)*(v20)))*(1.0)))/(100)))+((((((991.6951428)*(v21)))*(1.0)))/(100)))+((((((500)*(v22)))*(1.0)))/(100)))+((((((886.96504)*(v23)))*(1.0)))/(100)))+((((((1049.00673)*(v24)))*(1.0)))/(100)))+((((((1059.7526526)*(v25)))*(1.0)))/(100)))+((((((1097.7898072)*(v26)))*(1.0)))/(100)))+((((((500)*(v27)))*(1.0)))/(100)))+((((((825.711413030191)*(v28)))*(1.0)))/(100)))+((((((1004.658478)*(v29)))*(1.0)))/(100)))+((((((1241.92)*(v30)))*(1.0)))/(100)))+((((((941.547504)*(v31)))*(1.0)))/(100)))+((((((826.7537594)*(v32)))*(1.0)))/(100)))+((((((300)*(v33)))*(1.0)))/(100)))+((((((775.7532696)*(v34)))*(1.0)))/(100)))+((((((500)*(v35)))*(1.0)))/(100)))+((((((944.28)*(v36)))*(1.0)))/(100)))+((((((612.08)*(v37)))*(1.0)))/(100)))+((((((500)*(v38)))*(1.0)))/(100)))+((((((473.38)*(v39)))*(1.0)))/(100)))+((((((925.96)*(v40)))*(1.0)))/(100)))+((((((484.27)*(v41)))*(1.0)))/(100)))+((((((780.55)*(v42)))*(1.0)))/(100)))+((((((434.35)*(v43)))*(1.0)))/(100)))+((((((1228.65)*(v44)))*(1.0)))/(100)))+((((((300)*(v45)))*(1.0)))/(100)))+((((((500)*(v46)))*(1.0)))/(100)))+((((((964.82)*(v47)))*(1.0)))/(100)))+((((((586.286222115809)*(v48)))*(1.0)))/(100)))+((((((500)*(v49)))*(1.0)))/(100)))+((((((408.863293435074)*(v50)))*(1.0)))/(100)))+((((((925.96)*(v51)))*(1.0)))/(100)))+((((((405.863293435074)*(v52)))*(1.0)))/(100)))+((((((910.96)*(v53)))*(1.0)))/(100)))+((((((450.95)*(v54)))*(1.0)))/(100)))+((((((1242.28973578925)*(v55)))*(1.0)))/(100)))+((((((300)*(v56)))*(1.0)))/(100)))+((((((500)*(v57)))*(1.0)))/(100)))+((((((773.95)*(v58)))*(1.0)))/(100)))+((((((793.97)*(v59)))*(1.0)))/(100)))+((((((500)*(v60)))*(1.0)))/(100)))+((((((634.53)*(v61)))*(1.0)))/(100)))+((((((746.2)*(v62)))*(1.0)))/(100)))+((((((747.1)*(v63)))*(1.0)))/(100)))+((((((800)*(v64)))*(1.0)))/(100)))+((((((500)*(v65)))*(1.0)))/(100)))+((((((100)*(v66)))*(1.0)))/(100)))+((((((500)*(v67)))*(1.0)))/(100)))+((((((773.95)*(v68)))*(1.0)))/(100)))+((((((793.97)*(v69)))*(1.0)))/(100)))+((((((500)*(v70)))*(1.0)))/(100)))+((((((634.53)*(v71)))*(1.0)))/(100)))+((((((746.2)*(v72)))*(1.0)))/(100)))+((((((747.1)*(v73)))*(1.0)))/(100)))+((((((800)*(v74)))*(1.0)))/(100)))+((((((500)*(v75)))*(1.0)))/(100)))+((((((100)*(v76)))*(1.0)))/(100)))+((((((500)*(v77)))*(1.0)))/(100)))+((((((773.95)*(v78)))*(1.0)))/(100)))+((((((793.97)*(v79)))*(1.0)))/(100)))+((((((500)*(v80)))*(1.0)))/(100)))+((((((634.53)*(v81)))*(1.0)))/(100)))+((((((746.2)*(v82)))*(1.0)))/(100)))+((((((747.1)*(v83)))*(1.0)))/(100)))+((((((800)*(v84)))*(1.0)))/(100)))+((((((500)*(v85)))*(1.0)))/(100)))+((((((100)*(v86)))*(1.0)))/(100)))+((((((500)*(v87)))*(1.0)))/(100)))+((((((566.5)*(v88)))*(1.0)))/(100)))+((((((600.5)*(v89)))*(1.0)))/(100)))+((((((500)*(v90)))*(1.0)))/(100)))+((((((431.41)*(v91)))*(1.0)))/(100)))+((((((498.015344202792)*(v92)))*(1.0)))/(100)))+((((((466.846846846847)*(v93)))*(1.0)))/(100)))+((((((500)*(v94)))*(1.0)))/(100)))+((((((100)*(v95)))*(1.0)))/(100)))+((((((500)*(v96)))*(1.0)))/(100)))+((((((910.99486005)*(v97)))*(1.0)))/(100)))+((((((853.351)*(v98)))*(1.0)))/(100)))+((((((1039.8935286)*(v99)))*(1.0)))/(100)))+((((((770.6612881)*(v100)))*(1.0)))/(100)))+((((((500)*(v101)))*(1.0)))/(100)))+((((((500)*(v102)))*(1.0)))/(100)))+((((((826.195501934952)*(v103)))*(1.0)))/(100)))+((((((989.88716)*(v104)))*(1.0)))/(100)))+((((((1130.5194048)*(v105)))*(1.0)))/(100)))+((((((500)*(v106)))*(1.0)))/(100)))+((((((300)*(v107)))*(1.0)))/(100)))+((((((1069.8162944)*(v108)))*(1.0)))/(100)))+((((((1245.56)*(v109)))*(1.0)))/(100)))+((((((500)*(v110)))*(1.0)))/(100)))+((((((825.711413030191)*(v111)))*(1.0)))/(100)))+((((((1004.658478)*(v112)))*(1.0)))/(100)))+((((((1129.8570048)*(v113)))*(1.0)))/(100)))+((((((300)*(v114)))*(1.0)))/(100)))+((((((801.67994)*(v115)))*(1.0)))/(100)))+((((((834.2588482)*(v116)))*(1.0)))/(100)))+((((((991.6951428)*(v117)))*(1.0)))/(100)))+((((((500)*(v118)))*(1.0)))/(100)))+((((((886.96504)*(v119)))*(1.0)))/(100)))+((((((1049.00673)*(v120)))*(1.0)))/(100)))+((((((1059.7526526)*(v121)))*(1.0)))/(100)))+((((((1097.7898072)*(v122)))*(1.0)))/(100)))+((((((500)*(v123)))*(1.0)))/(100)))+((((((825.711413030191)*(v124)))*(1.0)))/(100)))+((((((1004.658478)*(v125)))*(1.0)))/(100)))+((((((1241.92)*(v126)))*(1.0)))/(100)))+((((((941.547504)*(v127)))*(1.0)))/(100)))+((((((826.7537594)*(v128)))*(1.0)))/(100)))+((((((300)*(v129)))*(1.0)))/(100)))+((((((775.7532696)*(v130)))*(1.0)))/(100)))+((((((500)*(v131)))*(1.0)))/(100)))+((((((944.28)*(v132)))*(1.0)))/(100)))+((((((612.08)*(v133)))*(1.0)))/(100)))+((((((500)*(v134)))*(1.0)))/(100)))+((((((473.38)*(v135)))*(1.0)))/(100)))+((((((925.96)*(v136)))*(1.0)))/(100)))+((((((484.27)*(v137)))*(1.0)))/(100)))+((((((780.55)*(v138)))*(1.0)))/(100)))+((((((434.35)*(v139)))*(1.0)))/(100)))+((((((1228.65)*(v140)))*(1.0)))/(100)))+((((((300)*(v141)))*(1.0)))/(100)))+((((((500)*(v142)))*(1.0)))/(100)))+((((((964.82)*(v143)))*(1.0)))/(100)))+((((((586.286222115809)*(v144)))*(1.0)))/(100)))+((((((500)*(v145)))*(1.0)))/(100)))+((((((408.863293435074)*(v146)))*(1.0)))/(100)))+((((((925.96)*(v147)))*(1.0)))/(100)))+((((((405.863293435074)*(v148)))*(1.0)))/(100)))+((((((910.96)*(v149)))*(1.0)))/(100)))+((((((450.95)*(v150)))*(1.0)))/(100)))+((((((1242.28973578925)*(v151)))*(1.0)))/(100)))+((((((300)*(v152)))*(1.0)))/(100)))+((((((500)*(v153)))*(1.0)))/(100)))+((((((773.95)*(v154)))*(1.0)))/(100)))+((((((793.97)*(v155)))*(1.0)))/(100)))+((((((500)*(v156)))*(1.0)))/(100)))+((((((634.53)*(v157)))*(1.0)))/(100)))+((((((746.2)*(v158)))*(1.0)))/(100)))+((((((747.1)*(v159)))*(1.0)))/(100)))+((((((800)*(v160)))*(1.0)))/(100)))+((((((500)*(v161)))*(1.0)))/(100)))+((((((100)*(v162)))*(1.0)))/(100)))+((((((500)*(v163)))*(1.0)))/(100)))+((((((773.95)*(v164)))*(1.0)))/(100)))+((((((793.97)*(v165)))*(1.0)))/(100)))+((((((500)*(v166)))*(1.0)))/(100)))+((((((634.53)*(v167)))*(1.0)))/(100)))+((((((746.2)*(v168)))*(1.0)))/(100)))+((((((747.1)*(v169)))*(1.0)))/(100)))+((((((800)*(v170)))*(1.0)))/(100)))+((((((500)*(v171)))*(1.0)))/(100)))+((((((100)*(v172)))*(1.0)))/(100)))+((((((500)*(v173)))*(1.0)))/(100)))+((((((773.95)*(v174)))*(1.0)))/(100)))+((((((793.97)*(v175)))*(1.0)))/(100)))+((((((500)*(v176)))*(1.0)))/(100)))+((((((634.53)*(v177)))*(1.0)))/(100)))+((((((746.2)*(v178)))*(1.0)))/(100)))+((((((747.1)*(v179)))*(1.0)))/(100)))+((((((800)*(v180)))*(1.0)))/(100)))+((((((500)*(v181)))*(1.0)))/(100)))+((((((100)*(v182)))*(1.0)))/(100)))+((((((500)*(v183)))*(1.0)))/(100)))+((((((566.5)*(v184)))*(1.0)))/(100)))+((((((600.5)*(v185)))*(1.0)))/(100)))+((((((500)*(v186)))*(1.0)))/(100)))+((((((431.41)*(v187)))*(1.0)))/(100)))+((((((498.015344202792)*(v188)))*(1.0)))/(100)))+((((((466.846846846847)*(v189)))*(1.0)))/(100)))+((((((500)*(v190)))*(1.0)))/(100)))+((((((100)*(v191)))*(1.0)))/(100)))+((((((500)*(v192)))*(1.0)))/(100))))/((1-((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((v1)*(0)))/(100)))+((((v2)*(0)))/(100)))+((((v3)*(0)))/(100)))+((((v4)*(0)))/(100)))+((((v5)*(0)))/(100)))+((((v6)*(0)))/(100)))+((((v7)*(0)))/(100)))+((((v8)*(0)))/(100)))+((((v9)*(0)))/(100)))+((((v10)*(0)))/(100)))+((((v11)*(0)))/(100)))+((((v12)*(0)))/(100)))+((((v13)*(0)))/(100)))+((((v14)*(0)))/(100)))+((((v15)*(0)))/(100)))+((((v16)*(0)))/(100)))+((((v17)*(0)))/(100)))+((((v18)*(0)))/(100)))+((((v19)*(0)))/(100)))+((((v20)*(0)))/(100)))+((((v21)*(0)))/(100)))+((((v22)*(0)))/(100)))+((((v23)*(0)))/(100)))+((((v24)*(0)))/(100)))+((((v25)*(0)))/(100)))+((((v26)*(0)))/(100)))+((((v27)*(0)))/(100)))+((((v28)*(0)))/(100)))+((((v29)*(0)))/(100)))+((((v30)*(0)))/(100)))+((((v31)*(0)))/(100)))+((((v32)*(0)))/(100)))+((((v33)*(0)))/(100)))+((((v34)*(0)))/(100)))+((((v35)*(0)))/(100)))+((((v36)*(0)))/(100)))+((((v37)*(0)))/(100)))+((((v38)*(0)))/(100)))+((((v39)*(0)))/(100)))+((((v40)*(0)))/(100)))+((((v41)*(0)))/(100)))+((((v42)*(0)))/(100)))+((((v43)*(0)))/(100)))+((((v44)*(0)))/(100)))+((((v45)*(0)))/(100)))+((((v46)*(0)))/(100)))+((((v47)*(0)))/(100)))+((((v48)*(0)))/(100)))+((((v49)*(0)))/(100)))+((((v50)*(0)))/(100)))+((((v51)*(0)))/(100)))+((((v52)*(0)))/(100)))+((((v53)*(0)))/(100)))+((((v54)*(0)))/(100)))+((((v55)*(0)))/(100)))+((((v56)*(0)))/(100)))+((((v57)*(0)))/(100)))+((((v58)*(0)))/(100)))+((((v59)*(0)))/(100)))+((((v60)*(0)))/(100)))+((((v61)*(0)))/(100)))+((((v62)*(0)))/(100)))+((((v63)*(0)))/(100)))+((((v64)*(0)))/(100)))+((((v65)*(0)))/(100)))+((((v66)*(0)))/(100)))+((((v67)*(0)))/(100)))+((((v68)*(0)))/(100)))+((((v69)*(0)))/(100)))+((((v70)*(0)))/(100)))+((((v71)*(0)))/(100)))+((((v72)*(0)))/(100)))+((((v73)*(0)))/(100)))+((((v74)*(0)))/(100)))+((((v75)*(0)))/(100)))+((((v76)*(0)))/(100)))+((((v77)*(0)))/(100)))+((((v78)*(0)))/(100)))+((((v79)*(0)))/(100)))+((((v80)*(0)))/(100)))+((((v81)*(0)))/(100)))+((((v82)*(0)))/(100)))+((((v83)*(0)))/(100)))+((((v84)*(0)))/(100)))+((((v85)*(0)))/(100)))+((((v86)*(0)))/(100)))+((((v87)*(0)))/(100)))+((((v88)*(0)))/(100)))+((((v89)*(0)))/(100)))+((((v90)*(0)))/(100)))+((((v91)*(0)))/(100)))+((((v92)*(0)))/(100)))+((((v93)*(0)))/(100)))+((((v94)*(0)))/(100)))+((((v95)*(0)))/(100)))+((((v96)*(0)))/(100)))+((((v97)*(0)))/(100)))+((((v98)*(0)))/(100)))+((((v99)*(0)))/(100)))+((((v100)*(0)))/(100)))+((((v101)*(0)))/(100)))+((((v102)*(0)))/(100)))+((((v103)*(0)))/(100)))+((((v104)*(0)))/(100)))+((((v105)*(0)))/(100)))+((((v106)*(0)))/(100)))+((((v107)*(0)))/(100)))+((((v108)*(0)))/(100)))+((((v109)*(0)))/(100)))+((((v110)*(0)))/(100)))+((((v111)*(0)))/(100)))+((((v112)*(0)))/(100)))+((((v113)*(0)))/(100)))+((((v114)*(0)))/(100)))+((((v115)*(0)))/(100)))+((((v116)*(0)))/(100)))+((((v117)*(0)))/(100)))+((((v118)*(0)))/(100)))+((((v119)*(0)))/(100)))+((((v120)*(0)))/(100)))+((((v121)*(0)))/(100)))+((((v122)*(0)))/(100)))+((((v123)*(0)))/(100)))+((((v124)*(0)))/(100)))+((((v125)*(0)))/(100)))+((((v126)*(0)))/(100)))+((((v127)*(0)))/(100)))+((((v128)*(0)))/(100)))+((((v129)*(0)))/(100)))+((((v130)*(0)))/(100)))+((((v131)*(0)))/(100)))+((((v132)*(0)))/(100)))+((((v133)*(0)))/(100)))+((((v134)*(0)))/(100)))+((((v135)*(0)))/(100)))+((((v136)*(0)))/(100)))+((((v137)*(0)))/(100)))+((((v138)*(0)))/(100)))+((((v139)*(0)))/(100)))+((((v140)*(0)))/(100)))+((((v141)*(0)))/(100)))+((((v142)*(0)))/(100)))+((((v143)*(0)))/(100)))+((((v144)*(0)))/(100)))+((((v145)*(0)))/(100)))+((((v146)*(0)))/(100)))+((((v147)*(0)))/(100)))+((((v148)*(0)))/(100)))+((((v149)*(0)))/(100)))+((((v150)*(0)))/(100)))+((((v151)*(0)))/(100)))+((((v152)*(0)))/(100)))+((((v153)*(0)))/(100)))+((((v154)*(0)))/(100)))+((((v155)*(0)))/(100)))+((((v156)*(0)))/(100)))+((((v157)*(0)))/(100)))+((((v158)*(0)))/(100)))+((((v159)*(0)))/(100)))+((((v160)*(0)))/(100)))+((((v161)*(0)))/(100)))+((((v162)*(0)))/(100)))+((((v163)*(0)))/(100)))+((((v164)*(0)))/(100)))+((((v165)*(0)))/(100)))+((((v166)*(0)))/(100)))+((((v167)*(0)))/(100)))+((((v168)*(0)))/(100)))+((((v169)*(0)))/(100)))+((((v170)*(0)))/(100)))+((((v171)*(0)))/(100)))+((((v172)*(0)))/(100)))+((((v173)*(0)))/(100)))+((((v174)*(0)))/(100)))+((((v175)*(0)))/(100)))+((((v176)*(0)))/(100)))+((((v177)*(0)))/(100)))+((((v178)*(0)))/(100)))+((((v179)*(0)))/(100)))+((((v180)*(0)))/(100)))+((((v181)*(0)))/(100)))+((((v182)*(0)))/(100)))+((((v183)*(0)))/(100)))+((((v184)*(0)))/(100)))+((((v185)*(0)))/(100)))+((((v186)*(0)))/(100)))+((((v187)*(0)))/(100)))+((((v188)*(0)))/(100)))+((((v189)*(0)))/(100)))+((((v190)*(0)))/(100)))+((((v191)*(0)))/(100)))+((((v192)*(0)))/(100))))/(100))))))/((1-((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((((0)*(v1)))*(1.0)))/(100)))+((((((0)*(v2)))*(1.0)))/(100)))+((((((0)*(v3)))*(1.0)))/(100)))+((((((0)*(v4)))*(1.0)))/(100)))+((((((0)*(v5)))*(1.0)))/(100)))+((((((0)*(v6)))*(1.0)))/(100)))+((((((0)*(v7)))*(1.0)))/(100)))+((((((0)*(v8)))*(1.0)))/(100)))+((((((0)*(v9)))*(1.0)))/(100)))+((((((0)*(v10)))*(1.0)))/(100)))+((((((0)*(v11)))*(1.0)))/(100)))+((((((0)*(v12)))*(1.0)))/(100)))+((((((0)*(v13)))*(1.0)))/(100)))+((((((0)*(v14)))*(1.0)))/(100)))+((((((0)*(v15)))*(1.0)))/(100)))+((((((0)*(v16)))*(1.0)))/(100)))+((((((0)*(v17)))*(1.0)))/(100)))+((((((0)*(v18)))*(1.0)))/(100)))+((((((0)*(v19)))*(1.0)))/(100)))+((((((0)*(v20)))*(1.0)))/(100)))+((((((0)*(v21)))*(1.0)))/(100)))+((((((0)*(v22)))*(1.0)))/(100)))+((((((0)*(v23)))*(1.0)))/(100)))+((((((0)*(v24)))*(1.0)))/(100)))+((((((0)*(v25)))*(1.0)))/(100)))+((((((0)*(v26)))*(1.0)))/(100)))+((((((0)*(v27)))*(1.0)))/(100)))+((((((0)*(v28)))*(1.0)))/(100)))+((((((0)*(v29)))*(1.0)))/(100)))+((((((0)*(v30)))*(1.0)))/(100)))+((((((0)*(v31)))*(1.0)))/(100)))+((((((0)*(v32)))*(1.0)))/(100)))+((((((0)*(v33)))*(1.0)))/(100)))+((((((0)*(v34)))*(1.0)))/(100)))+((((((0)*(v35)))*(1.0)))/(100)))+((((((0)*(v36)))*(1.0)))/(100)))+((((((0)*(v37)))*(1.0)))/(100)))+((((((0)*(v38)))*(1.0)))/(100)))+((((((0)*(v39)))*(1.0)))/(100)))+((((((0)*(v40)))*(1.0)))/(100)))+((((((0)*(v41)))*(1.0)))/(100)))+((((((0)*(v42)))*(1.0)))/(100)))+((((((0)*(v43)))*(1.0)))/(100)))+((((((0)*(v44)))*(1.0)))/(100)))+((((((0)*(v45)))*(1.0)))/(100)))+((((((0)*(v46)))*(1.0)))/(100)))+((((((0)*(v47)))*(1.0)))/(100)))+((((((0)*(v48)))*(1.0)))/(100)))+((((((0)*(v49)))*(1.0)))/(100)))+((((((0)*(v50)))*(1.0)))/(100)))+((((((0)*(v51)))*(1.0)))/(100)))+((((((0)*(v52)))*(1.0)))/(100)))+((((((0)*(v53)))*(1.0)))/(100)))+((((((0)*(v54)))*(1.0)))/(100)))+((((((0)*(v55)))*(1.0)))/(100)))+((((((0)*(v56)))*(1.0)))/(100)))+((((((0)*(v57)))*(1.0)))/(100)))+((((((0)*(v58)))*(1.0)))/(100)))+((((((0)*(v59)))*(1.0)))/(100)))+((((((0)*(v60)))*(1.0)))/(100)))+((((((0)*(v61)))*(1.0)))/(100)))+((((((0)*(v62)))*(1.0)))/(100)))+((((((0)*(v63)))*(1.0)))/(100)))+((((((0)*(v64)))*(1.0)))/(100)))+((((((0)*(v65)))*(1.0)))/(100)))+((((((0)*(v66)))*(1.0)))/(100)))+((((((0)*(v67)))*(1.0)))/(100)))+((((((0)*(v68)))*(1.0)))/(100)))+((((((0)*(v69)))*(1.0)))/(100)))+((((((0)*(v70)))*(1.0)))/(100)))+((((((0)*(v71)))*(1.0)))/(100)))+((((((0)*(v72)))*(1.0)))/(100)))+((((((0)*(v73)))*(1.0)))/(100)))+((((((0)*(v74)))*(1.0)))/(100)))+((((((0)*(v75)))*(1.0)))/(100)))+((((((0)*(v76)))*(1.0)))/(100)))+((((((0)*(v77)))*(1.0)))/(100)))+((((((0)*(v78)))*(1.0)))/(100)))+((((((0)*(v79)))*(1.0)))/(100)))+((((((0)*(v80)))*(1.0)))/(100)))+((((((0)*(v81)))*(1.0)))/(100)))+((((((0)*(v82)))*(1.0)))/(100)))+((((((0)*(v83)))*(1.0)))/(100)))+((((((0)*(v84)))*(1.0)))/(100)))+((((((0)*(v85)))*(1.0)))/(100)))+((((((0)*(v86)))*(1.0)))/(100)))+((((((0)*(v87)))*(1.0)
 
 APM model error: string > 15000  characters
 Consider breaking up the line into multiple equations
 
 The may also be due to only using newline character CR
   instead of CR LF (for Windows) or LF (for MacOS/Linux) 
 To fix this problem, save APM file with appropriate newline characters
 
 STOPPING...
 


2018-12-06 14:15:53,523 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 710.6713012820844), (1, 1, 1)]
2018-12-06 14:15:53,523 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.7079291147166344, 'sio2': 91.6472771739808, 'cost': 0.6447937113025727}
2018-12-06 14:15:53,676 __main__ mainTask ERROR = Traceback (most recent call last):
  File "C:/Users/sun/PycharmProjects/optimizationproblem/gekkoSolution/mainTask.py", line 37, in <module>
    lp.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\gekkoSolution\gekkoProblem.py", line 46, in solve
    self.prob.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\gekko\gekko.py", line 682, in solve
    raise Exception(apm_error)
Exception:  @error: Max Equation Length
 Error with line number:  152
 i0=(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((((910.99486005)*(v1)))*(1.0)))/(100)))+((((((853.351)*(v2)))*(1.0)))/(100)))+((((((1039.8935286)*(v3)))*(1.0)))/(100)))+((((((770.6612881)*(v4)))*(1.0)))/(100)))+((((((500)*(v5)))*(1.0)))/(100)))+((((((500)*(v6)))*(1.0)))/(100)))+((((((826.195501934952)*(v7)))*(1.0)))/(100)))+((((((989.88716)*(v8)))*(1.0)))/(100)))+((((((1130.5194048)*(v9)))*(1.0)))/(100)))+((((((500)*(v10)))*(1.0)))/(100)))+((((((300)*(v11)))*(1.0)))/(100)))+((((((1069.8162944)*(v12)))*(1.0)))/(100)))+((((((1245.56)*(v13)))*(1.0)))/(100)))+((((((500)*(v14)))*(1.0)))/(100)))+((((((825.711413030191)*(v15)))*(1.0)))/(100)))+((((((1004.658478)*(v16)))*(1.0)))/(100)))+((((((1129.8570048)*(v17)))*(1.0)))/(100)))+((((((300)*(v18)))*(1.0)))/(100)))+((((((801.67994)*(v19)))*(1.0)))/(100)))+((((((834.2588482)*(v20)))*(1.0)))/(100)))+((((((991.6951428)*(v21)))*(1.0)))/(100)))+((((((500)*(v22)))*(1.0)))/(100)))+((((((886.96504)*(v23)))*(1.0)))/(100)))+((((((1049.00673)*(v24)))*(1.0)))/(100)))+((((((1059.7526526)*(v25)))*(1.0)))/(100)))+((((((1097.7898072)*(v26)))*(1.0)))/(100)))+((((((500)*(v27)))*(1.0)))/(100)))+((((((825.711413030191)*(v28)))*(1.0)))/(100)))+((((((1004.658478)*(v29)))*(1.0)))/(100)))+((((((1241.92)*(v30)))*(1.0)))/(100)))+((((((941.547504)*(v31)))*(1.0)))/(100)))+((((((826.7537594)*(v32)))*(1.0)))/(100)))+((((((300)*(v33)))*(1.0)))/(100)))+((((((775.7532696)*(v34)))*(1.0)))/(100)))+((((((500)*(v35)))*(1.0)))/(100)))+((((((944.28)*(v36)))*(1.0)))/(100)))+((((((612.08)*(v37)))*(1.0)))/(100)))+((((((500)*(v38)))*(1.0)))/(100)))+((((((473.38)*(v39)))*(1.0)))/(100)))+((((((925.96)*(v40)))*(1.0)))/(100)))+((((((484.27)*(v41)))*(1.0)))/(100)))+((((((780.55)*(v42)))*(1.0)))/(100)))+((((((434.35)*(v43)))*(1.0)))/(100)))+((((((1228.65)*(v44)))*(1.0)))/(100)))+((((((300)*(v45)))*(1.0)))/(100)))+((((((500)*(v46)))*(1.0)))/(100)))+((((((964.82)*(v47)))*(1.0)))/(100)))+((((((586.286222115809)*(v48)))*(1.0)))/(100)))+((((((500)*(v49)))*(1.0)))/(100)))+((((((408.863293435074)*(v50)))*(1.0)))/(100)))+((((((925.96)*(v51)))*(1.0)))/(100)))+((((((405.863293435074)*(v52)))*(1.0)))/(100)))+((((((910.96)*(v53)))*(1.0)))/(100)))+((((((450.95)*(v54)))*(1.0)))/(100)))+((((((1242.28973578925)*(v55)))*(1.0)))/(100)))+((((((300)*(v56)))*(1.0)))/(100)))+((((((500)*(v57)))*(1.0)))/(100)))+((((((773.95)*(v58)))*(1.0)))/(100)))+((((((793.97)*(v59)))*(1.0)))/(100)))+((((((500)*(v60)))*(1.0)))/(100)))+((((((634.53)*(v61)))*(1.0)))/(100)))+((((((746.2)*(v62)))*(1.0)))/(100)))+((((((747.1)*(v63)))*(1.0)))/(100)))+((((((800)*(v64)))*(1.0)))/(100)))+((((((500)*(v65)))*(1.0)))/(100)))+((((((100)*(v66)))*(1.0)))/(100)))+((((((500)*(v67)))*(1.0)))/(100)))+((((((773.95)*(v68)))*(1.0)))/(100)))+((((((793.97)*(v69)))*(1.0)))/(100)))+((((((500)*(v70)))*(1.0)))/(100)))+((((((634.53)*(v71)))*(1.0)))/(100)))+((((((746.2)*(v72)))*(1.0)))/(100)))+((((((747.1)*(v73)))*(1.0)))/(100)))+((((((800)*(v74)))*(1.0)))/(100)))+((((((500)*(v75)))*(1.0)))/(100)))+((((((100)*(v76)))*(1.0)))/(100)))+((((((500)*(v77)))*(1.0)))/(100)))+((((((773.95)*(v78)))*(1.0)))/(100)))+((((((793.97)*(v79)))*(1.0)))/(100)))+((((((500)*(v80)))*(1.0)))/(100)))+((((((634.53)*(v81)))*(1.0)))/(100)))+((((((746.2)*(v82)))*(1.0)))/(100)))+((((((747.1)*(v83)))*(1.0)))/(100)))+((((((800)*(v84)))*(1.0)))/(100)))+((((((500)*(v85)))*(1.0)))/(100)))+((((((100)*(v86)))*(1.0)))/(100)))+((((((500)*(v87)))*(1.0)))/(100)))+((((((566.5)*(v88)))*(1.0)))/(100)))+((((((600.5)*(v89)))*(1.0)))/(100)))+((((((500)*(v90)))*(1.0)))/(100)))+((((((431.41)*(v91)))*(1.0)))/(100)))+((((((498.015344202792)*(v92)))*(1.0)))/(100)))+((((((466.846846846847)*(v93)))*(1.0)))/(100)))+((((((500)*(v94)))*(1.0)))/(100)))+((((((100)*(v95)))*(1.0)))/(100)))+((((((500)*(v96)))*(1.0)))/(100)))+((((((910.99486005)*(v97)))*(1.0)))/(100)))+((((((853.351)*(v98)))*(1.0)))/(100)))+((((((1039.8935286)*(v99)))*(1.0)))/(100)))+((((((770.6612881)*(v100)))*(1.0)))/(100)))+((((((500)*(v101)))*(1.0)))/(100)))+((((((500)*(v102)))*(1.0)))/(100)))+((((((826.195501934952)*(v103)))*(1.0)))/(100)))+((((((989.88716)*(v104)))*(1.0)))/(100)))+((((((1130.5194048)*(v105)))*(1.0)))/(100)))+((((((500)*(v106)))*(1.0)))/(100)))+((((((300)*(v107)))*(1.0)))/(100)))+((((((1069.8162944)*(v108)))*(1.0)))/(100)))+((((((1245.56)*(v109)))*(1.0)))/(100)))+((((((500)*(v110)))*(1.0)))/(100)))+((((((825.711413030191)*(v111)))*(1.0)))/(100)))+((((((1004.658478)*(v112)))*(1.0)))/(100)))+((((((1129.8570048)*(v113)))*(1.0)))/(100)))+((((((300)*(v114)))*(1.0)))/(100)))+((((((801.67994)*(v115)))*(1.0)))/(100)))+((((((834.2588482)*(v116)))*(1.0)))/(100)))+((((((991.6951428)*(v117)))*(1.0)))/(100)))+((((((500)*(v118)))*(1.0)))/(100)))+((((((886.96504)*(v119)))*(1.0)))/(100)))+((((((1049.00673)*(v120)))*(1.0)))/(100)))+((((((1059.7526526)*(v121)))*(1.0)))/(100)))+((((((1097.7898072)*(v122)))*(1.0)))/(100)))+((((((500)*(v123)))*(1.0)))/(100)))+((((((825.711413030191)*(v124)))*(1.0)))/(100)))+((((((1004.658478)*(v125)))*(1.0)))/(100)))+((((((1241.92)*(v126)))*(1.0)))/(100)))+((((((941.547504)*(v127)))*(1.0)))/(100)))+((((((826.7537594)*(v128)))*(1.0)))/(100)))+((((((300)*(v129)))*(1.0)))/(100)))+((((((775.7532696)*(v130)))*(1.0)))/(100)))+((((((500)*(v131)))*(1.0)))/(100)))+((((((944.28)*(v132)))*(1.0)))/(100)))+((((((612.08)*(v133)))*(1.0)))/(100)))+((((((500)*(v134)))*(1.0)))/(100)))+((((((473.38)*(v135)))*(1.0)))/(100)))+((((((925.96)*(v136)))*(1.0)))/(100)))+((((((484.27)*(v137)))*(1.0)))/(100)))+((((((780.55)*(v138)))*(1.0)))/(100)))+((((((434.35)*(v139)))*(1.0)))/(100)))+((((((1228.65)*(v140)))*(1.0)))/(100)))+((((((300)*(v141)))*(1.0)))/(100)))+((((((500)*(v142)))*(1.0)))/(100)))+((((((964.82)*(v143)))*(1.0)))/(100)))+((((((586.286222115809)*(v144)))*(1.0)))/(100)))+((((((500)*(v145)))*(1.0)))/(100)))+((((((408.863293435074)*(v146)))*(1.0)))/(100)))+((((((925.96)*(v147)))*(1.0)))/(100))))/((1-(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((v1)*(0)))/(100)))+((((v2)*(0)))/(100)))+((((v3)*(0)))/(100)))+((((v4)*(0)))/(100)))+((((v5)*(0)))/(100)))+((((v6)*(0)))/(100)))+((((v7)*(0)))/(100)))+((((v8)*(0)))/(100)))+((((v9)*(0)))/(100)))+((((v10)*(0)))/(100)))+((((v11)*(0)))/(100)))+((((v12)*(0)))/(100)))+((((v13)*(0)))/(100)))+((((v14)*(0)))/(100)))+((((v15)*(0)))/(100)))+((((v16)*(0)))/(100)))+((((v17)*(0)))/(100)))+((((v18)*(0)))/(100)))+((((v19)*(0)))/(100)))+((((v20)*(0)))/(100)))+((((v21)*(0)))/(100)))+((((v22)*(0)))/(100)))+((((v23)*(0)))/(100)))+((((v24)*(0)))/(100)))+((((v25)*(0)))/(100)))+((((v26)*(0)))/(100)))+((((v27)*(0)))/(100)))+((((v28)*(0)))/(100)))+((((v29)*(0)))/(100)))+((((v30)*(0)))/(100)))+((((v31)*(0)))/(100)))+((((v32)*(0)))/(100)))+((((v33)*(0)))/(100)))+((((v34)*(0)))/(100)))+((((v35)*(0)))/(100)))+((((v36)*(0)))/(100)))+((((v37)*(0)))/(100)))+((((v38)*(0)))/(100)))+((((v39)*(0)))/(100)))+((((v40)*(0)))/(100)))+((((v41)*(0)))/(100)))+((((v42)*(0)))/(100)))+((((v43)*(0)))/(100)))+((((v44)*(0)))/(100)))+((((v45)*(0)))/(100)))+((((v46)*(0)))/(100)))+((((v47)*(0)))/(100)))+((((v48)*(0)))/(100)))+((((v49)*(0)))/(100)))+((((v50)*(0)))/(100)))+((((v51)*(0)))/(100)))+((((v52)*(0)))/(100)))+((((v53)*(0)))/(100)))+((((v54)*(0)))/(100)))+((((v55)*(0)))/(100)))+((((v56)*(0)))/(100)))+((((v57)*(0)))/(100)))+((((v58)*(0)))/(100)))+((((v59)*(0)))/(100)))+((((v60)*(0)))/(100)))+((((v61)*(0)))/(100)))+((((v62)*(0)))/(100)))+((((v63)*(0)))/(100)))+((((v64)*(0)))/(100)))+((((v65)*(0)))/(100)))+((((v66)*(0)))/(100)))+((((v67)*(0)))/(100)))+((((v68)*(0)))/(100)))+((((v69)*(0)))/(100)))+((((v70)*(0)))/(100)))+((((v71)*(0)))/(100)))+((((v72)*(0)))/(100)))+((((v73)*(0)))/(100)))+((((v74)*(0)))/(100)))+((((v75)*(0)))/(100)))+((((v76)*(0)))/(100)))+((((v77)*(0)))/(100)))+((((v78)*(0)))/(100)))+((((v79)*(0)))/(100)))+((((v80)*(0)))/(100)))+((((v81)*(0)))/(100)))+((((v82)*(0)))/(100)))+((((v83)*(0)))/(100)))+((((v84)*(0)))/(100)))+((((v85)*(0)))/(100)))+((((v86)*(0)))/(100)))+((((v87)*(0)))/(100)))+((((v88)*(0)))/(100)))+((((v89)*(0)))/(100)))+((((v90)*(0)))/(100)))+((((v91)*(0)))/(100)))+((((v92)*(0)))/(100)))+((((v93)*(0)))/(100)))+((((v94)*(0)))/(100)))+((((v95)*(0)))/(100)))+((((v96)*(0)))/(100)))+((((v97)*(0)))/(100)))+((((v98)*(0)))/(100)))+((((v99)*(0)))/(100)))+((((v100)*(0)))/(100)))+((((v101)*(0)))/(100)))+((((v102)*(0)))/(100)))+((((v103)*(0)))/(100)))+((((v104)*(0)))/(100)))+((((v105)*(0)))/(100)))+((((v106)*(0)))/(100)))+((((v107)*(0)))/(100)))+((((v108)*(0)))/(100)))+((((v109)*(0)))/(100)))+((((v110)*(0)))/(100)))+((((v111)*(0)))/(100)))+((((v112)*(0)))/(100)))+((((v113)*(0)))/(100)))+((((v114)*(0)))/(100)))+((((v115)*(0)))/(100)))+((((v116)*(0)))/(100)))+((((v117)*(0)))/(100)))+((((v118)*(0)))/(100)))+((((v119)*(0)))/(100)))+((((v120)*(0)))/(100)))+((((v121)*(0)))/(100)))+((((v122)*(0)))/(100)))+((((v123)*(0)))/(100)))+((((v124)*(0)))/(100)))+((((v125)*(0)))/(100)))+((((v126)*(0)))/(100)))+((((v127)*(0)))/(100)))+((((v128)*(0)))/(100)))+((((v129)*(0)))/(100)))+((((v130)*(0)))/(100)))+((((v131)*(0)))/(100)))+((((v132)*(0)))/(100)))+((((v133)*(0)))/(100)))+((((v134)*(0)))/(100)))+((((v135)*(0)))/(100)))+((((v136)*(0)))/(100)))+((((v137)*(0)))/(100)))+((((v138)*(0)))/(100)))+((((v139)*(0)))/(100)))+((((v140)*(0)))/(100)))+((((v141)*(0)))/(100)))+((((v142)*(0)))/(100)))+((((v143)*(0)))/(100)))+((((v144)*(0)))/(100)))+((((v145)*(0)))/(100)))+((((v146)*(0)))/(100)))+((((v147)*(0)))/(100))))/(100))))))/((1-(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((((0)*(v1)))*(1.0)))/(100)))+((((((0)*(v2)))*(1.0)))/(100)))+((((((0)*(v3)))*(1.0)))/(100)))+((((((0)*(v4)))*(1.0)))/(100)))+((((((0)*(v5)))*(1.0)))/(100)))+((((((0)*(v6)))*(1.0)))/(100)))+((((((0)*(v7)))*(1.0)))/(100)))+((((((0)*(v8)))*(1.0)))/(100)))+((((((0)*(v9)))*(1.0)))/(100)))+((((((0)*(v10)))*(1.0)))/(100)))+((((((0)*(v11)))*(1.0)))/(100)))+((((((0)*(v12)))*(1.0)))/(100)))+((((((0)*(v13)))*(1.0)))/(100)))+((((((0)*(v14)))*(1.0)))/(100)))+((((((0)*(v15)))*(1.0)))/(100)))+((((((0)*(v16)))*(1.0)))/(100)))+((((((0)*(v17)))*(1.0)))/(100)))+((((((0)*(v18)))*(1.0)))/(100)))+((((((0)*(v19)))*(1.0)))/(100)))+((((((0)*(v20)))*(1.0)))/(100)))+((((((0)*(v21)))*(1.0)))/(100)))+((((((0)*(v22)))*(1.0)))/(100)))+((((((0)*(v23)))*(1.0)))/(100)))+((((((0)*(v24)))*(1.0)))/(100)))+((((((0)*(v25)))*(1.0)))/(100)))+((((((0)*(v26)))*(1.0)))/(100)))+((((((0)*(v27)))*(1.0)))/(100)))+((((((0)*(v28)))*(1.0)))/(100)))+((((((0)*(v29)))*(1.0)))/(100)))+((((((0)*(v30)))*(1.0)))/(100)))+((((((0)*(v31)))*(1.0)))/(100)))+((((((0)*(v32)))*(1.0)))/(100)))+((((((0)*(v33)))*(1.0)))/(100)))+((((((0)*(v34)))*(1.0)))/(100)))+((((((0)*(v35)))*(1.0)))/(100)))+((((((0)*(v36)))*(1.0)))/(100)))+((((((0)*(v37)))*(1.0)))/(100)))+((((((0)*(v38)))*(1.0)))/(100)))+((((((0)*(v39)))*(1.0)))/(100)))+((((((0)*(v40)))*(1.0)))/(100)))+((((((0)*(v41)))*(1.0)))/(100)))+((((((0)*(v42)))*(1.0)))/(100)))+((((((0)*(v43)))*(1.0)))/(100)))+((((((0)*(v44)))*(1.0)))/(100)))+((((((0)*(v45)))*(1.0)))/(100)))+((((((0)*(v46)))*(1.0)))/(100)))+((((((0)*(v47)))*(1.0)))/(100)))+((((((0)*(v48)))*(1.0)))/(100)))+((((((0)*(v49)))*(1.0)))/(100)))+((((((0)*(v50)))*(1.0)))/(100)))+((((((0)*(v51)))*(1.0)))/(100)))+((((((0)*(v52)))*(1.0)))/(100)))+((((((0)*(v53)))*(1.0)))/(100)))+((((((0)*(v54)))*(1.0)))/(100)))+((((((0)*(v55)))*(1.0)))/(100)))+((((((0)*(v56)))*(1.0)))/(100)))+((((((0)*(v57)))*(1.0)))/(100)))+((((((0)*(v58)))*(1.0)))/(100)))+((((((0)*(v59)))*(1.0)))/(100)))+((((((0)*(v60)))*(1.0)))/(100)))+((((((0)*(v61)))*(1.0)))/(100)))+((((((0)*(v62)))*(1.0)))/(100)))+((((((0)*(v63)))*(1.0)))/(100)))+((((((0)*(v64)))*(1.0)))/(100)))+((((((0)*(v65)))*(1.0)))/(100)))+((((((0)*(v66)))*(1.0)))/(100)))+((((((0)*(v67)))*(1.0)))/(100)))+((((((0)*(v68)))*(1.0)))/(100)))+((((((0)*(v69)))*(1.0)))/(100)))+((((((0)*(v70)))*(1.0)))/(100)))+((((((0)*(v71)))*(1.0)))/(100)))+((((((0)*(v72)))*(1.0)))/(100)))+((((((0)*(v73)))*(1.0)))/(100)))+((((((0)*(v74)))*(1.0)))/(100)))+((((((0)*(v75)))*(1.0)))/(100)))+((((((0)*(v76)))*(1.0)))/(100)))+((((((0)*(v77)))*(1.0)))/(100)))+((((((0)*(v78)))*(1.0)))/(100)))+((((((0)*(v79)))*(1.0)))/(100)))+((((((0)*(v80)))*(1.0)))/(100)))+((((((0)*(v81)))*(1.0)))/(100)))+((((((0)*(v82)))*(1.0)))/(100)))+((((((0)*(v83)))*(1.0)))/(100)))+((((((0)*(v84)))*(1.0)))/(100)))+((((((0)*(v85)))*(1.0)))/(100)))+((((((0)*(v86)))*(1.0)))/(100)))+((((((0)*(v87)))*(1.0)))/(100)))+((((((0)*(v88)))*(1.0)))/(100)))+((((((0)*(v89)))*(1.0)))/(100)))+((((((0)*(v90)))*(1.0)))/(100)))+((((((0)*(v91)))*(1.0)))/(100)))+((((((0)*(v92)))*(1.0)))/(100)))+((((((0)*(v93)))*(1.0)))/(100)))+((((((0)*(v94)))*(1.0)))/(100)))+((((((0)*(v95)))*(1.0)))/(100)))+((((((0)*(v96)))*(1.0)))/(100)))+((((((0)*(v97)))*(1.0)))/(100)))+((((((0)*(v98)))*(1.0)))/(100)))+((((((0)*(v99)))*(1.0)))/(100)))+((((((0)*(v100)))*(1.0)))/(100)))+((((((0)*(v101)))*(1.0)))/(100)))+((((((0)*(v102)))*(1.0)))/(100)))+((((((0)*(v103)))*(1.0)))/(100)))+((((((0)*(v104)))*(1.0)))/(100)))+((((((0)*(v105)))*(1.0)))/(100)))+((((((0)*(v106)))*(1.0)))/(100)))+((((((0)*(v107)))*(1.0)))/(100)))+((((((0)*(v108)))*(1.0)))/(100)))+((((((0)*(v109)))*(1.0)))/(100)))+((((((0)*(v110)))*(1.0)))/(100)))+((((((0)*(v111)))*(1.0)))/(100)))+((((((0)*(v112)))*(1.0)))/(100)))+((((((0)*(v113)))*(1.0)))/(100)))+((((((0)*(v114)))*(1.0)))/(100)))+((((((0)*(v115)))*(1.0)))/(100)))+((((((0)*(v116)))*(1.0)))/(100)))+((((((0)*(v117)))*(1.0)))/(100)))+((((((0)*(v118)))*(1.0)))/(100)))+((((((0)*(v119)))*(1.0)))/(100)))+((((((0)*(v120)))*(1.0)))/(100)))+((((((0)*(v121)))*(1.0)))/(100)))+((((((0)*(v122)))*(1.0)))/(100)))+((((((0)*(v123)))*(1.0)))/(100)))+((((((0)*(v124)))*(1.0)))/(100)))+((((((0)*(v125)))*(1.0)))/(100)))+((((((0)*(v126)))*(1.0)))/(100)))+((((((0)*(v127)))*(1.0)))/(100)))+((((((0)*(v128)))*(1.0)))/(100)))+((((((0)*(v129)))*(1.0)))/(100)))+((((((0)*(v130)))*(1.0)))/(100)))+((((((0)*(v131)))*(1.0)))/(100)))+((((((0)*(v132)))*(1.0)))/(100)))+((((((0)*(v133)))*(1.0)))/(100)))+((((((0)*(v134)))*(1.0)))/(100)))+((((((0)*(v135)))*(1.0)))/(100)))+((((((0)*(v136)))*(1.0)))/(100)))+((((((0)*(v137)))*(1.0)))/(100)))+((((((0)*(v138)))*(1.0)))/(100)))+((((((0)*(v139)))*(1.0)))/(100)))+((((((0)*(v140)))*(1.0)))/(100)))+((((((0)*(v141)))*(1.0)))/(100)))+((((((0)*(v142)))*(1.0)))/(100)))+((((((0)*(v143)))*(1.0)))/(100)))+((((((0)*(v144)))*(1.0)))/(100)))+((((((0)*(v145)))*(1.0)))/(100)))+((((((0)*(v146)))*(1.0)))/(100)))+((((((0)*(v147)))*(1.0)))/(100))))/((1-(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((v1)*(0)))/(100)))+((((v2)*(0)))/(100)))+((((v3)*(0)))/(100)))+((((v4)*(0)))/(100)))+((((v5)*(0)))/(100)))+((((v6)*(0)))/(100)))+((((v7)*(0)))/(100)))+((((v8)*(0)))/(100)))+((((v9)*(0)))/(100)))+((((v10)*(0)))/(100)))+((((v11)*(0)))/(100)))+((((v12)*(0)))/(100)))+((((v13)*(0)))/(100)))+((((v14)*(0)))/(100)))+((((v15)*(0)))/(100)))+((((v16)*(0)))/(100)))+((((v17)*(0)))/(100)))+((((v18)*(0)))/(100)))+((((v19)*(0)))/(100)))+((((v20)*(0)))/(100)))+((((v21)*(0)))/(100)))+((((v22)*(0)))/(100)))+((((v23)*(0)))/(100)))+((((v24)*(0)))/(100)))+((((v25)*(0)))/(100)))+((((v26)*(0)))/(100)))+((((v27)*(0)))/(100)))+((((v28)*(0)))/(100)))+((((v29)*(0)))/(100)))+((((v30)*(0)))/(100)))+((((v31)*(0)))/(100)))+((((v32)*(0)))/(100)))+((((v33)*(0)))/(1
 
 APM model error: string > 15000  characters
 Consider breaking up the line into multiple equations
 
 The may also be due to only using newline character CR
   instead of CR LF (for Windows) or LF (for MacOS/Linux) 
 To fix this problem, save APM file with appropriate newline characters
 
 STOPPING...
 


2018-12-06 14:16:20,623 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 710.6713012820844), (1, 1, 1)]
2018-12-06 14:16:20,623 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.7079291147166344, 'sio2': 91.6472771739808, 'cost': 0.6447937113025727}
2018-12-06 14:16:20,770 __main__ mainTask ERROR = Traceback (most recent call last):
  File "C:/Users/sun/PycharmProjects/optimizationproblem/gekkoSolution/mainTask.py", line 37, in <module>
    lp.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\gekkoSolution\gekkoProblem.py", line 46, in solve
    self.prob.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\gekko\gekko.py", line 682, in solve
    raise Exception(apm_error)
Exception:  @error: Max Equation Length
 Error with line number:  152
 i0=(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((((910.99486005)*(v1)))*(1.0)))/(100)))+((((((853.351)*(v2)))*(1.0)))/(100)))+((((((1039.8935286)*(v3)))*(1.0)))/(100)))+((((((770.6612881)*(v4)))*(1.0)))/(100)))+((((((500)*(v5)))*(1.0)))/(100)))+((((((500)*(v6)))*(1.0)))/(100)))+((((((826.195501934952)*(v7)))*(1.0)))/(100)))+((((((989.88716)*(v8)))*(1.0)))/(100)))+((((((1130.5194048)*(v9)))*(1.0)))/(100)))+((((((500)*(v10)))*(1.0)))/(100)))+((((((300)*(v11)))*(1.0)))/(100)))+((((((1069.8162944)*(v12)))*(1.0)))/(100)))+((((((1245.56)*(v13)))*(1.0)))/(100)))+((((((500)*(v14)))*(1.0)))/(100)))+((((((825.711413030191)*(v15)))*(1.0)))/(100)))+((((((1004.658478)*(v16)))*(1.0)))/(100)))+((((((1129.8570048)*(v17)))*(1.0)))/(100)))+((((((300)*(v18)))*(1.0)))/(100)))+((((((801.67994)*(v19)))*(1.0)))/(100)))+((((((834.2588482)*(v20)))*(1.0)))/(100)))+((((((991.6951428)*(v21)))*(1.0)))/(100)))+((((((500)*(v22)))*(1.0)))/(100)))+((((((886.96504)*(v23)))*(1.0)))/(100)))+((((((1049.00673)*(v24)))*(1.0)))/(100)))+((((((1059.7526526)*(v25)))*(1.0)))/(100)))+((((((1097.7898072)*(v26)))*(1.0)))/(100)))+((((((500)*(v27)))*(1.0)))/(100)))+((((((825.711413030191)*(v28)))*(1.0)))/(100)))+((((((1004.658478)*(v29)))*(1.0)))/(100)))+((((((1241.92)*(v30)))*(1.0)))/(100)))+((((((941.547504)*(v31)))*(1.0)))/(100)))+((((((826.7537594)*(v32)))*(1.0)))/(100)))+((((((300)*(v33)))*(1.0)))/(100)))+((((((775.7532696)*(v34)))*(1.0)))/(100)))+((((((500)*(v35)))*(1.0)))/(100)))+((((((944.28)*(v36)))*(1.0)))/(100)))+((((((612.08)*(v37)))*(1.0)))/(100)))+((((((500)*(v38)))*(1.0)))/(100)))+((((((473.38)*(v39)))*(1.0)))/(100)))+((((((925.96)*(v40)))*(1.0)))/(100)))+((((((484.27)*(v41)))*(1.0)))/(100)))+((((((780.55)*(v42)))*(1.0)))/(100)))+((((((434.35)*(v43)))*(1.0)))/(100)))+((((((1228.65)*(v44)))*(1.0)))/(100)))+((((((300)*(v45)))*(1.0)))/(100)))+((((((500)*(v46)))*(1.0)))/(100)))+((((((964.82)*(v47)))*(1.0)))/(100)))+((((((586.286222115809)*(v48)))*(1.0)))/(100)))+((((((500)*(v49)))*(1.0)))/(100)))+((((((408.863293435074)*(v50)))*(1.0)))/(100)))+((((((925.96)*(v51)))*(1.0)))/(100)))+((((((405.863293435074)*(v52)))*(1.0)))/(100)))+((((((910.96)*(v53)))*(1.0)))/(100)))+((((((450.95)*(v54)))*(1.0)))/(100)))+((((((1242.28973578925)*(v55)))*(1.0)))/(100)))+((((((300)*(v56)))*(1.0)))/(100)))+((((((500)*(v57)))*(1.0)))/(100)))+((((((773.95)*(v58)))*(1.0)))/(100)))+((((((793.97)*(v59)))*(1.0)))/(100)))+((((((500)*(v60)))*(1.0)))/(100)))+((((((634.53)*(v61)))*(1.0)))/(100)))+((((((746.2)*(v62)))*(1.0)))/(100)))+((((((747.1)*(v63)))*(1.0)))/(100)))+((((((800)*(v64)))*(1.0)))/(100)))+((((((500)*(v65)))*(1.0)))/(100)))+((((((100)*(v66)))*(1.0)))/(100)))+((((((500)*(v67)))*(1.0)))/(100)))+((((((773.95)*(v68)))*(1.0)))/(100)))+((((((793.97)*(v69)))*(1.0)))/(100)))+((((((500)*(v70)))*(1.0)))/(100)))+((((((634.53)*(v71)))*(1.0)))/(100)))+((((((746.2)*(v72)))*(1.0)))/(100)))+((((((747.1)*(v73)))*(1.0)))/(100)))+((((((800)*(v74)))*(1.0)))/(100)))+((((((500)*(v75)))*(1.0)))/(100)))+((((((100)*(v76)))*(1.0)))/(100)))+((((((500)*(v77)))*(1.0)))/(100)))+((((((773.95)*(v78)))*(1.0)))/(100)))+((((((793.97)*(v79)))*(1.0)))/(100)))+((((((500)*(v80)))*(1.0)))/(100)))+((((((634.53)*(v81)))*(1.0)))/(100)))+((((((746.2)*(v82)))*(1.0)))/(100)))+((((((747.1)*(v83)))*(1.0)))/(100)))+((((((800)*(v84)))*(1.0)))/(100)))+((((((500)*(v85)))*(1.0)))/(100)))+((((((100)*(v86)))*(1.0)))/(100)))+((((((500)*(v87)))*(1.0)))/(100)))+((((((566.5)*(v88)))*(1.0)))/(100)))+((((((600.5)*(v89)))*(1.0)))/(100)))+((((((500)*(v90)))*(1.0)))/(100)))+((((((431.41)*(v91)))*(1.0)))/(100)))+((((((498.015344202792)*(v92)))*(1.0)))/(100)))+((((((466.846846846847)*(v93)))*(1.0)))/(100)))+((((((500)*(v94)))*(1.0)))/(100)))+((((((100)*(v95)))*(1.0)))/(100)))+((((((500)*(v96)))*(1.0)))/(100)))+((((((910.99486005)*(v97)))*(1.0)))/(100)))+((((((853.351)*(v98)))*(1.0)))/(100)))+((((((1039.8935286)*(v99)))*(1.0)))/(100)))+((((((770.6612881)*(v100)))*(1.0)))/(100)))+((((((500)*(v101)))*(1.0)))/(100)))+((((((500)*(v102)))*(1.0)))/(100)))+((((((826.195501934952)*(v103)))*(1.0)))/(100)))+((((((989.88716)*(v104)))*(1.0)))/(100)))+((((((1130.5194048)*(v105)))*(1.0)))/(100)))+((((((500)*(v106)))*(1.0)))/(100)))+((((((300)*(v107)))*(1.0)))/(100)))+((((((1069.8162944)*(v108)))*(1.0)))/(100)))+((((((1245.56)*(v109)))*(1.0)))/(100)))+((((((500)*(v110)))*(1.0)))/(100)))+((((((825.711413030191)*(v111)))*(1.0)))/(100)))+((((((1004.658478)*(v112)))*(1.0)))/(100)))+((((((1129.8570048)*(v113)))*(1.0)))/(100)))+((((((300)*(v114)))*(1.0)))/(100)))+((((((801.67994)*(v115)))*(1.0)))/(100)))+((((((834.2588482)*(v116)))*(1.0)))/(100)))+((((((991.6951428)*(v117)))*(1.0)))/(100)))+((((((500)*(v118)))*(1.0)))/(100)))+((((((886.96504)*(v119)))*(1.0)))/(100)))+((((((1049.00673)*(v120)))*(1.0)))/(100)))+((((((1059.7526526)*(v121)))*(1.0)))/(100)))+((((((1097.7898072)*(v122)))*(1.0)))/(100)))+((((((500)*(v123)))*(1.0)))/(100)))+((((((825.711413030191)*(v124)))*(1.0)))/(100)))+((((((1004.658478)*(v125)))*(1.0)))/(100)))+((((((1241.92)*(v126)))*(1.0)))/(100)))+((((((941.547504)*(v127)))*(1.0)))/(100)))+((((((826.7537594)*(v128)))*(1.0)))/(100)))+((((((300)*(v129)))*(1.0)))/(100)))+((((((775.7532696)*(v130)))*(1.0)))/(100)))+((((((500)*(v131)))*(1.0)))/(100)))+((((((944.28)*(v132)))*(1.0)))/(100)))+((((((612.08)*(v133)))*(1.0)))/(100)))+((((((500)*(v134)))*(1.0)))/(100)))+((((((473.38)*(v135)))*(1.0)))/(100)))+((((((925.96)*(v136)))*(1.0)))/(100)))+((((((484.27)*(v137)))*(1.0)))/(100)))+((((((780.55)*(v138)))*(1.0)))/(100)))+((((((434.35)*(v139)))*(1.0)))/(100)))+((((((1228.65)*(v140)))*(1.0)))/(100)))+((((((300)*(v141)))*(1.0)))/(100)))+((((((500)*(v142)))*(1.0)))/(100)))+((((((964.82)*(v143)))*(1.0)))/(100)))+((((((586.286222115809)*(v144)))*(1.0)))/(100)))+((((((500)*(v145)))*(1.0)))/(100)))+((((((408.863293435074)*(v146)))*(1.0)))/(100)))+((((((925.96)*(v147)))*(1.0)))/(100))))/((1-(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((v1)*(0)))/(100)))+((((v2)*(0)))/(100)))+((((v3)*(0)))/(100)))+((((v4)*(0)))/(100)))+((((v5)*(0)))/(100)))+((((v6)*(0)))/(100)))+((((v7)*(0)))/(100)))+((((v8)*(0)))/(100)))+((((v9)*(0)))/(100)))+((((v10)*(0)))/(100)))+((((v11)*(0)))/(100)))+((((v12)*(0)))/(100)))+((((v13)*(0)))/(100)))+((((v14)*(0)))/(100)))+((((v15)*(0)))/(100)))+((((v16)*(0)))/(100)))+((((v17)*(0)))/(100)))+((((v18)*(0)))/(100)))+((((v19)*(0)))/(100)))+((((v20)*(0)))/(100)))+((((v21)*(0)))/(100)))+((((v22)*(0)))/(100)))+((((v23)*(0)))/(100)))+((((v24)*(0)))/(100)))+((((v25)*(0)))/(100)))+((((v26)*(0)))/(100)))+((((v27)*(0)))/(100)))+((((v28)*(0)))/(100)))+((((v29)*(0)))/(100)))+((((v30)*(0)))/(100)))+((((v31)*(0)))/(100)))+((((v32)*(0)))/(100)))+((((v33)*(0)))/(100)))+((((v34)*(0)))/(100)))+((((v35)*(0)))/(100)))+((((v36)*(0)))/(100)))+((((v37)*(0)))/(100)))+((((v38)*(0)))/(100)))+((((v39)*(0)))/(100)))+((((v40)*(0)))/(100)))+((((v41)*(0)))/(100)))+((((v42)*(0)))/(100)))+((((v43)*(0)))/(100)))+((((v44)*(0)))/(100)))+((((v45)*(0)))/(100)))+((((v46)*(0)))/(100)))+((((v47)*(0)))/(100)))+((((v48)*(0)))/(100)))+((((v49)*(0)))/(100)))+((((v50)*(0)))/(100)))+((((v51)*(0)))/(100)))+((((v52)*(0)))/(100)))+((((v53)*(0)))/(100)))+((((v54)*(0)))/(100)))+((((v55)*(0)))/(100)))+((((v56)*(0)))/(100)))+((((v57)*(0)))/(100)))+((((v58)*(0)))/(100)))+((((v59)*(0)))/(100)))+((((v60)*(0)))/(100)))+((((v61)*(0)))/(100)))+((((v62)*(0)))/(100)))+((((v63)*(0)))/(100)))+((((v64)*(0)))/(100)))+((((v65)*(0)))/(100)))+((((v66)*(0)))/(100)))+((((v67)*(0)))/(100)))+((((v68)*(0)))/(100)))+((((v69)*(0)))/(100)))+((((v70)*(0)))/(100)))+((((v71)*(0)))/(100)))+((((v72)*(0)))/(100)))+((((v73)*(0)))/(100)))+((((v74)*(0)))/(100)))+((((v75)*(0)))/(100)))+((((v76)*(0)))/(100)))+((((v77)*(0)))/(100)))+((((v78)*(0)))/(100)))+((((v79)*(0)))/(100)))+((((v80)*(0)))/(100)))+((((v81)*(0)))/(100)))+((((v82)*(0)))/(100)))+((((v83)*(0)))/(100)))+((((v84)*(0)))/(100)))+((((v85)*(0)))/(100)))+((((v86)*(0)))/(100)))+((((v87)*(0)))/(100)))+((((v88)*(0)))/(100)))+((((v89)*(0)))/(100)))+((((v90)*(0)))/(100)))+((((v91)*(0)))/(100)))+((((v92)*(0)))/(100)))+((((v93)*(0)))/(100)))+((((v94)*(0)))/(100)))+((((v95)*(0)))/(100)))+((((v96)*(0)))/(100)))+((((v97)*(0)))/(100)))+((((v98)*(0)))/(100)))+((((v99)*(0)))/(100)))+((((v100)*(0)))/(100)))+((((v101)*(0)))/(100)))+((((v102)*(0)))/(100)))+((((v103)*(0)))/(100)))+((((v104)*(0)))/(100)))+((((v105)*(0)))/(100)))+((((v106)*(0)))/(100)))+((((v107)*(0)))/(100)))+((((v108)*(0)))/(100)))+((((v109)*(0)))/(100)))+((((v110)*(0)))/(100)))+((((v111)*(0)))/(100)))+((((v112)*(0)))/(100)))+((((v113)*(0)))/(100)))+((((v114)*(0)))/(100)))+((((v115)*(0)))/(100)))+((((v116)*(0)))/(100)))+((((v117)*(0)))/(100)))+((((v118)*(0)))/(100)))+((((v119)*(0)))/(100)))+((((v120)*(0)))/(100)))+((((v121)*(0)))/(100)))+((((v122)*(0)))/(100)))+((((v123)*(0)))/(100)))+((((v124)*(0)))/(100)))+((((v125)*(0)))/(100)))+((((v126)*(0)))/(100)))+((((v127)*(0)))/(100)))+((((v128)*(0)))/(100)))+((((v129)*(0)))/(100)))+((((v130)*(0)))/(100)))+((((v131)*(0)))/(100)))+((((v132)*(0)))/(100)))+((((v133)*(0)))/(100)))+((((v134)*(0)))/(100)))+((((v135)*(0)))/(100)))+((((v136)*(0)))/(100)))+((((v137)*(0)))/(100)))+((((v138)*(0)))/(100)))+((((v139)*(0)))/(100)))+((((v140)*(0)))/(100)))+((((v141)*(0)))/(100)))+((((v142)*(0)))/(100)))+((((v143)*(0)))/(100)))+((((v144)*(0)))/(100)))+((((v145)*(0)))/(100)))+((((v146)*(0)))/(100)))+((((v147)*(0)))/(100))))/(100))))))/((1-(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((((0)*(v1)))*(1.0)))/(100)))+((((((0)*(v2)))*(1.0)))/(100)))+((((((0)*(v3)))*(1.0)))/(100)))+((((((0)*(v4)))*(1.0)))/(100)))+((((((0)*(v5)))*(1.0)))/(100)))+((((((0)*(v6)))*(1.0)))/(100)))+((((((0)*(v7)))*(1.0)))/(100)))+((((((0)*(v8)))*(1.0)))/(100)))+((((((0)*(v9)))*(1.0)))/(100)))+((((((0)*(v10)))*(1.0)))/(100)))+((((((0)*(v11)))*(1.0)))/(100)))+((((((0)*(v12)))*(1.0)))/(100)))+((((((0)*(v13)))*(1.0)))/(100)))+((((((0)*(v14)))*(1.0)))/(100)))+((((((0)*(v15)))*(1.0)))/(100)))+((((((0)*(v16)))*(1.0)))/(100)))+((((((0)*(v17)))*(1.0)))/(100)))+((((((0)*(v18)))*(1.0)))/(100)))+((((((0)*(v19)))*(1.0)))/(100)))+((((((0)*(v20)))*(1.0)))/(100)))+((((((0)*(v21)))*(1.0)))/(100)))+((((((0)*(v22)))*(1.0)))/(100)))+((((((0)*(v23)))*(1.0)))/(100)))+((((((0)*(v24)))*(1.0)))/(100)))+((((((0)*(v25)))*(1.0)))/(100)))+((((((0)*(v26)))*(1.0)))/(100)))+((((((0)*(v27)))*(1.0)))/(100)))+((((((0)*(v28)))*(1.0)))/(100)))+((((((0)*(v29)))*(1.0)))/(100)))+((((((0)*(v30)))*(1.0)))/(100)))+((((((0)*(v31)))*(1.0)))/(100)))+((((((0)*(v32)))*(1.0)))/(100)))+((((((0)*(v33)))*(1.0)))/(100)))+((((((0)*(v34)))*(1.0)))/(100)))+((((((0)*(v35)))*(1.0)))/(100)))+((((((0)*(v36)))*(1.0)))/(100)))+((((((0)*(v37)))*(1.0)))/(100)))+((((((0)*(v38)))*(1.0)))/(100)))+((((((0)*(v39)))*(1.0)))/(100)))+((((((0)*(v40)))*(1.0)))/(100)))+((((((0)*(v41)))*(1.0)))/(100)))+((((((0)*(v42)))*(1.0)))/(100)))+((((((0)*(v43)))*(1.0)))/(100)))+((((((0)*(v44)))*(1.0)))/(100)))+((((((0)*(v45)))*(1.0)))/(100)))+((((((0)*(v46)))*(1.0)))/(100)))+((((((0)*(v47)))*(1.0)))/(100)))+((((((0)*(v48)))*(1.0)))/(100)))+((((((0)*(v49)))*(1.0)))/(100)))+((((((0)*(v50)))*(1.0)))/(100)))+((((((0)*(v51)))*(1.0)))/(100)))+((((((0)*(v52)))*(1.0)))/(100)))+((((((0)*(v53)))*(1.0)))/(100)))+((((((0)*(v54)))*(1.0)))/(100)))+((((((0)*(v55)))*(1.0)))/(100)))+((((((0)*(v56)))*(1.0)))/(100)))+((((((0)*(v57)))*(1.0)))/(100)))+((((((0)*(v58)))*(1.0)))/(100)))+((((((0)*(v59)))*(1.0)))/(100)))+((((((0)*(v60)))*(1.0)))/(100)))+((((((0)*(v61)))*(1.0)))/(100)))+((((((0)*(v62)))*(1.0)))/(100)))+((((((0)*(v63)))*(1.0)))/(100)))+((((((0)*(v64)))*(1.0)))/(100)))+((((((0)*(v65)))*(1.0)))/(100)))+((((((0)*(v66)))*(1.0)))/(100)))+((((((0)*(v67)))*(1.0)))/(100)))+((((((0)*(v68)))*(1.0)))/(100)))+((((((0)*(v69)))*(1.0)))/(100)))+((((((0)*(v70)))*(1.0)))/(100)))+((((((0)*(v71)))*(1.0)))/(100)))+((((((0)*(v72)))*(1.0)))/(100)))+((((((0)*(v73)))*(1.0)))/(100)))+((((((0)*(v74)))*(1.0)))/(100)))+((((((0)*(v75)))*(1.0)))/(100)))+((((((0)*(v76)))*(1.0)))/(100)))+((((((0)*(v77)))*(1.0)))/(100)))+((((((0)*(v78)))*(1.0)))/(100)))+((((((0)*(v79)))*(1.0)))/(100)))+((((((0)*(v80)))*(1.0)))/(100)))+((((((0)*(v81)))*(1.0)))/(100)))+((((((0)*(v82)))*(1.0)))/(100)))+((((((0)*(v83)))*(1.0)))/(100)))+((((((0)*(v84)))*(1.0)))/(100)))+((((((0)*(v85)))*(1.0)))/(100)))+((((((0)*(v86)))*(1.0)))/(100)))+((((((0)*(v87)))*(1.0)))/(100)))+((((((0)*(v88)))*(1.0)))/(100)))+((((((0)*(v89)))*(1.0)))/(100)))+((((((0)*(v90)))*(1.0)))/(100)))+((((((0)*(v91)))*(1.0)))/(100)))+((((((0)*(v92)))*(1.0)))/(100)))+((((((0)*(v93)))*(1.0)))/(100)))+((((((0)*(v94)))*(1.0)))/(100)))+((((((0)*(v95)))*(1.0)))/(100)))+((((((0)*(v96)))*(1.0)))/(100)))+((((((0)*(v97)))*(1.0)))/(100)))+((((((0)*(v98)))*(1.0)))/(100)))+((((((0)*(v99)))*(1.0)))/(100)))+((((((0)*(v100)))*(1.0)))/(100)))+((((((0)*(v101)))*(1.0)))/(100)))+((((((0)*(v102)))*(1.0)))/(100)))+((((((0)*(v103)))*(1.0)))/(100)))+((((((0)*(v104)))*(1.0)))/(100)))+((((((0)*(v105)))*(1.0)))/(100)))+((((((0)*(v106)))*(1.0)))/(100)))+((((((0)*(v107)))*(1.0)))/(100)))+((((((0)*(v108)))*(1.0)))/(100)))+((((((0)*(v109)))*(1.0)))/(100)))+((((((0)*(v110)))*(1.0)))/(100)))+((((((0)*(v111)))*(1.0)))/(100)))+((((((0)*(v112)))*(1.0)))/(100)))+((((((0)*(v113)))*(1.0)))/(100)))+((((((0)*(v114)))*(1.0)))/(100)))+((((((0)*(v115)))*(1.0)))/(100)))+((((((0)*(v116)))*(1.0)))/(100)))+((((((0)*(v117)))*(1.0)))/(100)))+((((((0)*(v118)))*(1.0)))/(100)))+((((((0)*(v119)))*(1.0)))/(100)))+((((((0)*(v120)))*(1.0)))/(100)))+((((((0)*(v121)))*(1.0)))/(100)))+((((((0)*(v122)))*(1.0)))/(100)))+((((((0)*(v123)))*(1.0)))/(100)))+((((((0)*(v124)))*(1.0)))/(100)))+((((((0)*(v125)))*(1.0)))/(100)))+((((((0)*(v126)))*(1.0)))/(100)))+((((((0)*(v127)))*(1.0)))/(100)))+((((((0)*(v128)))*(1.0)))/(100)))+((((((0)*(v129)))*(1.0)))/(100)))+((((((0)*(v130)))*(1.0)))/(100)))+((((((0)*(v131)))*(1.0)))/(100)))+((((((0)*(v132)))*(1.0)))/(100)))+((((((0)*(v133)))*(1.0)))/(100)))+((((((0)*(v134)))*(1.0)))/(100)))+((((((0)*(v135)))*(1.0)))/(100)))+((((((0)*(v136)))*(1.0)))/(100)))+((((((0)*(v137)))*(1.0)))/(100)))+((((((0)*(v138)))*(1.0)))/(100)))+((((((0)*(v139)))*(1.0)))/(100)))+((((((0)*(v140)))*(1.0)))/(100)))+((((((0)*(v141)))*(1.0)))/(100)))+((((((0)*(v142)))*(1.0)))/(100)))+((((((0)*(v143)))*(1.0)))/(100)))+((((((0)*(v144)))*(1.0)))/(100)))+((((((0)*(v145)))*(1.0)))/(100)))+((((((0)*(v146)))*(1.0)))/(100)))+((((((0)*(v147)))*(1.0)))/(100))))/((1-(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((v1)*(0)))/(100)))+((((v2)*(0)))/(100)))+((((v3)*(0)))/(100)))+((((v4)*(0)))/(100)))+((((v5)*(0)))/(100)))+((((v6)*(0)))/(100)))+((((v7)*(0)))/(100)))+((((v8)*(0)))/(100)))+((((v9)*(0)))/(100)))+((((v10)*(0)))/(100)))+((((v11)*(0)))/(100)))+((((v12)*(0)))/(100)))+((((v13)*(0)))/(100)))+((((v14)*(0)))/(100)))+((((v15)*(0)))/(100)))+((((v16)*(0)))/(100)))+((((v17)*(0)))/(100)))+((((v18)*(0)))/(100)))+((((v19)*(0)))/(100)))+((((v20)*(0)))/(100)))+((((v21)*(0)))/(100)))+((((v22)*(0)))/(100)))+((((v23)*(0)))/(100)))+((((v24)*(0)))/(100)))+((((v25)*(0)))/(100)))+((((v26)*(0)))/(100)))+((((v27)*(0)))/(100)))+((((v28)*(0)))/(100)))+((((v29)*(0)))/(100)))+((((v30)*(0)))/(100)))+((((v31)*(0)))/(100)))+((((v32)*(0)))/(100)))+((((v33)*(0)))/(1
 
 APM model error: string > 15000  characters
 Consider breaking up the line into multiple equations
 
 The may also be due to only using newline character CR
   instead of CR LF (for Windows) or LF (for MacOS/Linux) 
 To fix this problem, save APM file with appropriate newline characters
 
 STOPPING...
 


2018-12-06 14:16:30,295 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 710.6713012820844), (1, 1, 1)]
2018-12-06 14:16:30,296 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.7079291147166344, 'sio2': 91.6472771739808, 'cost': 0.6447937113025727}
2018-12-06 14:16:30,436 __main__ mainTask ERROR = Traceback (most recent call last):
  File "C:/Users/sun/PycharmProjects/optimizationproblem/gekkoSolution/mainTask.py", line 37, in <module>
    lp.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\gekkoSolution\gekkoProblem.py", line 46, in solve
    self.prob.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\gekko\gekko.py", line 682, in solve
    raise Exception(apm_error)
Exception:  @error: Max Equation Length
 Error with line number:  152
 i0=(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((((910.99486005)*(v1)))*(1.0)))/(100)))+((((((853.351)*(v2)))*(1.0)))/(100)))+((((((1039.8935286)*(v3)))*(1.0)))/(100)))+((((((770.6612881)*(v4)))*(1.0)))/(100)))+((((((500)*(v5)))*(1.0)))/(100)))+((((((500)*(v6)))*(1.0)))/(100)))+((((((826.195501934952)*(v7)))*(1.0)))/(100)))+((((((989.88716)*(v8)))*(1.0)))/(100)))+((((((1130.5194048)*(v9)))*(1.0)))/(100)))+((((((500)*(v10)))*(1.0)))/(100)))+((((((300)*(v11)))*(1.0)))/(100)))+((((((1069.8162944)*(v12)))*(1.0)))/(100)))+((((((1245.56)*(v13)))*(1.0)))/(100)))+((((((500)*(v14)))*(1.0)))/(100)))+((((((825.711413030191)*(v15)))*(1.0)))/(100)))+((((((1004.658478)*(v16)))*(1.0)))/(100)))+((((((1129.8570048)*(v17)))*(1.0)))/(100)))+((((((300)*(v18)))*(1.0)))/(100)))+((((((801.67994)*(v19)))*(1.0)))/(100)))+((((((834.2588482)*(v20)))*(1.0)))/(100)))+((((((991.6951428)*(v21)))*(1.0)))/(100)))+((((((500)*(v22)))*(1.0)))/(100)))+((((((886.96504)*(v23)))*(1.0)))/(100)))+((((((1049.00673)*(v24)))*(1.0)))/(100)))+((((((1059.7526526)*(v25)))*(1.0)))/(100)))+((((((1097.7898072)*(v26)))*(1.0)))/(100)))+((((((500)*(v27)))*(1.0)))/(100)))+((((((825.711413030191)*(v28)))*(1.0)))/(100)))+((((((1004.658478)*(v29)))*(1.0)))/(100)))+((((((1241.92)*(v30)))*(1.0)))/(100)))+((((((941.547504)*(v31)))*(1.0)))/(100)))+((((((826.7537594)*(v32)))*(1.0)))/(100)))+((((((300)*(v33)))*(1.0)))/(100)))+((((((775.7532696)*(v34)))*(1.0)))/(100)))+((((((500)*(v35)))*(1.0)))/(100)))+((((((944.28)*(v36)))*(1.0)))/(100)))+((((((612.08)*(v37)))*(1.0)))/(100)))+((((((500)*(v38)))*(1.0)))/(100)))+((((((473.38)*(v39)))*(1.0)))/(100)))+((((((925.96)*(v40)))*(1.0)))/(100)))+((((((484.27)*(v41)))*(1.0)))/(100)))+((((((780.55)*(v42)))*(1.0)))/(100)))+((((((434.35)*(v43)))*(1.0)))/(100)))+((((((1228.65)*(v44)))*(1.0)))/(100)))+((((((300)*(v45)))*(1.0)))/(100)))+((((((500)*(v46)))*(1.0)))/(100)))+((((((964.82)*(v47)))*(1.0)))/(100)))+((((((586.286222115809)*(v48)))*(1.0)))/(100)))+((((((500)*(v49)))*(1.0)))/(100)))+((((((408.863293435074)*(v50)))*(1.0)))/(100)))+((((((925.96)*(v51)))*(1.0)))/(100)))+((((((405.863293435074)*(v52)))*(1.0)))/(100)))+((((((910.96)*(v53)))*(1.0)))/(100)))+((((((450.95)*(v54)))*(1.0)))/(100)))+((((((1242.28973578925)*(v55)))*(1.0)))/(100)))+((((((300)*(v56)))*(1.0)))/(100)))+((((((500)*(v57)))*(1.0)))/(100)))+((((((773.95)*(v58)))*(1.0)))/(100)))+((((((793.97)*(v59)))*(1.0)))/(100)))+((((((500)*(v60)))*(1.0)))/(100)))+((((((634.53)*(v61)))*(1.0)))/(100)))+((((((746.2)*(v62)))*(1.0)))/(100)))+((((((747.1)*(v63)))*(1.0)))/(100)))+((((((800)*(v64)))*(1.0)))/(100)))+((((((500)*(v65)))*(1.0)))/(100)))+((((((100)*(v66)))*(1.0)))/(100)))+((((((500)*(v67)))*(1.0)))/(100)))+((((((773.95)*(v68)))*(1.0)))/(100)))+((((((793.97)*(v69)))*(1.0)))/(100)))+((((((500)*(v70)))*(1.0)))/(100)))+((((((634.53)*(v71)))*(1.0)))/(100)))+((((((746.2)*(v72)))*(1.0)))/(100)))+((((((747.1)*(v73)))*(1.0)))/(100)))+((((((800)*(v74)))*(1.0)))/(100)))+((((((500)*(v75)))*(1.0)))/(100)))+((((((100)*(v76)))*(1.0)))/(100)))+((((((500)*(v77)))*(1.0)))/(100)))+((((((773.95)*(v78)))*(1.0)))/(100)))+((((((793.97)*(v79)))*(1.0)))/(100)))+((((((500)*(v80)))*(1.0)))/(100)))+((((((634.53)*(v81)))*(1.0)))/(100)))+((((((746.2)*(v82)))*(1.0)))/(100)))+((((((747.1)*(v83)))*(1.0)))/(100)))+((((((800)*(v84)))*(1.0)))/(100)))+((((((500)*(v85)))*(1.0)))/(100)))+((((((100)*(v86)))*(1.0)))/(100)))+((((((500)*(v87)))*(1.0)))/(100)))+((((((566.5)*(v88)))*(1.0)))/(100)))+((((((600.5)*(v89)))*(1.0)))/(100)))+((((((500)*(v90)))*(1.0)))/(100)))+((((((431.41)*(v91)))*(1.0)))/(100)))+((((((498.015344202792)*(v92)))*(1.0)))/(100)))+((((((466.846846846847)*(v93)))*(1.0)))/(100)))+((((((500)*(v94)))*(1.0)))/(100)))+((((((100)*(v95)))*(1.0)))/(100)))+((((((500)*(v96)))*(1.0)))/(100)))+((((((910.99486005)*(v97)))*(1.0)))/(100)))+((((((853.351)*(v98)))*(1.0)))/(100)))+((((((1039.8935286)*(v99)))*(1.0)))/(100)))+((((((770.6612881)*(v100)))*(1.0)))/(100)))+((((((500)*(v101)))*(1.0)))/(100)))+((((((500)*(v102)))*(1.0)))/(100)))+((((((826.195501934952)*(v103)))*(1.0)))/(100)))+((((((989.88716)*(v104)))*(1.0)))/(100)))+((((((1130.5194048)*(v105)))*(1.0)))/(100)))+((((((500)*(v106)))*(1.0)))/(100)))+((((((300)*(v107)))*(1.0)))/(100)))+((((((1069.8162944)*(v108)))*(1.0)))/(100)))+((((((1245.56)*(v109)))*(1.0)))/(100)))+((((((500)*(v110)))*(1.0)))/(100)))+((((((825.711413030191)*(v111)))*(1.0)))/(100)))+((((((1004.658478)*(v112)))*(1.0)))/(100)))+((((((1129.8570048)*(v113)))*(1.0)))/(100)))+((((((300)*(v114)))*(1.0)))/(100)))+((((((801.67994)*(v115)))*(1.0)))/(100)))+((((((834.2588482)*(v116)))*(1.0)))/(100)))+((((((991.6951428)*(v117)))*(1.0)))/(100)))+((((((500)*(v118)))*(1.0)))/(100)))+((((((886.96504)*(v119)))*(1.0)))/(100)))+((((((1049.00673)*(v120)))*(1.0)))/(100)))+((((((1059.7526526)*(v121)))*(1.0)))/(100)))+((((((1097.7898072)*(v122)))*(1.0)))/(100)))+((((((500)*(v123)))*(1.0)))/(100)))+((((((825.711413030191)*(v124)))*(1.0)))/(100)))+((((((1004.658478)*(v125)))*(1.0)))/(100)))+((((((1241.92)*(v126)))*(1.0)))/(100)))+((((((941.547504)*(v127)))*(1.0)))/(100)))+((((((826.7537594)*(v128)))*(1.0)))/(100)))+((((((300)*(v129)))*(1.0)))/(100)))+((((((775.7532696)*(v130)))*(1.0)))/(100)))+((((((500)*(v131)))*(1.0)))/(100)))+((((((944.28)*(v132)))*(1.0)))/(100)))+((((((612.08)*(v133)))*(1.0)))/(100)))+((((((500)*(v134)))*(1.0)))/(100)))+((((((473.38)*(v135)))*(1.0)))/(100)))+((((((925.96)*(v136)))*(1.0)))/(100)))+((((((484.27)*(v137)))*(1.0)))/(100)))+((((((780.55)*(v138)))*(1.0)))/(100)))+((((((434.35)*(v139)))*(1.0)))/(100)))+((((((1228.65)*(v140)))*(1.0)))/(100)))+((((((300)*(v141)))*(1.0)))/(100)))+((((((500)*(v142)))*(1.0)))/(100)))+((((((964.82)*(v143)))*(1.0)))/(100)))+((((((586.286222115809)*(v144)))*(1.0)))/(100)))+((((((500)*(v145)))*(1.0)))/(100)))+((((((408.863293435074)*(v146)))*(1.0)))/(100)))+((((((925.96)*(v147)))*(1.0)))/(100))))/((1-(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((v1)*(0)))/(100)))+((((v2)*(0)))/(100)))+((((v3)*(0)))/(100)))+((((v4)*(0)))/(100)))+((((v5)*(0)))/(100)))+((((v6)*(0)))/(100)))+((((v7)*(0)))/(100)))+((((v8)*(0)))/(100)))+((((v9)*(0)))/(100)))+((((v10)*(0)))/(100)))+((((v11)*(0)))/(100)))+((((v12)*(0)))/(100)))+((((v13)*(0)))/(100)))+((((v14)*(0)))/(100)))+((((v15)*(0)))/(100)))+((((v16)*(0)))/(100)))+((((v17)*(0)))/(100)))+((((v18)*(0)))/(100)))+((((v19)*(0)))/(100)))+((((v20)*(0)))/(100)))+((((v21)*(0)))/(100)))+((((v22)*(0)))/(100)))+((((v23)*(0)))/(100)))+((((v24)*(0)))/(100)))+((((v25)*(0)))/(100)))+((((v26)*(0)))/(100)))+((((v27)*(0)))/(100)))+((((v28)*(0)))/(100)))+((((v29)*(0)))/(100)))+((((v30)*(0)))/(100)))+((((v31)*(0)))/(100)))+((((v32)*(0)))/(100)))+((((v33)*(0)))/(100)))+((((v34)*(0)))/(100)))+((((v35)*(0)))/(100)))+((((v36)*(0)))/(100)))+((((v37)*(0)))/(100)))+((((v38)*(0)))/(100)))+((((v39)*(0)))/(100)))+((((v40)*(0)))/(100)))+((((v41)*(0)))/(100)))+((((v42)*(0)))/(100)))+((((v43)*(0)))/(100)))+((((v44)*(0)))/(100)))+((((v45)*(0)))/(100)))+((((v46)*(0)))/(100)))+((((v47)*(0)))/(100)))+((((v48)*(0)))/(100)))+((((v49)*(0)))/(100)))+((((v50)*(0)))/(100)))+((((v51)*(0)))/(100)))+((((v52)*(0)))/(100)))+((((v53)*(0)))/(100)))+((((v54)*(0)))/(100)))+((((v55)*(0)))/(100)))+((((v56)*(0)))/(100)))+((((v57)*(0)))/(100)))+((((v58)*(0)))/(100)))+((((v59)*(0)))/(100)))+((((v60)*(0)))/(100)))+((((v61)*(0)))/(100)))+((((v62)*(0)))/(100)))+((((v63)*(0)))/(100)))+((((v64)*(0)))/(100)))+((((v65)*(0)))/(100)))+((((v66)*(0)))/(100)))+((((v67)*(0)))/(100)))+((((v68)*(0)))/(100)))+((((v69)*(0)))/(100)))+((((v70)*(0)))/(100)))+((((v71)*(0)))/(100)))+((((v72)*(0)))/(100)))+((((v73)*(0)))/(100)))+((((v74)*(0)))/(100)))+((((v75)*(0)))/(100)))+((((v76)*(0)))/(100)))+((((v77)*(0)))/(100)))+((((v78)*(0)))/(100)))+((((v79)*(0)))/(100)))+((((v80)*(0)))/(100)))+((((v81)*(0)))/(100)))+((((v82)*(0)))/(100)))+((((v83)*(0)))/(100)))+((((v84)*(0)))/(100)))+((((v85)*(0)))/(100)))+((((v86)*(0)))/(100)))+((((v87)*(0)))/(100)))+((((v88)*(0)))/(100)))+((((v89)*(0)))/(100)))+((((v90)*(0)))/(100)))+((((v91)*(0)))/(100)))+((((v92)*(0)))/(100)))+((((v93)*(0)))/(100)))+((((v94)*(0)))/(100)))+((((v95)*(0)))/(100)))+((((v96)*(0)))/(100)))+((((v97)*(0)))/(100)))+((((v98)*(0)))/(100)))+((((v99)*(0)))/(100)))+((((v100)*(0)))/(100)))+((((v101)*(0)))/(100)))+((((v102)*(0)))/(100)))+((((v103)*(0)))/(100)))+((((v104)*(0)))/(100)))+((((v105)*(0)))/(100)))+((((v106)*(0)))/(100)))+((((v107)*(0)))/(100)))+((((v108)*(0)))/(100)))+((((v109)*(0)))/(100)))+((((v110)*(0)))/(100)))+((((v111)*(0)))/(100)))+((((v112)*(0)))/(100)))+((((v113)*(0)))/(100)))+((((v114)*(0)))/(100)))+((((v115)*(0)))/(100)))+((((v116)*(0)))/(100)))+((((v117)*(0)))/(100)))+((((v118)*(0)))/(100)))+((((v119)*(0)))/(100)))+((((v120)*(0)))/(100)))+((((v121)*(0)))/(100)))+((((v122)*(0)))/(100)))+((((v123)*(0)))/(100)))+((((v124)*(0)))/(100)))+((((v125)*(0)))/(100)))+((((v126)*(0)))/(100)))+((((v127)*(0)))/(100)))+((((v128)*(0)))/(100)))+((((v129)*(0)))/(100)))+((((v130)*(0)))/(100)))+((((v131)*(0)))/(100)))+((((v132)*(0)))/(100)))+((((v133)*(0)))/(100)))+((((v134)*(0)))/(100)))+((((v135)*(0)))/(100)))+((((v136)*(0)))/(100)))+((((v137)*(0)))/(100)))+((((v138)*(0)))/(100)))+((((v139)*(0)))/(100)))+((((v140)*(0)))/(100)))+((((v141)*(0)))/(100)))+((((v142)*(0)))/(100)))+((((v143)*(0)))/(100)))+((((v144)*(0)))/(100)))+((((v145)*(0)))/(100)))+((((v146)*(0)))/(100)))+((((v147)*(0)))/(100))))/(100))))))/((1-(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((((0)*(v1)))*(1.0)))/(100)))+((((((0)*(v2)))*(1.0)))/(100)))+((((((0)*(v3)))*(1.0)))/(100)))+((((((0)*(v4)))*(1.0)))/(100)))+((((((0)*(v5)))*(1.0)))/(100)))+((((((0)*(v6)))*(1.0)))/(100)))+((((((0)*(v7)))*(1.0)))/(100)))+((((((0)*(v8)))*(1.0)))/(100)))+((((((0)*(v9)))*(1.0)))/(100)))+((((((0)*(v10)))*(1.0)))/(100)))+((((((0)*(v11)))*(1.0)))/(100)))+((((((0)*(v12)))*(1.0)))/(100)))+((((((0)*(v13)))*(1.0)))/(100)))+((((((0)*(v14)))*(1.0)))/(100)))+((((((0)*(v15)))*(1.0)))/(100)))+((((((0)*(v16)))*(1.0)))/(100)))+((((((0)*(v17)))*(1.0)))/(100)))+((((((0)*(v18)))*(1.0)))/(100)))+((((((0)*(v19)))*(1.0)))/(100)))+((((((0)*(v20)))*(1.0)))/(100)))+((((((0)*(v21)))*(1.0)))/(100)))+((((((0)*(v22)))*(1.0)))/(100)))+((((((0)*(v23)))*(1.0)))/(100)))+((((((0)*(v24)))*(1.0)))/(100)))+((((((0)*(v25)))*(1.0)))/(100)))+((((((0)*(v26)))*(1.0)))/(100)))+((((((0)*(v27)))*(1.0)))/(100)))+((((((0)*(v28)))*(1.0)))/(100)))+((((((0)*(v29)))*(1.0)))/(100)))+((((((0)*(v30)))*(1.0)))/(100)))+((((((0)*(v31)))*(1.0)))/(100)))+((((((0)*(v32)))*(1.0)))/(100)))+((((((0)*(v33)))*(1.0)))/(100)))+((((((0)*(v34)))*(1.0)))/(100)))+((((((0)*(v35)))*(1.0)))/(100)))+((((((0)*(v36)))*(1.0)))/(100)))+((((((0)*(v37)))*(1.0)))/(100)))+((((((0)*(v38)))*(1.0)))/(100)))+((((((0)*(v39)))*(1.0)))/(100)))+((((((0)*(v40)))*(1.0)))/(100)))+((((((0)*(v41)))*(1.0)))/(100)))+((((((0)*(v42)))*(1.0)))/(100)))+((((((0)*(v43)))*(1.0)))/(100)))+((((((0)*(v44)))*(1.0)))/(100)))+((((((0)*(v45)))*(1.0)))/(100)))+((((((0)*(v46)))*(1.0)))/(100)))+((((((0)*(v47)))*(1.0)))/(100)))+((((((0)*(v48)))*(1.0)))/(100)))+((((((0)*(v49)))*(1.0)))/(100)))+((((((0)*(v50)))*(1.0)))/(100)))+((((((0)*(v51)))*(1.0)))/(100)))+((((((0)*(v52)))*(1.0)))/(100)))+((((((0)*(v53)))*(1.0)))/(100)))+((((((0)*(v54)))*(1.0)))/(100)))+((((((0)*(v55)))*(1.0)))/(100)))+((((((0)*(v56)))*(1.0)))/(100)))+((((((0)*(v57)))*(1.0)))/(100)))+((((((0)*(v58)))*(1.0)))/(100)))+((((((0)*(v59)))*(1.0)))/(100)))+((((((0)*(v60)))*(1.0)))/(100)))+((((((0)*(v61)))*(1.0)))/(100)))+((((((0)*(v62)))*(1.0)))/(100)))+((((((0)*(v63)))*(1.0)))/(100)))+((((((0)*(v64)))*(1.0)))/(100)))+((((((0)*(v65)))*(1.0)))/(100)))+((((((0)*(v66)))*(1.0)))/(100)))+((((((0)*(v67)))*(1.0)))/(100)))+((((((0)*(v68)))*(1.0)))/(100)))+((((((0)*(v69)))*(1.0)))/(100)))+((((((0)*(v70)))*(1.0)))/(100)))+((((((0)*(v71)))*(1.0)))/(100)))+((((((0)*(v72)))*(1.0)))/(100)))+((((((0)*(v73)))*(1.0)))/(100)))+((((((0)*(v74)))*(1.0)))/(100)))+((((((0)*(v75)))*(1.0)))/(100)))+((((((0)*(v76)))*(1.0)))/(100)))+((((((0)*(v77)))*(1.0)))/(100)))+((((((0)*(v78)))*(1.0)))/(100)))+((((((0)*(v79)))*(1.0)))/(100)))+((((((0)*(v80)))*(1.0)))/(100)))+((((((0)*(v81)))*(1.0)))/(100)))+((((((0)*(v82)))*(1.0)))/(100)))+((((((0)*(v83)))*(1.0)))/(100)))+((((((0)*(v84)))*(1.0)))/(100)))+((((((0)*(v85)))*(1.0)))/(100)))+((((((0)*(v86)))*(1.0)))/(100)))+((((((0)*(v87)))*(1.0)))/(100)))+((((((0)*(v88)))*(1.0)))/(100)))+((((((0)*(v89)))*(1.0)))/(100)))+((((((0)*(v90)))*(1.0)))/(100)))+((((((0)*(v91)))*(1.0)))/(100)))+((((((0)*(v92)))*(1.0)))/(100)))+((((((0)*(v93)))*(1.0)))/(100)))+((((((0)*(v94)))*(1.0)))/(100)))+((((((0)*(v95)))*(1.0)))/(100)))+((((((0)*(v96)))*(1.0)))/(100)))+((((((0)*(v97)))*(1.0)))/(100)))+((((((0)*(v98)))*(1.0)))/(100)))+((((((0)*(v99)))*(1.0)))/(100)))+((((((0)*(v100)))*(1.0)))/(100)))+((((((0)*(v101)))*(1.0)))/(100)))+((((((0)*(v102)))*(1.0)))/(100)))+((((((0)*(v103)))*(1.0)))/(100)))+((((((0)*(v104)))*(1.0)))/(100)))+((((((0)*(v105)))*(1.0)))/(100)))+((((((0)*(v106)))*(1.0)))/(100)))+((((((0)*(v107)))*(1.0)))/(100)))+((((((0)*(v108)))*(1.0)))/(100)))+((((((0)*(v109)))*(1.0)))/(100)))+((((((0)*(v110)))*(1.0)))/(100)))+((((((0)*(v111)))*(1.0)))/(100)))+((((((0)*(v112)))*(1.0)))/(100)))+((((((0)*(v113)))*(1.0)))/(100)))+((((((0)*(v114)))*(1.0)))/(100)))+((((((0)*(v115)))*(1.0)))/(100)))+((((((0)*(v116)))*(1.0)))/(100)))+((((((0)*(v117)))*(1.0)))/(100)))+((((((0)*(v118)))*(1.0)))/(100)))+((((((0)*(v119)))*(1.0)))/(100)))+((((((0)*(v120)))*(1.0)))/(100)))+((((((0)*(v121)))*(1.0)))/(100)))+((((((0)*(v122)))*(1.0)))/(100)))+((((((0)*(v123)))*(1.0)))/(100)))+((((((0)*(v124)))*(1.0)))/(100)))+((((((0)*(v125)))*(1.0)))/(100)))+((((((0)*(v126)))*(1.0)))/(100)))+((((((0)*(v127)))*(1.0)))/(100)))+((((((0)*(v128)))*(1.0)))/(100)))+((((((0)*(v129)))*(1.0)))/(100)))+((((((0)*(v130)))*(1.0)))/(100)))+((((((0)*(v131)))*(1.0)))/(100)))+((((((0)*(v132)))*(1.0)))/(100)))+((((((0)*(v133)))*(1.0)))/(100)))+((((((0)*(v134)))*(1.0)))/(100)))+((((((0)*(v135)))*(1.0)))/(100)))+((((((0)*(v136)))*(1.0)))/(100)))+((((((0)*(v137)))*(1.0)))/(100)))+((((((0)*(v138)))*(1.0)))/(100)))+((((((0)*(v139)))*(1.0)))/(100)))+((((((0)*(v140)))*(1.0)))/(100)))+((((((0)*(v141)))*(1.0)))/(100)))+((((((0)*(v142)))*(1.0)))/(100)))+((((((0)*(v143)))*(1.0)))/(100)))+((((((0)*(v144)))*(1.0)))/(100)))+((((((0)*(v145)))*(1.0)))/(100)))+((((((0)*(v146)))*(1.0)))/(100)))+((((((0)*(v147)))*(1.0)))/(100))))/((1-(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((v1)*(0)))/(100)))+((((v2)*(0)))/(100)))+((((v3)*(0)))/(100)))+((((v4)*(0)))/(100)))+((((v5)*(0)))/(100)))+((((v6)*(0)))/(100)))+((((v7)*(0)))/(100)))+((((v8)*(0)))/(100)))+((((v9)*(0)))/(100)))+((((v10)*(0)))/(100)))+((((v11)*(0)))/(100)))+((((v12)*(0)))/(100)))+((((v13)*(0)))/(100)))+((((v14)*(0)))/(100)))+((((v15)*(0)))/(100)))+((((v16)*(0)))/(100)))+((((v17)*(0)))/(100)))+((((v18)*(0)))/(100)))+((((v19)*(0)))/(100)))+((((v20)*(0)))/(100)))+((((v21)*(0)))/(100)))+((((v22)*(0)))/(100)))+((((v23)*(0)))/(100)))+((((v24)*(0)))/(100)))+((((v25)*(0)))/(100)))+((((v26)*(0)))/(100)))+((((v27)*(0)))/(100)))+((((v28)*(0)))/(100)))+((((v29)*(0)))/(100)))+((((v30)*(0)))/(100)))+((((v31)*(0)))/(100)))+((((v32)*(0)))/(100)))+((((v33)*(0)))/(1
 
 APM model error: string > 15000  characters
 Consider breaking up the line into multiple equations
 
 The may also be due to only using newline character CR
   instead of CR LF (for Windows) or LF (for MacOS/Linux) 
 To fix this problem, save APM file with appropriate newline characters
 
 STOPPING...
 


2018-12-06 14:16:57,763 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 688.6554766154684), (1, 1, 1)]
2018-12-06 14:16:57,763 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.706340560861192, 'sio2': 91.62838926863958, 'cost': 0.6652701704992253}
2018-12-06 14:17:00,474 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [0.0, 0.0, 0.0, 0.0, 0.0, 0.3007749, 0.0, 0.0, 0.0, 0.09524521, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.09524521, 0.0, 0.0, 0.0, 0.0, 6.113836, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5283736, 0.0, 0.09524521, 0.0, 0.0, 0.4559238, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5283736, 0.09524521, 0.0, 0.0, 0.0, 8.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.505148, 0.09524521, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.033219, 0.0, 0.6261399, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6261399, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.355869, 0.0, 0.6261399, 0.0, 0.0, 15.0, 0.0, 0.0, 14.84864, 40.0, 0.0, 0.6261399, 0.0, 0.0, 0.0, 0.0, 0.0, 5.953037, 0.3007749, 0.0, 0.0, 0.0, 0.09524521, 0.0]
2018-12-06 14:17:00,474 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['高宝印粉-13_1=[0.0]', '朝鲜粉-13_1=[0.0]', '伊朗粉-13_1=[0.0]', '海南铁粉-13_1=[0.0]', '高返-13_1=[0.0]', '铁泥-13_1=[0.3007749]', '过筛镍矿-13_1=[0.0]', '塞阿里昂粉-13_1=[0.0]', '巴西粗粉-13_1=[0.0]', '重力除尘灰-13_1=[0.09524521]', '水洗铁-13_1=[0.0]', '巴西粗粉-13_3=[0.0]', '还原铁粉-13_3=[0.0]', '高返-13_3=[0.0]', '过筛镍矿-13_3=[0.0]', '塞拉利昂粉-13_3=[0.0]', '巴西卡粉-13_3=[0.0]', '水洗铁-13_3=[0.0]', '马来西亚粉（高硅）-13_3=[0.0]', '印尼粉-13_3=[0.0]', '塞尔维亚粉-13_3=[0.0]', '重力除尘灰-13_3=[0.09524521]', '马来西亚粉（低硅）-13_3=[0.0]', 'PB粉-13_3=[0.0]', '高品澳粉-13_4=[0.0]', '巴西精粉-13_4=[0.0]', '高返-13_4=[6.113836]', '过筛镍矿-13_4=[0.0]', '塞拉利昂（破碎）-13_4=[0.0]', '还原铁粉-13_4=[0.0]', '赛尔维亚粉-13_4=[0.0]', '印尼粉-13_4=[0.0]', '水洗铁-13_4=[0.5283736]', '马来西亚-13_4=[0.0]', '重力除尘灰-13_4=[0.09524521]', '高品澳粉-13_5=[0.0]', '赛尔维亚粉-13_5=[0.0]', '高返-13_5=[0.4559238]', '过筛镍矿-13_5=[0.0]', '过筛塞拉利昂粉-13_5=[0.0]', '印尼粉-13_5=[0.0]', '委内瑞拉粉-13_5=[0.0]', '朝鲜铁粉-13_5=[0.0]', '还原铁粉-13_5=[0.0]', '水洗铁-13_5=[0.5283736]', '重力除尘灰-13_5=[0.09524521]', '高品澳粉-13_12=[0.0]', '赛尔维亚粉-13_12=[0.0]', '高返-13_12=[0.0]', '过筛镍矿-13_12=[8.0]', '过筛塞拉利昂粉-13_12=[0.0]', '印尼粉-13_12=[0.0]', '委内瑞拉粉-13_12=[0.0]', '朝鲜铁粉-13_12=[0.0]', '还原铁粉-13_12=[0.0]', '水洗铁-13_12=[1.505148]', '重力除尘灰-13_12=[0.09524521]', '巴西粗粉-14-1=[0.0]', '高品澳粉-14-1=[0.0]', '高返-14-1=[0.0]', '过筛镍矿-14-1=[0.0]', '塞拉利昂粉-14-1=[0.0]', 'FMG低品澳粉-14-1=[0.0]', '氧化铁-14-1=[2.033219]', '铁泥-14-1=[0.0]', '干渣粉-14-1=[0.6261399]', '重力除尘灰-14-1=[0.0]', '巴西粗粉-14-3=[0.0]', '高品澳粉-14-3=[0.0]', '高返-14-3=[0.0]', '过筛镍矿-14-3=[0.0]', '塞拉利昂粉-14-3=[0.0]', 'FMG低品澳粉-14-3=[0.0]', '氧化铁-14-3=[0.0]', '铁泥-14-3=[0.0]', '干渣粉-14-3=[0.6261399]', '重力除尘灰-14-3=[0.0]', '巴西粗粉-14-4=[0.0]', '高品澳粉-14-4=[0.0]', '高返-14-4=[0.0]', '过筛镍矿-14-4=[0.0]', '塞拉利昂粉-14-4=[0.0]', 'FMG低品澳粉-14-4=[0.0]', '氧化铁-14-4=[1.355869]', '铁泥-14-4=[0.0]', '干渣粉-14-4=[0.6261399]', '重力除尘灰-14-4=[0.0]', '巴西粗粉-14-4=[0.0]', '高品澳粉-14-12=[15.0]', '高返-14-12=[0.0]', '过筛镍矿-14-12=[0.0]', '塞拉利昂粉-14-12=[14.84864]', 'FMG低品澳粉-14-12=[40.0]', '铁泥-14-12=[0.0]', '干渣粉-14-12=[0.6261399]', '重力除尘灰-14-12=[0.0]', '高宝印粉-13_1=[0.0]', '朝鲜粉-13_1=[0.0]', '伊朗粉-13_1=[0.0]', '海南铁粉-13_1=[0.0]', '高返-13_1=[5.953037]', '铁泥-13_1=[0.3007749]', '过筛镍矿-13_1=[0.0]', '塞阿里昂粉-13_1=[0.0]', '巴西粗粉-13_1=[0.0]', '重力除尘灰-13_1=[0.09524521]', '水洗铁-13_1=[0.0]']
2018-12-06 14:17:00,479 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [55.900000299447726, 4.499999997771499, 2.8972648936300005, 0.9762018811297143, 3.0000001108419996, 0.163208839344, 0.07965211365620001, 0.16721795397999997]
2018-12-06 14:17:00,479 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=489.2533463189782, wet_price=489.2533463189782, obj_price=489.2533463189782)
2018-12-06 14:21:16,325 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 688.6554766154684), (1, 1, 1)]
2018-12-06 14:21:16,325 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.706340560861192, 'sio2': 91.62838926863958, 'cost': 0.6652701704992253}
2018-12-06 14:21:19,296 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5714713, 0.0, 0.0, 0.0, 0.0, 12.5228, 0.0, 0.0, 0.0, 0.0, 0.0, 2.921093, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.106094, 0.0, 2.504559, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 15.0, 0.0, 0.0, 14.77244, 40.0, 0.6015498, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
2018-12-06 14:21:19,296 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['高宝印粉-13_1=[0.0]', '朝鲜粉-13_1=[0.0]', '伊朗粉-13_1=[0.0]', '海南铁粉-13_1=[0.0]', '高返-13_1=[0.0]', '铁泥-13_1=[0.0]', '过筛镍矿-13_1=[0.0]', '塞阿里昂粉-13_1=[0.0]', '巴西粗粉-13_1=[0.0]', '重力除尘灰-13_1=[0.0]', '水洗铁-13_1=[0.0]', '巴西粗粉-13_3=[0.0]', '还原铁粉-13_3=[0.0]', '高返-13_3=[0.0]', '过筛镍矿-13_3=[0.0]', '塞拉利昂粉-13_3=[0.0]', '巴西卡粉-13_3=[0.0]', '水洗铁-13_3=[0.0]', '马来西亚粉（高硅）-13_3=[0.0]', '印尼粉-13_3=[0.0]', '塞尔维亚粉-13_3=[0.0]', '重力除尘灰-13_3=[0.5714713]', '马来西亚粉（低硅）-13_3=[0.0]', 'PB粉-13_3=[0.0]', '高品澳粉-13_4=[0.0]', '巴西精粉-13_4=[0.0]', '高返-13_4=[12.5228]', '过筛镍矿-13_4=[0.0]', '塞拉利昂（破碎）-13_4=[0.0]', '还原铁粉-13_4=[0.0]', '赛尔维亚粉-13_4=[0.0]', '印尼粉-13_4=[0.0]', '水洗铁-13_4=[2.921093]', '马来西亚-13_4=[0.0]', '重力除尘灰-13_4=[0.0]', '高品澳粉-13_5=[0.0]', '赛尔维亚粉-13_5=[0.0]', '高返-13_5=[0.0]', '过筛镍矿-13_5=[0.0]', '过筛塞拉利昂粉-13_5=[0.0]', '印尼粉-13_5=[0.0]', '委内瑞拉粉-13_5=[0.0]', '朝鲜铁粉-13_5=[0.0]', '还原铁粉-13_5=[0.0]', '水洗铁-13_5=[0.0]', '重力除尘灰-13_5=[0.0]', '高品澳粉-13_12=[0.0]', '赛尔维亚粉-13_12=[0.0]', '高返-13_12=[0.0]', '过筛镍矿-13_12=[8.0]', '过筛塞拉利昂粉-13_12=[0.0]', '印尼粉-13_12=[0.0]', '委内瑞拉粉-13_12=[0.0]', '朝鲜铁粉-13_12=[0.0]', '还原铁粉-13_12=[0.0]', '水洗铁-13_12=[0.0]', '重力除尘灰-13_12=[0.0]', '巴西粗粉-14-1=[0.0]', '高品澳粉-14-1=[0.0]', '高返-14-1=[0.0]', '过筛镍矿-14-1=[0.0]', '塞拉利昂粉-14-1=[0.0]', 'FMG低品澳粉-14-1=[0.0]', '氧化铁-14-1=[0.0]', '铁泥-14-1=[0.0]', '干渣粉-14-1=[0.0]', '重力除尘灰-14-1=[0.0]', '巴西粗粉-14-3=[0.0]', '高品澳粉-14-3=[0.0]', '高返-14-3=[0.0]', '过筛镍矿-14-3=[0.0]', '塞拉利昂粉-14-3=[0.0]', 'FMG低品澳粉-14-3=[0.0]', '氧化铁-14-3=[3.106094]', '铁泥-14-3=[0.0]', '干渣粉-14-3=[2.504559]', '重力除尘灰-14-3=[0.0]', '巴西粗粉-14-4=[0.0]', '高品澳粉-14-4=[0.0]', '高返-14-4=[0.0]', '过筛镍矿-14-4=[0.0]', '塞拉利昂粉-14-4=[0.0]', 'FMG低品澳粉-14-4=[0.0]', '氧化铁-14-4=[0.0]', '铁泥-14-4=[0.0]', '干渣粉-14-4=[0.0]', '重力除尘灰-14-4=[0.0]', '巴西粗粉-14-4=[0.0]', '高品澳粉-14-12=[15.0]', '高返-14-12=[0.0]', '过筛镍矿-14-12=[0.0]', '塞拉利昂粉-14-12=[14.77244]', 'FMG低品澳粉-14-12=[40.0]', '铁泥-14-12=[0.6015498]', '干渣粉-14-12=[0.0]', '重力除尘灰-14-12=[0.0]', '高宝印粉-13_1=[0.0]', '朝鲜粉-13_1=[0.0]', '伊朗粉-13_1=[0.0]', '海南铁粉-13_1=[0.0]', '高返-13_1=[0.0]', '铁泥-13_1=[0.0]', '过筛镍矿-13_1=[0.0]', '塞阿里昂粉-13_1=[0.0]', '巴西粗粉-13_1=[0.0]', '重力除尘灰-13_1=[0.0]', '水洗铁-13_1=[0.0]']
2018-12-06 14:21:19,301 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [55.9442962929389, 4.500000224838724, 2.8391505631889036, 0.969048296105924, 3.000000390621716, 0.16373342242325595, 0.07959962559116286, 0.16850523721890256]
2018-12-06 14:21:19,301 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=484.34342103552893, wet_price=488.7843205417263, obj_price=490.268612058988)
2018-12-06 14:21:19,456 __main__ mainTask ERROR = Traceback (most recent call last):
  File "C:/Users/sun/PycharmProjects/optimizationproblem/gekkoSolution/mainTask.py", line 42, in <module>
    lp.write_to_excel()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\gekkoSolution\gekkoProblem.py", line 91, in write_to_excel
    self.data.write_to_excel(excel_file, prices)
  File "C:\Users\sun\PycharmProjects\optimizationproblem\utils\excelParse.py", line 136, in write_to_excel
    writer.save()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\pandas\io\excel.py", line 1732, in save
    return self.book.close()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\xlsxwriter\workbook.py", line 306, in close
    self._store_workbook()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\xlsxwriter\workbook.py", line 655, in _store_workbook
    allowZip64=self.allow_zip64)
  File "C:\Users\sun\AppData\Local\Programs\Python\Python37-32\lib\zipfile.py", line 1182, in __init__
    self.fp = io.open(file, filemode)
PermissionError: [Errno 13] Permission denied: '../data/result.xlsx'

2018-12-06 14:21:34,078 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 688.6554766154684), (1, 1, 1)]
2018-12-06 14:21:34,079 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.706340560861192, 'sio2': 91.62838926863958, 'cost': 0.6652701704992253}
2018-12-06 14:21:37,028 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5714713, 0.0, 0.0, 0.0, 0.0, 12.5228, 0.0, 0.0, 0.0, 0.0, 0.0, 2.921093, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.106094, 0.0, 2.504559, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 15.0, 0.0, 0.0, 14.77244, 40.0, 0.6015498, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
2018-12-06 14:21:37,028 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['高宝印粉-13_1=[0.0]', '朝鲜粉-13_1=[0.0]', '伊朗粉-13_1=[0.0]', '海南铁粉-13_1=[0.0]', '高返-13_1=[0.0]', '铁泥-13_1=[0.0]', '过筛镍矿-13_1=[0.0]', '塞阿里昂粉-13_1=[0.0]', '巴西粗粉-13_1=[0.0]', '重力除尘灰-13_1=[0.0]', '水洗铁-13_1=[0.0]', '巴西粗粉-13_3=[0.0]', '还原铁粉-13_3=[0.0]', '高返-13_3=[0.0]', '过筛镍矿-13_3=[0.0]', '塞拉利昂粉-13_3=[0.0]', '巴西卡粉-13_3=[0.0]', '水洗铁-13_3=[0.0]', '马来西亚粉（高硅）-13_3=[0.0]', '印尼粉-13_3=[0.0]', '塞尔维亚粉-13_3=[0.0]', '重力除尘灰-13_3=[0.5714713]', '马来西亚粉（低硅）-13_3=[0.0]', 'PB粉-13_3=[0.0]', '高品澳粉-13_4=[0.0]', '巴西精粉-13_4=[0.0]', '高返-13_4=[12.5228]', '过筛镍矿-13_4=[0.0]', '塞拉利昂（破碎）-13_4=[0.0]', '还原铁粉-13_4=[0.0]', '赛尔维亚粉-13_4=[0.0]', '印尼粉-13_4=[0.0]', '水洗铁-13_4=[2.921093]', '马来西亚-13_4=[0.0]', '重力除尘灰-13_4=[0.0]', '高品澳粉-13_5=[0.0]', '赛尔维亚粉-13_5=[0.0]', '高返-13_5=[0.0]', '过筛镍矿-13_5=[0.0]', '过筛塞拉利昂粉-13_5=[0.0]', '印尼粉-13_5=[0.0]', '委内瑞拉粉-13_5=[0.0]', '朝鲜铁粉-13_5=[0.0]', '还原铁粉-13_5=[0.0]', '水洗铁-13_5=[0.0]', '重力除尘灰-13_5=[0.0]', '高品澳粉-13_12=[0.0]', '赛尔维亚粉-13_12=[0.0]', '高返-13_12=[0.0]', '过筛镍矿-13_12=[8.0]', '过筛塞拉利昂粉-13_12=[0.0]', '印尼粉-13_12=[0.0]', '委内瑞拉粉-13_12=[0.0]', '朝鲜铁粉-13_12=[0.0]', '还原铁粉-13_12=[0.0]', '水洗铁-13_12=[0.0]', '重力除尘灰-13_12=[0.0]', '巴西粗粉-14-1=[0.0]', '高品澳粉-14-1=[0.0]', '高返-14-1=[0.0]', '过筛镍矿-14-1=[0.0]', '塞拉利昂粉-14-1=[0.0]', 'FMG低品澳粉-14-1=[0.0]', '氧化铁-14-1=[0.0]', '铁泥-14-1=[0.0]', '干渣粉-14-1=[0.0]', '重力除尘灰-14-1=[0.0]', '巴西粗粉-14-3=[0.0]', '高品澳粉-14-3=[0.0]', '高返-14-3=[0.0]', '过筛镍矿-14-3=[0.0]', '塞拉利昂粉-14-3=[0.0]', 'FMG低品澳粉-14-3=[0.0]', '氧化铁-14-3=[3.106094]', '铁泥-14-3=[0.0]', '干渣粉-14-3=[2.504559]', '重力除尘灰-14-3=[0.0]', '巴西粗粉-14-4=[0.0]', '高品澳粉-14-4=[0.0]', '高返-14-4=[0.0]', '过筛镍矿-14-4=[0.0]', '塞拉利昂粉-14-4=[0.0]', 'FMG低品澳粉-14-4=[0.0]', '氧化铁-14-4=[0.0]', '铁泥-14-4=[0.0]', '干渣粉-14-4=[0.0]', '重力除尘灰-14-4=[0.0]', '巴西粗粉-14-4=[0.0]', '高品澳粉-14-12=[15.0]', '高返-14-12=[0.0]', '过筛镍矿-14-12=[0.0]', '塞拉利昂粉-14-12=[14.77244]', 'FMG低品澳粉-14-12=[40.0]', '铁泥-14-12=[0.6015498]', '干渣粉-14-12=[0.0]', '重力除尘灰-14-12=[0.0]', '高宝印粉-13_1=[0.0]', '朝鲜粉-13_1=[0.0]', '伊朗粉-13_1=[0.0]', '海南铁粉-13_1=[0.0]', '高返-13_1=[0.0]', '铁泥-13_1=[0.0]', '过筛镍矿-13_1=[0.0]', '塞阿里昂粉-13_1=[0.0]', '巴西粗粉-13_1=[0.0]', '重力除尘灰-13_1=[0.0]', '水洗铁-13_1=[0.0]']
2018-12-06 14:21:37,035 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [55.9442962929389, 4.500000224838724, 2.8391505631889036, 0.969048296105924, 3.000000390621716, 0.16373342242325595, 0.07959962559116286, 0.16850523721890256]
2018-12-06 14:21:37,035 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=484.34342103552893, wet_price=488.7843205417263, obj_price=490.268612058988)
2018-12-06 14:27:08,325 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 673.199557985234), (1, 1, 1)]
2018-12-06 14:27:08,325 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.705163684280964, 'sio2': 91.61439620610068, 'cost': 0.6804401096183589}
2018-12-06 14:27:15,160 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5714713, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.01, 1.01, 0.0, 0.0, 0.0, 0.0, 0.0, 12.5228, 8.434098, 0.0, 0.0, 0.0, 6.396422, 0.0, 0.0, 0.0, 0.0, 15.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.058813, 0.0, 2.504559, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 16.89029, 30.0, 0.6015498, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
2018-12-06 14:27:15,160 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['高宝印粉-13_1=[0.0]', '朝鲜粉-13_1=[0.0]', '伊朗粉-13_1=[0.0]', '海南铁粉-13_1=[0.0]', '高返-13_1=[0.0]', '铁泥-13_1=[0.0]', '过筛镍矿-13_1=[0.0]', '塞阿里昂粉-13_1=[0.0]', '巴西粗粉-13_1=[0.0]', '重力除尘灰-13_1=[0.0]', '水洗铁-13_1=[0.0]', '巴西粗粉-13_3=[0.0]', '还原铁粉-13_3=[0.0]', '高返-13_3=[0.0]', '过筛镍矿-13_3=[0.0]', '塞拉利昂粉-13_3=[0.0]', '巴西卡粉-13_3=[0.0]', '水洗铁-13_3=[0.0]', '马来西亚粉（高硅）-13_3=[0.0]', '印尼粉-13_3=[0.0]', '塞尔维亚粉-13_3=[0.0]', '重力除尘灰-13_3=[0.5714713]', '马来西亚粉（低硅）-13_3=[0.0]', 'PB粉-13_3=[0.0]', '高品澳粉-13_4=[0.0]', '巴西精粉-13_4=[0.0]', '高返-13_4=[0.0]', '过筛镍矿-13_4=[0.0]', '塞拉利昂（破碎）-13_4=[0.0]', '还原铁粉-13_4=[0.0]', '赛尔维亚粉-13_4=[0.0]', '印尼粉-13_4=[0.0]', '水洗铁-13_4=[0.0]', '马来西亚-13_4=[0.0]', '重力除尘灰-13_4=[0.0]', '高品澳粉-13_5=[0.0]', '赛尔维亚粉-13_5=[0.0]', '高返-13_5=[0.0]', '过筛镍矿-13_5=[0.0]', '过筛塞拉利昂粉-13_5=[0.0]', '印尼粉-13_5=[0.0]', '委内瑞拉粉-13_5=[0.01]', '朝鲜铁粉-13_5=[1.01]', '还原铁粉-13_5=[0.0]', '水洗铁-13_5=[0.0]', '重力除尘灰-13_5=[0.0]', '高品澳粉-13_12=[0.0]', '赛尔维亚粉-13_12=[0.0]', '高返-13_12=[12.5228]', '过筛镍矿-13_12=[8.434098]', '过筛塞拉利昂粉-13_12=[0.0]', '印尼粉-13_12=[0.0]', '委内瑞拉粉-13_12=[0.0]', '朝鲜铁粉-13_12=[6.396422]', '还原铁粉-13_12=[0.0]', '水洗铁-13_12=[0.0]', '重力除尘灰-13_12=[0.0]', '巴西粗粉-14-1=[0.0]', '高品澳粉-14-1=[15.0]', '高返-14-1=[0.0]', '过筛镍矿-14-1=[0.0]', '塞拉利昂粉-14-1=[0.0]', 'FMG低品澳粉-14-1=[0.0]', '氧化铁-14-1=[0.0]', '铁泥-14-1=[0.0]', '干渣粉-14-1=[0.0]', '重力除尘灰-14-1=[0.0]', '巴西粗粉-14-3=[0.0]', '高品澳粉-14-3=[0.0]', '高返-14-3=[0.0]', '过筛镍矿-14-3=[0.0]', '塞拉利昂粉-14-3=[0.0]', 'FMG低品澳粉-14-3=[0.0]', '氧化铁-14-3=[6.058813]', '铁泥-14-3=[0.0]', '干渣粉-14-3=[2.504559]', '重力除尘灰-14-3=[0.0]', '巴西粗粉-14-4=[0.0]', '高品澳粉-14-4=[0.0]', '高返-14-4=[0.0]', '过筛镍矿-14-4=[0.0]', '塞拉利昂粉-14-4=[0.0]', 'FMG低品澳粉-14-4=[0.0]', '氧化铁-14-4=[0.0]', '铁泥-14-4=[0.0]', '干渣粉-14-4=[0.0]', '重力除尘灰-14-4=[0.0]', '巴西粗粉-14-4=[0.0]', '高品澳粉-14-12=[0.0]', '高返-14-12=[0.0]', '过筛镍矿-14-12=[0.0]', '塞拉利昂粉-14-12=[16.89029]', 'FMG低品澳粉-14-12=[30.0]', '铁泥-14-12=[0.6015498]', '干渣粉-14-12=[0.0]', '重力除尘灰-14-12=[0.0]', '高宝印粉-13_1=[0.0]', '朝鲜粉-13_1=[0.0]', '伊朗粉-13_1=[0.0]', '海南铁粉-13_1=[0.0]', '高返-13_1=[0.0]', '铁泥-13_1=[0.0]', '过筛镍矿-13_1=[0.0]', '塞阿里昂粉-13_1=[0.0]', '巴西粗粉-13_1=[0.0]', '重力除尘灰-13_1=[0.0]', '水洗铁-13_1=[0.0]']
2018-12-06 14:27:15,170 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934]
2018-12-06 14:27:15,170 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=347.0065483299038, wet_price=348.27023387083494, obj_price=348.342379582306)
2018-12-06 14:27:15,321 __main__ mainTask ERROR = Traceback (most recent call last):
  File "C:/Users/sun/PycharmProjects/optimizationproblem/gekkoSolution/mainTask.py", line 42, in <module>
    lp.write_to_excel()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\gekkoSolution\gekkoProblem.py", line 91, in write_to_excel
    self.data.write_to_excel(excel_file, prices)
  File "C:\Users\sun\PycharmProjects\optimizationproblem\utils\excelParse.py", line 136, in write_to_excel
    writer.save()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\pandas\io\excel.py", line 1732, in save
    return self.book.close()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\xlsxwriter\workbook.py", line 306, in close
    self._store_workbook()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\xlsxwriter\workbook.py", line 655, in _store_workbook
    allowZip64=self.allow_zip64)
  File "C:\Users\sun\AppData\Local\Programs\Python\Python37-32\lib\zipfile.py", line 1182, in __init__
    self.fp = io.open(file, filemode)
PermissionError: [Errno 13] Permission denied: '../data/result.xlsx'

2018-12-06 14:27:30,921 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 673.199557985234), (1, 1, 1)]
2018-12-06 14:27:30,921 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.705163684280964, 'sio2': 91.61439620610068, 'cost': 0.6804401096183589}
2018-12-06 14:27:37,775 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5714713, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.01, 1.01, 0.0, 0.0, 0.0, 0.0, 0.0, 12.5228, 8.434098, 0.0, 0.0, 0.0, 6.396422, 0.0, 0.0, 0.0, 0.0, 15.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.058813, 0.0, 2.504559, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 16.89029, 30.0, 0.6015498, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
2018-12-06 14:27:37,776 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['高宝印粉-13_1=[0.0]', '朝鲜粉-13_1=[0.0]', '伊朗粉-13_1=[0.0]', '海南铁粉-13_1=[0.0]', '高返-13_1=[0.0]', '铁泥-13_1=[0.0]', '过筛镍矿-13_1=[0.0]', '塞阿里昂粉-13_1=[0.0]', '巴西粗粉-13_1=[0.0]', '重力除尘灰-13_1=[0.0]', '水洗铁-13_1=[0.0]', '巴西粗粉-13_3=[0.0]', '还原铁粉-13_3=[0.0]', '高返-13_3=[0.0]', '过筛镍矿-13_3=[0.0]', '塞拉利昂粉-13_3=[0.0]', '巴西卡粉-13_3=[0.0]', '水洗铁-13_3=[0.0]', '马来西亚粉（高硅）-13_3=[0.0]', '印尼粉-13_3=[0.0]', '塞尔维亚粉-13_3=[0.0]', '重力除尘灰-13_3=[0.5714713]', '马来西亚粉（低硅）-13_3=[0.0]', 'PB粉-13_3=[0.0]', '高品澳粉-13_4=[0.0]', '巴西精粉-13_4=[0.0]', '高返-13_4=[0.0]', '过筛镍矿-13_4=[0.0]', '塞拉利昂（破碎）-13_4=[0.0]', '还原铁粉-13_4=[0.0]', '赛尔维亚粉-13_4=[0.0]', '印尼粉-13_4=[0.0]', '水洗铁-13_4=[0.0]', '马来西亚-13_4=[0.0]', '重力除尘灰-13_4=[0.0]', '高品澳粉-13_5=[0.0]', '赛尔维亚粉-13_5=[0.0]', '高返-13_5=[0.0]', '过筛镍矿-13_5=[0.0]', '过筛塞拉利昂粉-13_5=[0.0]', '印尼粉-13_5=[0.0]', '委内瑞拉粉-13_5=[0.01]', '朝鲜铁粉-13_5=[1.01]', '还原铁粉-13_5=[0.0]', '水洗铁-13_5=[0.0]', '重力除尘灰-13_5=[0.0]', '高品澳粉-13_12=[0.0]', '赛尔维亚粉-13_12=[0.0]', '高返-13_12=[12.5228]', '过筛镍矿-13_12=[8.434098]', '过筛塞拉利昂粉-13_12=[0.0]', '印尼粉-13_12=[0.0]', '委内瑞拉粉-13_12=[0.0]', '朝鲜铁粉-13_12=[6.396422]', '还原铁粉-13_12=[0.0]', '水洗铁-13_12=[0.0]', '重力除尘灰-13_12=[0.0]', '巴西粗粉-14-1=[0.0]', '高品澳粉-14-1=[15.0]', '高返-14-1=[0.0]', '过筛镍矿-14-1=[0.0]', '塞拉利昂粉-14-1=[0.0]', 'FMG低品澳粉-14-1=[0.0]', '氧化铁-14-1=[0.0]', '铁泥-14-1=[0.0]', '干渣粉-14-1=[0.0]', '重力除尘灰-14-1=[0.0]', '巴西粗粉-14-3=[0.0]', '高品澳粉-14-3=[0.0]', '高返-14-3=[0.0]', '过筛镍矿-14-3=[0.0]', '塞拉利昂粉-14-3=[0.0]', 'FMG低品澳粉-14-3=[0.0]', '氧化铁-14-3=[6.058813]', '铁泥-14-3=[0.0]', '干渣粉-14-3=[2.504559]', '重力除尘灰-14-3=[0.0]', '巴西粗粉-14-4=[0.0]', '高品澳粉-14-4=[0.0]', '高返-14-4=[0.0]', '过筛镍矿-14-4=[0.0]', '塞拉利昂粉-14-4=[0.0]', 'FMG低品澳粉-14-4=[0.0]', '氧化铁-14-4=[0.0]', '铁泥-14-4=[0.0]', '干渣粉-14-4=[0.0]', '重力除尘灰-14-4=[0.0]', '巴西粗粉-14-4=[0.0]', '高品澳粉-14-12=[0.0]', '高返-14-12=[0.0]', '过筛镍矿-14-12=[0.0]', '塞拉利昂粉-14-12=[16.89029]', 'FMG低品澳粉-14-12=[30.0]', '铁泥-14-12=[0.6015498]', '干渣粉-14-12=[0.0]', '重力除尘灰-14-12=[0.0]', '高宝印粉-13_1=[0.0]', '朝鲜粉-13_1=[0.0]', '伊朗粉-13_1=[0.0]', '海南铁粉-13_1=[0.0]', '高返-13_1=[0.0]', '铁泥-13_1=[0.0]', '过筛镍矿-13_1=[0.0]', '塞阿里昂粉-13_1=[0.0]', '巴西粗粉-13_1=[0.0]', '重力除尘灰-13_1=[0.0]', '水洗铁-13_1=[0.0]']
2018-12-06 14:27:37,785 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934]
2018-12-06 14:27:37,785 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=347.0065483299038, wet_price=348.27023387083494, obj_price=348.342379582306)
2018-12-06 14:30:10,266 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 676.5978104567411), (1, 1, 1)]
2018-12-06 14:30:10,267 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.7054270211519045, 'sio2': 91.61752728149615, 'cost': 0.6770456973519412}
2018-12-06 14:30:17,579 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5714713, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.01, 1.01, 0.0, 0.0, 0.0, 0.0, 0.0, 12.5228, 8.434098, 0.0, 0.0, 0.0, 6.396422, 0.0, 0.0, 0.0, 0.0, 15.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.058813, 0.0, 2.504559, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 16.89029, 30.0, 0.6015498, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
2018-12-06 14:30:17,579 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['高宝印粉-13_1=[0.0]', '朝鲜粉-13_1=[0.0]', '伊朗粉-13_1=[0.0]', '海南铁粉-13_1=[0.0]', '高返-13_1=[0.0]', '铁泥-13_1=[0.0]', '过筛镍矿-13_1=[0.0]', '塞阿里昂粉-13_1=[0.0]', '巴西粗粉-13_1=[0.0]', '重力除尘灰-13_1=[0.0]', '水洗铁-13_1=[0.0]', '巴西粗粉-13_3=[0.0]', '还原铁粉-13_3=[0.0]', '高返-13_3=[0.0]', '过筛镍矿-13_3=[0.0]', '塞拉利昂粉-13_3=[0.0]', '巴西卡粉-13_3=[0.0]', '水洗铁-13_3=[0.0]', '马来西亚粉（高硅）-13_3=[0.0]', '印尼粉-13_3=[0.0]', '塞尔维亚粉-13_3=[0.0]', '重力除尘灰-13_3=[0.5714713]', '马来西亚粉（低硅）-13_3=[0.0]', 'PB粉-13_3=[0.0]', '高品澳粉-13_4=[0.0]', '巴西精粉-13_4=[0.0]', '高返-13_4=[0.0]', '过筛镍矿-13_4=[0.0]', '塞拉利昂（破碎）-13_4=[0.0]', '还原铁粉-13_4=[0.0]', '赛尔维亚粉-13_4=[0.0]', '印尼粉-13_4=[0.0]', '水洗铁-13_4=[0.0]', '马来西亚-13_4=[0.0]', '重力除尘灰-13_4=[0.0]', '高品澳粉-13_5=[0.0]', '赛尔维亚粉-13_5=[0.0]', '高返-13_5=[0.0]', '过筛镍矿-13_5=[0.0]', '过筛塞拉利昂粉-13_5=[0.0]', '印尼粉-13_5=[0.0]', '委内瑞拉粉-13_5=[0.01]', '朝鲜铁粉-13_5=[1.01]', '还原铁粉-13_5=[0.0]', '水洗铁-13_5=[0.0]', '重力除尘灰-13_5=[0.0]', '高品澳粉-13_12=[0.0]', '赛尔维亚粉-13_12=[0.0]', '高返-13_12=[12.5228]', '过筛镍矿-13_12=[8.434098]', '过筛塞拉利昂粉-13_12=[0.0]', '印尼粉-13_12=[0.0]', '委内瑞拉粉-13_12=[0.0]', '朝鲜铁粉-13_12=[6.396422]', '还原铁粉-13_12=[0.0]', '水洗铁-13_12=[0.0]', '重力除尘灰-13_12=[0.0]', '巴西粗粉-14-1=[0.0]', '高品澳粉-14-1=[15.0]', '高返-14-1=[0.0]', '过筛镍矿-14-1=[0.0]', '塞拉利昂粉-14-1=[0.0]', 'FMG低品澳粉-14-1=[0.0]', '氧化铁-14-1=[0.0]', '铁泥-14-1=[0.0]', '干渣粉-14-1=[0.0]', '重力除尘灰-14-1=[0.0]', '巴西粗粉-14-3=[0.0]', '高品澳粉-14-3=[0.0]', '高返-14-3=[0.0]', '过筛镍矿-14-3=[0.0]', '塞拉利昂粉-14-3=[0.0]', 'FMG低品澳粉-14-3=[0.0]', '氧化铁-14-3=[6.058813]', '铁泥-14-3=[0.0]', '干渣粉-14-3=[2.504559]', '重力除尘灰-14-3=[0.0]', '巴西粗粉-14-4=[0.0]', '高品澳粉-14-4=[0.0]', '高返-14-4=[0.0]', '过筛镍矿-14-4=[0.0]', '塞拉利昂粉-14-4=[0.0]', 'FMG低品澳粉-14-4=[0.0]', '氧化铁-14-4=[0.0]', '铁泥-14-4=[0.0]', '干渣粉-14-4=[0.0]', '重力除尘灰-14-4=[0.0]', '巴西粗粉-14-4=[0.0]', '高品澳粉-14-12=[0.0]', '高返-14-12=[0.0]', '过筛镍矿-14-12=[0.0]', '塞拉利昂粉-14-12=[16.89029]', 'FMG低品澳粉-14-12=[30.0]', '铁泥-14-12=[0.6015498]', '干渣粉-14-12=[0.0]', '重力除尘灰-14-12=[0.0]', '高宝印粉-13_1=[0.0]', '朝鲜粉-13_1=[0.0]', '伊朗粉-13_1=[0.0]', '海南铁粉-13_1=[0.0]', '高返-13_1=[0.0]', '铁泥-13_1=[0.0]', '过筛镍矿-13_1=[0.0]', '塞阿里昂粉-13_1=[0.0]', '巴西粗粉-13_1=[0.0]', '重力除尘灰-13_1=[0.0]', '水洗铁-13_1=[0.0]', '过筛镍矿-13_1=[0.0]', '塞阿里昂粉-13_1=[0.0]', '巴西粗粉-13_1=[0.0]', '重力除尘灰-13_1=[0.0]', '水洗铁-13_1=[0.0]']
2018-12-06 14:30:17,588 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934]
2018-12-06 14:30:17,588 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=347.0065483299038, wet_price=348.27023387083494, obj_price=348.342379582306)
2018-12-06 14:30:17,739 __main__ mainTask ERROR = Traceback (most recent call last):
  File "C:/Users/sun/PycharmProjects/optimizationproblem/gekkoSolution/mainTask.py", line 42, in <module>
    lp.write_to_excel()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\gekkoSolution\gekkoProblem.py", line 91, in write_to_excel
    self.data.write_to_excel(excel_file, prices)
  File "C:\Users\sun\PycharmProjects\optimizationproblem\utils\excelParse.py", line 136, in write_to_excel
    writer.save()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\pandas\io\excel.py", line 1732, in save
    return self.book.close()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\xlsxwriter\workbook.py", line 306, in close
    self._store_workbook()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\xlsxwriter\workbook.py", line 655, in _store_workbook
    allowZip64=self.allow_zip64)
  File "C:\Users\sun\AppData\Local\Programs\Python\Python37-32\lib\zipfile.py", line 1182, in __init__
    self.fp = io.open(file, filemode)
PermissionError: [Errno 13] Permission denied: '../data/result.xlsx'

2018-12-06 14:31:56,859 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 675.6700515924789), (1, 1, 1)]
2018-12-06 14:31:56,859 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.705355388488448, 'sio2': 91.61667556912765, 'cost': 0.6779690423839074}
2018-12-06 14:31:57,063 __main__ mainTask ERROR = Traceback (most recent call last):
  File "C:/Users/sun/PycharmProjects/optimizationproblem/gekkoSolution/mainTask.py", line 37, in <module>
    lp.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\gekkoSolution\gekkoProblem.py", line 46, in solve
    self.prob.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\gekko\gekko.py", line 682, in solve
    raise Exception(apm_error)
Exception:  @error: Max Equation Length
 Error with line number:  126
 i0=(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((((910.99486005)*(v1)))*(0.94)))/(100)))+((((((853.351)*(v2)))*(0.927)))/(100)))+((((((1039.8935286)*(v3)))*(1.0)))/(100)))+((((((770.6612881)*(v4)))*(0.685)))/(100)))+((((((500)*(v5)))*(0.8888)))/(100)))+((((((500)*(v6)))*(0.92)))/(100)))+((((((826.195501934952)*(v7)))*(0.8)))/(100)))+((((((989.88716)*(v8)))*(0.94)))/(100)))+((((((1130.5194048)*(v9)))*(0.9750833333333333)))/(100)))+((((((500)*(v10)))*(0.94)))/(100)))+((((((300)*(v11)))*(0.927)))/(100)))+((((((1069.8162944)*(v12)))*(1.0)))/(100)))+((((((1245.56)*(v13)))*(0.685)))/(100)))+((((((500)*(v14)))*(0.8888)))/(100)))+((((((825.711413030191)*(v15)))*(0.92)))/(100)))+((((((1004.658478)*(v16)))*(0.8)))/(100)))+((((((1129.8570048)*(v17)))*(0.94)))/(100)))+((((((300)*(v18)))*(0.9750833333333333)))/(100)))+((((((801.67994)*(v19)))*(0.94)))/(100)))+((((((834.2588482)*(v20)))*(0.927)))/(100)))+((((((991.6951428)*(v21)))*(1.0)))/(100)))+((((((500)*(v22)))*(0.685)))/(100)))+((((((886.96504)*(v23)))*(0.8888)))/(100)))+((((((1049.00673)*(v24)))*(0.92)))/(100)))+((((((1059.7526526)*(v25)))*(0.8)))/(100)))+((((((1097.7898072)*(v26)))*(0.94)))/(100)))+((((((500)*(v27)))*(0.9750833333333333)))/(100)))+((((((825.711413030191)*(v28)))*(0.94)))/(100)))+((((((1004.658478)*(v29)))*(0.927)))/(100)))+((((((1241.92)*(v30)))*(1.0)))/(100)))+((((((941.547504)*(v31)))*(0.685)))/(100)))+((((((826.7537594)*(v32)))*(0.8888)))/(100)))+((((((300)*(v33)))*(0.92)))/(100)))+((((((775.7532696)*(v34)))*(0.8)))/(100)))+((((((500)*(v35)))*(0.94)))/(100)))+((((((944.28)*(v36)))*(0.9750833333333333)))/(100)))+((((((612.08)*(v37)))*(1.0)))/(100)))+((((((500)*(v38)))*(1.0)))/(100)))+((((((473.38)*(v39)))*(1.0)))/(100)))+((((((925.96)*(v40)))*(1.0)))/(100)))+((((((484.27)*(v41)))*(1.0)))/(100)))+((((((780.55)*(v42)))*(1.0)))/(100)))+((((((434.35)*(v43)))*(1.0)))/(100)))+((((((1228.65)*(v44)))*(1.0)))/(100)))+((((((300)*(v45)))*(1.0)))/(100)))+((((((500)*(v46)))*(1.0)))/(100)))+((((((964.82)*(v47)))*(1.0)))/(100)))+((((((586.286222115809)*(v48)))*(1.0)))/(100)))+((((((500)*(v49)))*(1.0)))/(100)))+((((((0)*(v50)))*(1.0)))/(100)))+((((((925.96)*(v51)))*(1.0)))/(100)))+((((((405.863293435074)*(v52)))*(1.0)))/(100)))+((((((910.96)*(v53)))*(1.0)))/(100)))+((((((0)*(v54)))*(1.0)))/(100)))+((((((1242.28973578925)*(v55)))*(1.0)))/(100)))+((((((300)*(v56)))*(1.0)))/(100)))+((((((500)*(v57)))*(1.0)))/(100)))+((((((773.95)*(v58)))*(1.0)))/(100)))+((((((0)*(v59)))*(1.0)))/(100)))+((((((500)*(v60)))*(1.0)))/(100)))+((((((634.53)*(v61)))*(1.0)))/(100)))+((((((746.2)*(v62)))*(1.0)))/(100)))+((((((747.1)*(v63)))*(1.0)))/(100)))+((((((800)*(v64)))*(1.0)))/(100)))+((((((500)*(v65)))*(1.0)))/(100)))+((((((100)*(v66)))*(1.0)))/(100)))+((((((500)*(v67)))*(1.0)))/(100)))+((((((773.95)*(v68)))*(1.0)))/(100)))+((((((793.97)*(v69)))*(1.0)))/(100)))+((((((500)*(v70)))*(1.0)))/(100)))+((((((634.53)*(v71)))*(1.0)))/(100)))+((((((746.2)*(v72)))*(1.0)))/(100)))+((((((747.1)*(v73)))*(1.0)))/(100)))+((((((800)*(v74)))*(1.0)))/(100)))+((((((500)*(v75)))*(0.94)))/(100)))+((((((100)*(v76)))*(0.927)))/(100)))+((((((500)*(v77)))*(1.0)))/(100)))+((((((773.95)*(v78)))*(0.685)))/(100)))+((((((793.97)*(v79)))*(0.8888)))/(100)))+((((((500)*(v80)))*(0.92)))/(100)))+((((((634.53)*(v81)))*(0.8)))/(100)))+((((((746.2)*(v82)))*(0.94)))/(100)))+((((((747.1)*(v83)))*(0.9750833333333333)))/(100)))+((((((800)*(v84)))*(1.0)))/(100)))+((((((500)*(v85)))*(1.0)))/(100)))+((((((100)*(v86)))*(1.0)))/(100)))+((((((500)*(v87)))*(1.0)))/(100)))+((((((566.5)*(v88)))*(1.0)))/(100)))+((((((600.5)*(v89)))*(1.0)))/(100)))+((((((500)*(v90)))*(1.0)))/(100)))+((((((431.41)*(v91)))*(1.0)))/(100)))+((((((498.015344202792)*(v92)))*(1.0)))/(100)))+((((((466.846846846847)*(v93)))*(1.0)))/(100)))+((((((500)*(v94)))*(1.0)))/(100)))+((((((100)*(v95)))*(1.0)))/(100)))+((((((500)*(v96)))*(1.0)))/(100)))+((((((910.99486005)*(v97)))*(1.0)))/(100)))+((((((853.351)*(v98)))*(1.0)))/(100)))+((((((1039.8935286)*(v99)))*(0.94)))/(100)))+((((((770.6612881)*(v100)))*(0.927)))/(100)))+((((((500)*(v101)))*(1.0)))/(100)))+((((((500)*(v102)))*(0.685)))/(100)))+((((((826.195501934952)*(v103)))*(0.8888)))/(100)))+((((((989.88716)*(v104)))*(0.92)))/(100)))+((((((1130.5194048)*(v105)))*(0.8)))/(100)))+((((((500)*(v106)))*(0.94)))/(100)))+((((((300)*(v107)))*(0.9750833333333333)))/(100)))+((((((826.195501934952)*(v108)))*(0.8888)))/(100)))+((((((989.88716)*(v109)))*(0.92)))/(100)))+((((((1130.5194048)*(v110)))*(0.8)))/(100)))+((((((500)*(v111)))*(0.94)))/(100)))+((((((300)*(v112)))*(0.9750833333333333)))/(100)))+((((((300)*(v113)))*(0.9750833333333333)))/(100)))+((((((826.195501934952)*(v114)))*(0.8888)))/(100)))+((((((989.88716)*(v115)))*(0.92)))/(100)))+((((((1130.5194048)*(v116)))*(0.8)))/(100)))+((((((500)*(v117)))*(0.94)))/(100)))+((((((300)*(v118)))*(0.9750833333333333)))/(100)))+((((((1130.5194048)*(v119)))*(0.8)))/(100)))+((((((500)*(v120)))*(0.94)))/(100)))+((((((300)*(v121)))*(0.9750833333333333)))/(100))))/((1-(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((v1)*(6)))/(100)))+((((v2)*(7.3)))/(100)))+((((v3)*(0)))/(100)))+((((v4)*(31.5)))/(100)))+((((v5)*(11.12)))/(100)))+((((v6)*(8)))/(100)))+((((v7)*(20)))/(100)))+((((v8)*(6)))/(100)))+((((v9)*(2.49166666666667)))/(100)))+((((v10)*(6)))/(100)))+((((v11)*(7.3)))/(100)))+((((v12)*(0)))/(100)))+((((v13)*(31.5)))/(100)))+((((v14)*(11.12)))/(100)))+((((v15)*(8)))/(100)))+((((v16)*(20)))/(100)))+((((v17)*(6)))/(100)))+((((v18)*(2.49166666666667)))/(100)))+((((v19)*(6)))/(100)))+((((v20)*(7.3)))/(100)))+((((v21)*(0)))/(100)))+((((v22)*(31.5)))/(100)))+((((v23)*(11.12)))/(100)))+((((v24)*(8)))/(100)))+((((v25)*(20)))/(100)))+((((v26)*(6)))/(100)))+((((v27)*(2.49166666666667)))/(100)))+((((v28)*(6)))/(100)))+((((v29)*(7.3)))/(100)))+((((v30)*(0)))/(100)))+((((v31)*(31.5)))/(100)))+((((v32)*(11.12)))/(100)))+((((v33)*(8)))/(100)))+((((v34)*(20)))/(100)))+((((v35)*(6)))/(100)))+((((v36)*(2.49166666666667)))/(100)))+((((v37)*(0)))/(100)))+((((v38)*(0)))/(100)))+((((v39)*(0)))/(100)))+((((v40)*(0)))/(100)))+((((v41)*(0)))/(100)))+((((v42)*(0)))/(100)))+((((v43)*(0)))/(100)))+((((v44)*(0)))/(100)))+((((v45)*(0)))/(100)))+((((v46)*(0)))/(100)))+((((v47)*(0)))/(100)))+((((v48)*(0)))/(100)))+((((v49)*(0)))/(100)))+((((v50)*(0)))/(100)))+((((v51)*(0)))/(100)))+((((v52)*(0)))/(100)))+((((v53)*(0)))/(100)))+((((v54)*(0)))/(100)))+((((v55)*(0)))/(100)))+((((v56)*(0)))/(100)))+((((v57)*(0)))/(100)))+((((v58)*(0)))/(100)))+((((v59)*(0)))/(100)))+((((v60)*(0)))/(100)))+((((v61)*(0)))/(100)))+((((v62)*(0)))/(100)))+((((v63)*(0)))/(100)))+((((v64)*(0)))/(100)))+((((v65)*(0)))/(100)))+((((v66)*(0)))/(100)))+((((v67)*(0)))/(100)))+((((v68)*(0)))/(100)))+((((v69)*(0)))/(100)))+((((v70)*(0)))/(100)))+((((v71)*(0)))/(100)))+((((v72)*(0)))/(100)))+((((v73)*(0)))/(100)))+((((v74)*(0)))/(100)))+((((v75)*(6)))/(100)))+((((v76)*(7.3)))/(100)))+((((v77)*(0)))/(100)))+((((v78)*(31.5)))/(100)))+((((v79)*(11.12)))/(100)))+((((v80)*(8)))/(100)))+((((v81)*(20)))/(100)))+((((v82)*(6)))/(100)))+((((v83)*(2.49166666666667)))/(100)))+((((v84)*(0)))/(100)))+((((v85)*(0)))/(100)))+((((v86)*(0)))/(100)))+((((v87)*(0)))/(100)))+((((v88)*(0)))/(100)))+((((v89)*(0)))/(100)))+((((v90)*(0)))/(100)))+((((v91)*(0)))/(100)))+((((v92)*(0)))/(100)))+((((v93)*(0)))/(100)))+((((v94)*(0)))/(100)))+((((v95)*(0)))/(100)))+((((v96)*(0)))/(100)))+((((v97)*(0)))/(100)))+((((v98)*(0)))/(100)))+((((v99)*(6)))/(100)))+((((v100)*(7.3)))/(100)))+((((v101)*(0)))/(100)))+((((v102)*(31.5)))/(100)))+((((v103)*(11.12)))/(100)))+((((v104)*(8)))/(100)))+((((v105)*(20)))/(100)))+((((v106)*(6)))/(100)))+((((v107)*(2.49166666666667)))/(100)))+((((v108)*(11.12)))/(100)))+((((v109)*(8)))/(100)))+((((v110)*(20)))/(100)))+((((v111)*(6)))/(100)))+((((v112)*(2.49166666666667)))/(100)))+((((v113)*(2.49166666666667)))/(100)))+((((v114)*(11.12)))/(100)))+((((v115)*(8)))/(100)))+((((v116)*(20)))/(100)))+((((v117)*(6)))/(100)))+((((v118)*(2.49166666666667)))/(100)))+((((v119)*(20)))/(100)))+((((v120)*(6)))/(100)))+((((v121)*(2.49166666666667)))/(100))))/(100))))))/((1-(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((((2.63)*(v1)))*(0.94)))/(100)))+((((((6)*(v2)))*(0.927)))/(100)))+((((((1)*(v3)))*(1.0)))/(100)))+((((((13.63)*(v4)))*(0.685)))/(100)))+((((((9.5)*(v5)))*(0.8888)))/(100)))+((((((9)*(v6)))*(0.92)))/(100)))+((((((4.36)*(v7)))*(0.8)))/(100)))+((((((2)*(v8)))*(0.94)))/(100)))+((((((31.3234615384615)*(v9)))*(0.9750833333333333)))/(100)))+((((((2.63)*(v10)))*(0.94)))/(100)))+((((((6)*(v11)))*(0.927)))/(100)))+((((((1)*(v12)))*(1.0)))/(100)))+((((((13.63)*(v13)))*(0.685)))/(100)))+((((((9.5)*(v14)))*(0.8888)))/(100)))+((((((9)*(v15)))*(0.92)))/(100)))+((((((4.36)*(v16)))*(0.8)))/(100)))+((((((2)*(v17)))*(0.94)))/(100)))+((((((31.3234615384615)*(v18)))*(0.9750833333333333)))/(100)))+((((((0)*(v19)))*(0.94)))/(100)))+((((((0)*(v20)))*(0.927)))/(100)))+((((((0)*(v21)))*(1.0)))/(100)))+((((((0)*(v22)))*(0.685)))/(100)))+((((((0)*(v23)))*(0.8888)))/(100)))+((((((0)*(v24)))*(0.92)))/(100)))+((((((0)*(v25)))*(0.8)))/(100)))+((((((0)*(v26)))*(0.94)))/(100)))+((((((0)*(v27)))*(0.9750833333333333)))/(100)))+((((((0)*(v28)))*(0.94)))/(100)))+((((((0)*(v29)))*(0.927)))/(100)))+((((((0)*(v30)))*(1.0)))/(100)))+((((((0)*(v31)))*(0.685)))/(100)))+((((((0)*(v32)))*(0.8888)))/(100)))+((((((0)*(v33)))*(0.92)))/(100)))+((((((0)*(v34)))*(0.8)))/(100)))+((((((0)*(v35)))*(0.94)))/(100)))+((((((2.63)*(v36)))*(0.9750833333333333)))/(100)))+((((((6)*(v37)))*(1.0)))/(100)))+((((((1)*(v38)))*(1.0)))/(100)))+((((((13.63)*(v39)))*(1.0)))/(100)))+((((((9.5)*(v40)))*(1.0)))/(100)))+((((((9)*(v41)))*(1.0)))/(100)))+((((((4.36)*(v42)))*(1.0)))/(100)))+((((((2)*(v43)))*(1.0)))/(100)))+((((((31.3234615384615)*(v44)))*(1.0)))/(100)))+((((((0)*(v45)))*(1.0)))/(100)))+((((((0)*(v46)))*(1.0)))/(100)))+((((((0)*(v47)))*(1.0)))/(100)))+((((((0)*(v48)))*(1.0)))/(100)))+((((((0)*(v49)))*(1.0)))/(100)))+((((((0)*(v50)))*(1.0)))/(100)))+((((((0)*(v51)))*(1.0)))/(100)))+((((((0)*(v52)))*(1.0)))/(100)))+((((((0)*(v53)))*(1.0)))/(100)))+((((((0)*(v54)))*(1.0)))/(100)))+((((((0)*(v55)))*(1.0)))/(100)))+((((((0)*(v56)))*(1.0)))/(100)))+((((((0)*(v57)))*(1.0)))/(100)))+((((((0)*(v58)))*(1.0)))/(100)))+((((((0)*(v59)))*(1.0)))/(100)))+((((((2.63)*(v60)))*(1.0)))/(100)))+((((((6)*(v61)))*(1.0)))/(100)))+((((((1)*(v62)))*(1.0)))/(100)))+((((((13.63)*(v63)))*(1.0)))/(100)))+((((((9.5)*(v64)))*(1.0)))/(100)))+((((((9)*(v65)))*(1.0)))/(100)))+((((((4.36)*(v66)))*(1.0)))/(100)))+((((((2)*(v67)))*(1.0)))/(100)))+((((((31.3234615384615)*(v68)))*(1.0)))/(100)))+((((((0)*(v69)))*(1.0)))/(100)))+((((((0)*(v70)))*(1.0)))/(100)))+((((((0)*(v71)))*(1.0)))/(100)))+((((((0)*(v72)))*(1.0)))/(100)))+((((((0)*(v73)))*(1.0)))/(100)))+((((((0)*(v74)))*(1.0)))/(100)))+((((((0)*(v75)))*(0.94)))/(100)))+((((((0)*(v76)))*(0.927)))/(100)))+((((((0)*(v77)))*(1.0)))/(100)))+((((((0)*(v78)))*(0.685)))/(100)))+((((((0)*(v79)))*(0.8888)))/(100)))+((((((0)*(v80)))*(0.92)))/(100)))+((((((0)*(v81)))*(0.8)))/(100)))+((((((2.63)*(v82)))*(0.94)))/(100)))+((((((6)*(v83)))*(0.9750833333333333)))/(100)))+((((((1)*(v84)))*(1.0)))/(100)))+((((((13.63)*(v85)))*(1.0)))/(100)))+((((((9.5)*(v86)))*(1.0)))/(100)))+((((((9)*(v87)))*(1.0)))/(100)))+((((((4.36)*(v88)))*(1.0)))/(100)))+((((((2)*(v89)))*(1.0)))/(100)))+((((((31.3234615384615)*(v90)))*(1.0)))/(100)))+((((((0)*(v91)))*(1.0)))/(100)))+((((((0)*(v92)))*(1.0)))/(100)))+((((((0)*(v93)))*(1.0)))/(100)))+((((((0)*(v94)))*(1.0)))/(100)))+((((((0)*(v95)))*(1.0)))/(100)))+((((((2.63)*(v96)))*(1.0)))/(100)))+((((((6)*(v97)))*(1.0)))/(100)))+((((((1)*(v98)))*(1.0)))/(100)))+((((((13.63)*(v99)))*(0.94)))/(100)))+((((((9.5)*(v100)))*(0.927)))/(100)))+((((((9)*(v101)))*(1.0)))/(100)))+((((((4.36)*(v102)))*(0.685)))/(100)))+((((((2)*(v103)))*(0.8888)))/(100)))+((((((31.3234615384615)*(v104)))*(0.92)))/(100)))+((((((0)*(v105)))*(0.8)))/(100)))+((((((0)*(v106)))*(0.94)))/(100)))+((((((0)*(v107)))*(0.9750833333333333)))/(100)))+((((((2)*(v108)))*(0.8888)))/(100)))+((((((31.3234615384615)*(v109)))*(0.92)))/(100)))+((((((0)*(v110)))*(0.8)))/(100)))+((((((0)*(v111)))*(0.94)))/(100)))+((((((0)*(v112)))*(0.9750833333333333)))/(100)))+((((((0)*(v113)))*(0.9750833333333333)))/(100)))+((((((2)*(v114)))*(0.8888)))/(100)))+((((((31.3234615384615)*(v115)))*(0.92)))/(100)))+((((((0)*(v116)))*(0.8)))/(100)))+((((((0)*(v117)))*(0.94)))/(100)))+((((((0)*(v118)))*(0.9750833333333333)))/(100)))+((((((0)*(v119)))*(0.8)))/(100)))+((((((0)*(v120)))*(0.94)))/(100)))+((((((0)*(v121)))*(0.9750833333333333)))/(100))))/((1-(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((v1)*(6)))/(100)))+((((v2)*(7.3)))/(100)))+((((v3)*(0)))/(100)))+((((v4)*(31.5)))/(100)))+((((v5)*(11.12)))/(100)))+((((v6)*(8)))/(100)))+((((v7)*(20)))/(100)))+((((v8)*(6)))/(100)))+((((v9)*(2.49166666666667)))/(100)))+((((v10)*(6)))/(100)))+((((v11)*(7.3)))/(100)))+((((v12)*(0)))/(100)))+((((v13)*(31.5)))/(100)))+((((v14)*(11.12)))/(100)))+((((v15)*(8)))/(100)))+((((v16)*(20)))/(100)))+((((v17)*(6)))/(100)))+((((v18)*(2.49166666666667)))/(100)))+((((v19)*(6)))/(100)))+((((v20)*(7.3)))/(100)))+((((v21)*(0)))/(100)))+((((v22)*(31.5)))/(100)))+((((v23)*(11.12)))/(100)))+((((v24)*(8)))/(100)))+((((v25)*(20)))/(100)))+((((v26)*(6)))/(100)))+((((v27)*(2.49166666666667)))/(100)))+((((v28)*(6)))/(100)))+((((v29)*(7.3)))/(100)))+((((v30)*(0)))/(100)))+((((v31)*(31.5)))/(100)))+((((v32)*(11.12)))/(100)))+((((v33)*(8)))/(100)))+((((v34)*(20)))/(100)))+((((v35)*(6)))/(100)))+((((v36)*(2.49166666666667)))/(100)))+((((v37)*(0)))/(100)))+((((v38)*(0)))/(100)))+((((v39)*(0)))/(100)))+((((v40)*(0)))/(100)))+((((v41)*(0)))/(100)))+((((v42)*(0)))/(100)))+((((v43)*(0)))/(100)))+((((v44)*(0)))/(100)))+((((v45)*(0)))/(100)))+((((v46)*(0)))/(100)))+((((v47)*(0)))/(100)))+((((v48)*(0)))/(100)))+((((v49)*(0)))/(100)))+((((v50)*(0)))/(100)))+((((v51)*(0)))/(100)))+((((v52)*(0)))/(100)))+((((v53)*(0)))/(100)))+((((v54)*(0)))/(100)))+((((v55)*(0)))/(100)))+((((v56)*(0)))/(100)))+((((v57)*(0)))/(100)))+((((v58)*(0)))/(100)))+((((v59)*(0)))/(100)))+((((v60)*(0)))/(100)))+((((v61)*(0)))/(100)))+((((v62)*(0)))/(100)))+((((v63)*(0)))/(100)))+((((v64)*(0)))/(100)))+((((v65)*(0)))/(100)))+((((v66)*(0)))/(100)))+((((v67)*(0)))/(100)))+((((v68)*(0)))/(100)))+((((v69)*(0)))/(100)))+((((v70)*(0)))/(100)))+((((v71)*(0)))/(100)))+((((v72)*(0)))/(100)))+((((v73)*(0)))/(100)))+((((v74)*(0)))/(100)))+((((v75)*(6)))/(100)))+((((v76)*(7.3)))/(100)))+((((v77)*(0)))/(100)))+((((v78)*(31.5)))/(100)))+((((v79)*(11.12)))/(100)))+((((v80)*(8)))/(100)))+((((v81)*(20)))/(100)))+((((v82)*(6)))/(100)))+((((v83)*(2.49166666666667)))/(100)))+((((v84)*(0)))/(100)))+((((v85)*(0)))/(100)))+((((v86)*(0)))/(100)))+((((v87)*(0)))/(100)))+((((v88)*(0)))/(100)))+((((v89)*(0)))/(100)))+((((v90)*(0)))/(100)))+((((v91)*(0)))/(100)))+((((v92)*(0)))/(100)))+((((v93)*(0)))/(100)))+((((v94)*(0)))/(100)))+((((v95)*(0)))/(100)))+((((v96)*(0)))/(100)))+((((v97)*(0)))/(100)))+((((v98)*(0)))/(100)))+((((v99)*(6)))/(100)))+((((v100)*(7.3)))/(100)))+((((v101)*(0)))/(100)))+((((v102)*(31.5)))/(100)))+((((v103)*(11.12)))/(100)))+((((v104)*(8)))/(100)))+((((v105)*(20)))/(100)))+((((v106)*(6)))/(100)))+((((v107)*(2.49166666666667
 
 APM model error: string > 15000  characters
 Consider breaking up the line into multiple equations
 
 The may also be due to only using newline character CR
   instead of CR LF (for Windows) or LF (for MacOS/Linux) 
 To fix this problem, save APM file with appropriate newline characters
 
 STOPPING...
 


2018-12-06 14:32:15,371 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 678.8006353557496), (1, 1, 1)]
2018-12-06 14:32:15,371 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.70559632310677, 'sio2': 91.61954028173949, 'cost': 0.6748633951537407}
2018-12-06 14:32:15,554 __main__ mainTask ERROR = Traceback (most recent call last):
  File "C:/Users/sun/PycharmProjects/optimizationproblem/gekkoSolution/mainTask.py", line 37, in <module>
    lp.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\gekkoSolution\gekkoProblem.py", line 46, in solve
    self.prob.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\gekko\gekko.py", line 682, in solve
    raise Exception(apm_error)
Exception:  @error: Max Equation Length
 Error with line number:  125
 i0=((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((((910.99486005)*(v1)))*(0.94)))/(100)))+((((((853.351)*(v2)))*(0.927)))/(100)))+((((((1039.8935286)*(v3)))*(1.0)))/(100)))+((((((770.6612881)*(v4)))*(0.685)))/(100)))+((((((500)*(v5)))*(0.8888)))/(100)))+((((((500)*(v6)))*(0.92)))/(100)))+((((((826.195501934952)*(v7)))*(0.8)))/(100)))+((((((989.88716)*(v8)))*(0.94)))/(100)))+((((((1130.5194048)*(v9)))*(0.9750833333333333)))/(100)))+((((((500)*(v10)))*(0.94)))/(100)))+((((((300)*(v11)))*(0.927)))/(100)))+((((((1069.8162944)*(v12)))*(1.0)))/(100)))+((((((1245.56)*(v13)))*(0.685)))/(100)))+((((((500)*(v14)))*(0.8888)))/(100)))+((((((825.711413030191)*(v15)))*(0.92)))/(100)))+((((((1004.658478)*(v16)))*(0.8)))/(100)))+((((((1129.8570048)*(v17)))*(0.94)))/(100)))+((((((300)*(v18)))*(0.9750833333333333)))/(100)))+((((((801.67994)*(v19)))*(0.94)))/(100)))+((((((834.2588482)*(v20)))*(0.927)))/(100)))+((((((991.6951428)*(v21)))*(1.0)))/(100)))+((((((500)*(v22)))*(0.685)))/(100)))+((((((886.96504)*(v23)))*(0.8888)))/(100)))+((((((1049.00673)*(v24)))*(0.92)))/(100)))+((((((1059.7526526)*(v25)))*(0.8)))/(100)))+((((((1097.7898072)*(v26)))*(0.94)))/(100)))+((((((500)*(v27)))*(0.9750833333333333)))/(100)))+((((((825.711413030191)*(v28)))*(0.94)))/(100)))+((((((1004.658478)*(v29)))*(0.927)))/(100)))+((((((1241.92)*(v30)))*(1.0)))/(100)))+((((((941.547504)*(v31)))*(0.685)))/(100)))+((((((826.7537594)*(v32)))*(0.8888)))/(100)))+((((((300)*(v33)))*(0.92)))/(100)))+((((((775.7532696)*(v34)))*(0.8)))/(100)))+((((((500)*(v35)))*(0.94)))/(100)))+((((((944.28)*(v36)))*(0.9750833333333333)))/(100)))+((((((612.08)*(v37)))*(1.0)))/(100)))+((((((500)*(v38)))*(1.0)))/(100)))+((((((473.38)*(v39)))*(1.0)))/(100)))+((((((925.96)*(v40)))*(1.0)))/(100)))+((((((484.27)*(v41)))*(1.0)))/(100)))+((((((780.55)*(v42)))*(1.0)))/(100)))+((((((434.35)*(v43)))*(1.0)))/(100)))+((((((1228.65)*(v44)))*(1.0)))/(100)))+((((((300)*(v45)))*(1.0)))/(100)))+((((((500)*(v46)))*(1.0)))/(100)))+((((((964.82)*(v47)))*(1.0)))/(100)))+((((((586.286222115809)*(v48)))*(1.0)))/(100)))+((((((500)*(v49)))*(1.0)))/(100)))+((((((0)*(v50)))*(1.0)))/(100)))+((((((925.96)*(v51)))*(1.0)))/(100)))+((((((405.863293435074)*(v52)))*(1.0)))/(100)))+((((((910.96)*(v53)))*(1.0)))/(100)))+((((((0)*(v54)))*(1.0)))/(100)))+((((((1242.28973578925)*(v55)))*(1.0)))/(100)))+((((((300)*(v56)))*(1.0)))/(100)))+((((((500)*(v57)))*(1.0)))/(100)))+((((((773.95)*(v58)))*(1.0)))/(100)))+((((((0)*(v59)))*(1.0)))/(100)))+((((((500)*(v60)))*(1.0)))/(100)))+((((((634.53)*(v61)))*(1.0)))/(100)))+((((((746.2)*(v62)))*(1.0)))/(100)))+((((((747.1)*(v63)))*(1.0)))/(100)))+((((((800)*(v64)))*(1.0)))/(100)))+((((((500)*(v65)))*(1.0)))/(100)))+((((((100)*(v66)))*(1.0)))/(100)))+((((((500)*(v67)))*(1.0)))/(100)))+((((((773.95)*(v68)))*(1.0)))/(100)))+((((((793.97)*(v69)))*(1.0)))/(100)))+((((((500)*(v70)))*(1.0)))/(100)))+((((((634.53)*(v71)))*(1.0)))/(100)))+((((((746.2)*(v72)))*(1.0)))/(100)))+((((((747.1)*(v73)))*(1.0)))/(100)))+((((((800)*(v74)))*(1.0)))/(100)))+((((((500)*(v75)))*(0.94)))/(100)))+((((((100)*(v76)))*(0.927)))/(100)))+((((((500)*(v77)))*(1.0)))/(100)))+((((((773.95)*(v78)))*(0.685)))/(100)))+((((((793.97)*(v79)))*(0.8888)))/(100)))+((((((500)*(v80)))*(0.92)))/(100)))+((((((634.53)*(v81)))*(0.8)))/(100)))+((((((746.2)*(v82)))*(0.94)))/(100)))+((((((747.1)*(v83)))*(0.9750833333333333)))/(100)))+((((((800)*(v84)))*(1.0)))/(100)))+((((((500)*(v85)))*(1.0)))/(100)))+((((((100)*(v86)))*(1.0)))/(100)))+((((((500)*(v87)))*(1.0)))/(100)))+((((((566.5)*(v88)))*(1.0)))/(100)))+((((((600.5)*(v89)))*(1.0)))/(100)))+((((((500)*(v90)))*(1.0)))/(100)))+((((((431.41)*(v91)))*(1.0)))/(100)))+((((((498.015344202792)*(v92)))*(1.0)))/(100)))+((((((466.846846846847)*(v93)))*(1.0)))/(100)))+((((((500)*(v94)))*(1.0)))/(100)))+((((((100)*(v95)))*(1.0)))/(100)))+((((((500)*(v96)))*(1.0)))/(100)))+((((((910.99486005)*(v97)))*(1.0)))/(100)))+((((((853.351)*(v98)))*(1.0)))/(100)))+((((((1039.8935286)*(v99)))*(0.94)))/(100)))+((((((770.6612881)*(v100)))*(0.927)))/(100)))+((((((500)*(v101)))*(1.0)))/(100)))+((((((500)*(v102)))*(0.685)))/(100)))+((((((826.195501934952)*(v103)))*(0.8888)))/(100)))+((((((989.88716)*(v104)))*(0.92)))/(100)))+((((((1130.5194048)*(v105)))*(0.8)))/(100)))+((((((500)*(v106)))*(0.94)))/(100)))+((((((300)*(v107)))*(0.9750833333333333)))/(100)))+((((((826.195501934952)*(v108)))*(0.8888)))/(100)))+((((((989.88716)*(v109)))*(0.92)))/(100)))+((((((1130.5194048)*(v110)))*(0.8)))/(100)))+((((((500)*(v111)))*(0.94)))/(100)))+((((((300)*(v112)))*(0.9750833333333333)))/(100)))+((((((300)*(v113)))*(0.9750833333333333)))/(100)))+((((((826.195501934952)*(v114)))*(0.8888)))/(100)))+((((((989.88716)*(v115)))*(0.92)))/(100)))+((((((1130.5194048)*(v116)))*(0.8)))/(100)))+((((((500)*(v117)))*(0.94)))/(100)))+((((((300)*(v118)))*(0.9750833333333333)))/(100)))+((((((1130.5194048)*(v119)))*(0.8)))/(100)))+((((((500)*(v120)))*(0.94)))/(100))))/((1-((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((v1)*(6)))/(100)))+((((v2)*(7.3)))/(100)))+((((v3)*(0)))/(100)))+((((v4)*(31.5)))/(100)))+((((v5)*(11.12)))/(100)))+((((v6)*(8)))/(100)))+((((v7)*(20)))/(100)))+((((v8)*(6)))/(100)))+((((v9)*(2.49166666666667)))/(100)))+((((v10)*(6)))/(100)))+((((v11)*(7.3)))/(100)))+((((v12)*(0)))/(100)))+((((v13)*(31.5)))/(100)))+((((v14)*(11.12)))/(100)))+((((v15)*(8)))/(100)))+((((v16)*(20)))/(100)))+((((v17)*(6)))/(100)))+((((v18)*(2.49166666666667)))/(100)))+((((v19)*(6)))/(100)))+((((v20)*(7.3)))/(100)))+((((v21)*(0)))/(100)))+((((v22)*(31.5)))/(100)))+((((v23)*(11.12)))/(100)))+((((v24)*(8)))/(100)))+((((v25)*(20)))/(100)))+((((v26)*(6)))/(100)))+((((v27)*(2.49166666666667)))/(100)))+((((v28)*(6)))/(100)))+((((v29)*(7.3)))/(100)))+((((v30)*(0)))/(100)))+((((v31)*(31.5)))/(100)))+((((v32)*(11.12)))/(100)))+((((v33)*(8)))/(100)))+((((v34)*(20)))/(100)))+((((v35)*(6)))/(100)))+((((v36)*(2.49166666666667)))/(100)))+((((v37)*(0)))/(100)))+((((v38)*(0)))/(100)))+((((v39)*(0)))/(100)))+((((v40)*(0)))/(100)))+((((v41)*(0)))/(100)))+((((v42)*(0)))/(100)))+((((v43)*(0)))/(100)))+((((v44)*(0)))/(100)))+((((v45)*(0)))/(100)))+((((v46)*(0)))/(100)))+((((v47)*(0)))/(100)))+((((v48)*(0)))/(100)))+((((v49)*(0)))/(100)))+((((v50)*(0)))/(100)))+((((v51)*(0)))/(100)))+((((v52)*(0)))/(100)))+((((v53)*(0)))/(100)))+((((v54)*(0)))/(100)))+((((v55)*(0)))/(100)))+((((v56)*(0)))/(100)))+((((v57)*(0)))/(100)))+((((v58)*(0)))/(100)))+((((v59)*(0)))/(100)))+((((v60)*(0)))/(100)))+((((v61)*(0)))/(100)))+((((v62)*(0)))/(100)))+((((v63)*(0)))/(100)))+((((v64)*(0)))/(100)))+((((v65)*(0)))/(100)))+((((v66)*(0)))/(100)))+((((v67)*(0)))/(100)))+((((v68)*(0)))/(100)))+((((v69)*(0)))/(100)))+((((v70)*(0)))/(100)))+((((v71)*(0)))/(100)))+((((v72)*(0)))/(100)))+((((v73)*(0)))/(100)))+((((v74)*(0)))/(100)))+((((v75)*(6)))/(100)))+((((v76)*(7.3)))/(100)))+((((v77)*(0)))/(100)))+((((v78)*(31.5)))/(100)))+((((v79)*(11.12)))/(100)))+((((v80)*(8)))/(100)))+((((v81)*(20)))/(100)))+((((v82)*(6)))/(100)))+((((v83)*(2.49166666666667)))/(100)))+((((v84)*(0)))/(100)))+((((v85)*(0)))/(100)))+((((v86)*(0)))/(100)))+((((v87)*(0)))/(100)))+((((v88)*(0)))/(100)))+((((v89)*(0)))/(100)))+((((v90)*(0)))/(100)))+((((v91)*(0)))/(100)))+((((v92)*(0)))/(100)))+((((v93)*(0)))/(100)))+((((v94)*(0)))/(100)))+((((v95)*(0)))/(100)))+((((v96)*(0)))/(100)))+((((v97)*(0)))/(100)))+((((v98)*(0)))/(100)))+((((v99)*(6)))/(100)))+((((v100)*(7.3)))/(100)))+((((v101)*(0)))/(100)))+((((v102)*(31.5)))/(100)))+((((v103)*(11.12)))/(100)))+((((v104)*(8)))/(100)))+((((v105)*(20)))/(100)))+((((v106)*(6)))/(100)))+((((v107)*(2.49166666666667)))/(100)))+((((v108)*(11.12)))/(100)))+((((v109)*(8)))/(100)))+((((v110)*(20)))/(100)))+((((v111)*(6)))/(100)))+((((v112)*(2.49166666666667)))/(100)))+((((v113)*(2.49166666666667)))/(100)))+((((v114)*(11.12)))/(100)))+((((v115)*(8)))/(100)))+((((v116)*(20)))/(100)))+((((v117)*(6)))/(100)))+((((v118)*(2.49166666666667)))/(100)))+((((v119)*(20)))/(100)))+((((v120)*(6)))/(100))))/(100))))))/((1-((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((((2.63)*(v1)))*(0.94)))/(100)))+((((((6)*(v2)))*(0.927)))/(100)))+((((((1)*(v3)))*(1.0)))/(100)))+((((((13.63)*(v4)))*(0.685)))/(100)))+((((((9.5)*(v5)))*(0.8888)))/(100)))+((((((9)*(v6)))*(0.92)))/(100)))+((((((4.36)*(v7)))*(0.8)))/(100)))+((((((2)*(v8)))*(0.94)))/(100)))+((((((31.3234615384615)*(v9)))*(0.9750833333333333)))/(100)))+((((((2.63)*(v10)))*(0.94)))/(100)))+((((((6)*(v11)))*(0.927)))/(100)))+((((((1)*(v12)))*(1.0)))/(100)))+((((((13.63)*(v13)))*(0.685)))/(100)))+((((((9.5)*(v14)))*(0.8888)))/(100)))+((((((9)*(v15)))*(0.92)))/(100)))+((((((4.36)*(v16)))*(0.8)))/(100)))+((((((2)*(v17)))*(0.94)))/(100)))+((((((31.3234615384615)*(v18)))*(0.9750833333333333)))/(100)))+((((((0)*(v19)))*(0.94)))/(100)))+((((((0)*(v20)))*(0.927)))/(100)))+((((((0)*(v21)))*(1.0)))/(100)))+((((((0)*(v22)))*(0.685)))/(100)))+((((((0)*(v23)))*(0.8888)))/(100)))+((((((0)*(v24)))*(0.92)))/(100)))+((((((0)*(v25)))*(0.8)))/(100)))+((((((0)*(v26)))*(0.94)))/(100)))+((((((0)*(v27)))*(0.9750833333333333)))/(100)))+((((((0)*(v28)))*(0.94)))/(100)))+((((((0)*(v29)))*(0.927)))/(100)))+((((((0)*(v30)))*(1.0)))/(100)))+((((((0)*(v31)))*(0.685)))/(100)))+((((((0)*(v32)))*(0.8888)))/(100)))+((((((0)*(v33)))*(0.92)))/(100)))+((((((0)*(v34)))*(0.8)))/(100)))+((((((0)*(v35)))*(0.94)))/(100)))+((((((2.63)*(v36)))*(0.9750833333333333)))/(100)))+((((((6)*(v37)))*(1.0)))/(100)))+((((((1)*(v38)))*(1.0)))/(100)))+((((((13.63)*(v39)))*(1.0)))/(100)))+((((((9.5)*(v40)))*(1.0)))/(100)))+((((((9)*(v41)))*(1.0)))/(100)))+((((((4.36)*(v42)))*(1.0)))/(100)))+((((((2)*(v43)))*(1.0)))/(100)))+((((((31.3234615384615)*(v44)))*(1.0)))/(100)))+((((((0)*(v45)))*(1.0)))/(100)))+((((((0)*(v46)))*(1.0)))/(100)))+((((((0)*(v47)))*(1.0)))/(100)))+((((((0)*(v48)))*(1.0)))/(100)))+((((((0)*(v49)))*(1.0)))/(100)))+((((((0)*(v50)))*(1.0)))/(100)))+((((((0)*(v51)))*(1.0)))/(100)))+((((((0)*(v52)))*(1.0)))/(100)))+((((((0)*(v53)))*(1.0)))/(100)))+((((((0)*(v54)))*(1.0)))/(100)))+((((((0)*(v55)))*(1.0)))/(100)))+((((((0)*(v56)))*(1.0)))/(100)))+((((((0)*(v57)))*(1.0)))/(100)))+((((((0)*(v58)))*(1.0)))/(100)))+((((((0)*(v59)))*(1.0)))/(100)))+((((((2.63)*(v60)))*(1.0)))/(100)))+((((((6)*(v61)))*(1.0)))/(100)))+((((((1)*(v62)))*(1.0)))/(100)))+((((((13.63)*(v63)))*(1.0)))/(100)))+((((((9.5)*(v64)))*(1.0)))/(100)))+((((((9)*(v65)))*(1.0)))/(100)))+((((((4.36)*(v66)))*(1.0)))/(100)))+((((((2)*(v67)))*(1.0)))/(100)))+((((((31.3234615384615)*(v68)))*(1.0)))/(100)))+((((((0)*(v69)))*(1.0)))/(100)))+((((((0)*(v70)))*(1.0)))/(100)))+((((((0)*(v71)))*(1.0)))/(100)))+((((((0)*(v72)))*(1.0)))/(100)))+((((((0)*(v73)))*(1.0)))/(100)))+((((((0)*(v74)))*(1.0)))/(100)))+((((((0)*(v75)))*(0.94)))/(100)))+((((((0)*(v76)))*(0.927)))/(100)))+((((((0)*(v77)))*(1.0)))/(100)))+((((((0)*(v78)))*(0.685)))/(100)))+((((((0)*(v79)))*(0.8888)))/(100)))+((((((0)*(v80)))*(0.92)))/(100)))+((((((0)*(v81)))*(0.8)))/(100)))+((((((2.63)*(v82)))*(0.94)))/(100)))+((((((6)*(v83)))*(0.9750833333333333)))/(100)))+((((((1)*(v84)))*(1.0)))/(100)))+((((((13.63)*(v85)))*(1.0)))/(100)))+((((((9.5)*(v86)))*(1.0)))/(100)))+((((((9)*(v87)))*(1.0)))/(100)))+((((((4.36)*(v88)))*(1.0)))/(100)))+((((((2)*(v89)))*(1.0)))/(100)))+((((((31.3234615384615)*(v90)))*(1.0)))/(100)))+((((((0)*(v91)))*(1.0)))/(100)))+((((((0)*(v92)))*(1.0)))/(100)))+((((((0)*(v93)))*(1.0)))/(100)))+((((((0)*(v94)))*(1.0)))/(100)))+((((((0)*(v95)))*(1.0)))/(100)))+((((((2.63)*(v96)))*(1.0)))/(100)))+((((((6)*(v97)))*(1.0)))/(100)))+((((((1)*(v98)))*(1.0)))/(100)))+((((((13.63)*(v99)))*(0.94)))/(100)))+((((((9.5)*(v100)))*(0.927)))/(100)))+((((((9)*(v101)))*(1.0)))/(100)))+((((((4.36)*(v102)))*(0.685)))/(100)))+((((((2)*(v103)))*(0.8888)))/(100)))+((((((31.3234615384615)*(v104)))*(0.92)))/(100)))+((((((0)*(v105)))*(0.8)))/(100)))+((((((0)*(v106)))*(0.94)))/(100)))+((((((0)*(v107)))*(0.9750833333333333)))/(100)))+((((((2)*(v108)))*(0.8888)))/(100)))+((((((31.3234615384615)*(v109)))*(0.92)))/(100)))+((((((0)*(v110)))*(0.8)))/(100)))+((((((0)*(v111)))*(0.94)))/(100)))+((((((0)*(v112)))*(0.9750833333333333)))/(100)))+((((((0)*(v113)))*(0.9750833333333333)))/(100)))+((((((2)*(v114)))*(0.8888)))/(100)))+((((((31.3234615384615)*(v115)))*(0.92)))/(100)))+((((((0)*(v116)))*(0.8)))/(100)))+((((((0)*(v117)))*(0.94)))/(100)))+((((((0)*(v118)))*(0.9750833333333333)))/(100)))+((((((0)*(v119)))*(0.8)))/(100)))+((((((0)*(v120)))*(0.94)))/(100))))/((1-((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((v1)*(6)))/(100)))+((((v2)*(7.3)))/(100)))+((((v3)*(0)))/(100)))+((((v4)*(31.5)))/(100)))+((((v5)*(11.12)))/(100)))+((((v6)*(8)))/(100)))+((((v7)*(20)))/(100)))+((((v8)*(6)))/(100)))+((((v9)*(2.49166666666667)))/(100)))+((((v10)*(6)))/(100)))+((((v11)*(7.3)))/(100)))+((((v12)*(0)))/(100)))+((((v13)*(31.5)))/(100)))+((((v14)*(11.12)))/(100)))+((((v15)*(8)))/(100)))+((((v16)*(20)))/(100)))+((((v17)*(6)))/(100)))+((((v18)*(2.49166666666667)))/(100)))+((((v19)*(6)))/(100)))+((((v20)*(7.3)))/(100)))+((((v21)*(0)))/(100)))+((((v22)*(31.5)))/(100)))+((((v23)*(11.12)))/(100)))+((((v24)*(8)))/(100)))+((((v25)*(20)))/(100)))+((((v26)*(6)))/(100)))+((((v27)*(2.49166666666667)))/(100)))+((((v28)*(6)))/(100)))+((((v29)*(7.3)))/(100)))+((((v30)*(0)))/(100)))+((((v31)*(31.5)))/(100)))+((((v32)*(11.12)))/(100)))+((((v33)*(8)))/(100)))+((((v34)*(20)))/(100)))+((((v35)*(6)))/(100)))+((((v36)*(2.49166666666667)))/(100)))+((((v37)*(0)))/(100)))+((((v38)*(0)))/(100)))+((((v39)*(0)))/(100)))+((((v40)*(0)))/(100)))+((((v41)*(0)))/(100)))+((((v42)*(0)))/(100)))+((((v43)*(0)))/(100)))+((((v44)*(0)))/(100)))+((((v45)*(0)))/(100)))+((((v46)*(0)))/(100)))+((((v47)*(0)))/(100)))+((((v48)*(0)))/(100)))+((((v49)*(0)))/(100)))+((((v50)*(0)))/(100)))+((((v51)*(0)))/(100)))+((((v52)*(0)))/(100)))+((((v53)*(0)))/(100)))+((((v54)*(0)))/(100)))+((((v55)*(0)))/(100)))+((((v56)*(0)))/(100)))+((((v57)*(0)))/(100)))+((((v58)*(0)))/(100)))+((((v59)*(0)))/(100)))+((((v60)*(0)))/(100)))+((((v61)*(0)))/(100)))+((((v62)*(0)))/(100)))+((((v63)*(0)))/(100)))+((((v64)*(0)))/(100)))+((((v65)*(0)))/(100)))+((((v66)*(0)))/(100)))+((((v67)*(0)))/(100)))+((((v68)*(0)))/(100)))+((((v69)*(0)))/(100)))+((((v70)*(0)))/(100)))+((((v71)*(0)))/(100)))+((((v72)*(0)))/(100)))+((((v73)*(0)))/(100)))+((((v74)*(0)))/(100)))+((((v75)*(6)))/(100)))+((((v76)*(7.3)))/(100)))+((((v77)*(0)))/(100)))+((((v78)*(31.5)))/(100)))+((((v79)*(11.12)))/(100)))+((((v80)*(8)))/(100)))+((((v81)*(20)))/(100)))+((((v82)*(6)))/(100)))+((((v83)*(2.49166666666667)))/(100)))+((((v84)*(0)))/(100)))+((((v85)*(0)))/(100)))+((((v86)*(0)))/(100)))+((((v87)*(0)))/(100)))+((((v88)*(0)))/(100)))+((((v89)*(0)))/(100)))+((((v90)*(0)))/(100)))+((((v91)*(0)))/(100)))+((((v92)*(0)))/(100)))+((((v93)*(0)))/(100)))+((((v94)*(0)))/(100)))+((((v95)*(0)))/(100)))+((((v96)*(0)))/(100)))+((((v97)*(0)))/(100)))+((((v98)*(0)))/(100)))+((((v99)*(6)))/(100)))+((((v100)*(7.3)))/(100)))+((((v101)*(0)))/(100)))+((((v102)*(31.5)))/(100)))+((((v103)*(11.12)))/(100)))+((((v104)*(8)))/(100)))+((((v105)*(20)))/(100)))+((((v106)*(6)))/(100)))+((((v107)*(2.49166666666667)))/(100)))+((((v108)*(11.12)))/(100)))+((((v109)*(8)))/(100)))+((((v110)*(20)))/(100)))+((((v111)*(6)))/(100)))+((((v112)*(2.49166666666667)))
 
 APM model error: string > 15000  characters
 Consider breaking up the line into multiple equations
 
 The may also be due to only using newline character CR
   instead of CR LF (for Windows) or LF (for MacOS/Linux) 
 To fix this problem, save APM file with appropriate newline characters
 
 STOPPING...
 


2018-12-06 14:32:27,046 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 680.3031617032768), (1, 1, 1)]
2018-12-06 14:32:27,046 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.705711177657242, 'sio2': 91.62090590234462, 'cost': 0.6733829199981455}
2018-12-06 14:32:27,225 __main__ mainTask ERROR = Traceback (most recent call last):
  File "C:/Users/sun/PycharmProjects/optimizationproblem/gekkoSolution/mainTask.py", line 37, in <module>
    lp.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\gekkoSolution\gekkoProblem.py", line 46, in solve
    self.prob.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\gekko\gekko.py", line 682, in solve
    raise Exception(apm_error)
Exception:  @error: Max Equation Length
 Error with line number:  124
 i0=(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((((910.99486005)*(v1)))*(0.94)))/(100)))+((((((853.351)*(v2)))*(0.927)))/(100)))+((((((1039.8935286)*(v3)))*(1.0)))/(100)))+((((((770.6612881)*(v4)))*(0.685)))/(100)))+((((((500)*(v5)))*(0.8888)))/(100)))+((((((500)*(v6)))*(0.92)))/(100)))+((((((826.195501934952)*(v7)))*(0.8)))/(100)))+((((((989.88716)*(v8)))*(0.94)))/(100)))+((((((1130.5194048)*(v9)))*(0.9750833333333333)))/(100)))+((((((500)*(v10)))*(0.94)))/(100)))+((((((300)*(v11)))*(0.927)))/(100)))+((((((1069.8162944)*(v12)))*(1.0)))/(100)))+((((((1245.56)*(v13)))*(0.685)))/(100)))+((((((500)*(v14)))*(0.8888)))/(100)))+((((((825.711413030191)*(v15)))*(0.92)))/(100)))+((((((1004.658478)*(v16)))*(0.8)))/(100)))+((((((1129.8570048)*(v17)))*(0.94)))/(100)))+((((((300)*(v18)))*(0.9750833333333333)))/(100)))+((((((801.67994)*(v19)))*(0.94)))/(100)))+((((((834.2588482)*(v20)))*(0.927)))/(100)))+((((((991.6951428)*(v21)))*(1.0)))/(100)))+((((((500)*(v22)))*(0.685)))/(100)))+((((((886.96504)*(v23)))*(0.8888)))/(100)))+((((((1049.00673)*(v24)))*(0.92)))/(100)))+((((((1059.7526526)*(v25)))*(0.8)))/(100)))+((((((1097.7898072)*(v26)))*(0.94)))/(100)))+((((((500)*(v27)))*(0.9750833333333333)))/(100)))+((((((825.711413030191)*(v28)))*(0.94)))/(100)))+((((((1004.658478)*(v29)))*(0.927)))/(100)))+((((((1241.92)*(v30)))*(1.0)))/(100)))+((((((941.547504)*(v31)))*(0.685)))/(100)))+((((((826.7537594)*(v32)))*(0.8888)))/(100)))+((((((300)*(v33)))*(0.92)))/(100)))+((((((775.7532696)*(v34)))*(0.8)))/(100)))+((((((500)*(v35)))*(0.94)))/(100)))+((((((944.28)*(v36)))*(0.9750833333333333)))/(100)))+((((((612.08)*(v37)))*(1.0)))/(100)))+((((((500)*(v38)))*(1.0)))/(100)))+((((((473.38)*(v39)))*(1.0)))/(100)))+((((((925.96)*(v40)))*(1.0)))/(100)))+((((((484.27)*(v41)))*(1.0)))/(100)))+((((((780.55)*(v42)))*(1.0)))/(100)))+((((((434.35)*(v43)))*(1.0)))/(100)))+((((((1228.65)*(v44)))*(1.0)))/(100)))+((((((300)*(v45)))*(1.0)))/(100)))+((((((500)*(v46)))*(1.0)))/(100)))+((((((964.82)*(v47)))*(1.0)))/(100)))+((((((586.286222115809)*(v48)))*(1.0)))/(100)))+((((((500)*(v49)))*(1.0)))/(100)))+((((((0)*(v50)))*(1.0)))/(100)))+((((((925.96)*(v51)))*(1.0)))/(100)))+((((((405.863293435074)*(v52)))*(1.0)))/(100)))+((((((910.96)*(v53)))*(1.0)))/(100)))+((((((0)*(v54)))*(1.0)))/(100)))+((((((1242.28973578925)*(v55)))*(1.0)))/(100)))+((((((300)*(v56)))*(1.0)))/(100)))+((((((500)*(v57)))*(1.0)))/(100)))+((((((773.95)*(v58)))*(1.0)))/(100)))+((((((0)*(v59)))*(1.0)))/(100)))+((((((500)*(v60)))*(1.0)))/(100)))+((((((634.53)*(v61)))*(1.0)))/(100)))+((((((746.2)*(v62)))*(1.0)))/(100)))+((((((747.1)*(v63)))*(1.0)))/(100)))+((((((800)*(v64)))*(1.0)))/(100)))+((((((500)*(v65)))*(1.0)))/(100)))+((((((100)*(v66)))*(1.0)))/(100)))+((((((500)*(v67)))*(1.0)))/(100)))+((((((773.95)*(v68)))*(1.0)))/(100)))+((((((793.97)*(v69)))*(1.0)))/(100)))+((((((500)*(v70)))*(1.0)))/(100)))+((((((634.53)*(v71)))*(1.0)))/(100)))+((((((746.2)*(v72)))*(1.0)))/(100)))+((((((747.1)*(v73)))*(1.0)))/(100)))+((((((800)*(v74)))*(1.0)))/(100)))+((((((500)*(v75)))*(0.94)))/(100)))+((((((100)*(v76)))*(0.927)))/(100)))+((((((500)*(v77)))*(1.0)))/(100)))+((((((773.95)*(v78)))*(0.685)))/(100)))+((((((793.97)*(v79)))*(0.8888)))/(100)))+((((((500)*(v80)))*(0.92)))/(100)))+((((((634.53)*(v81)))*(0.8)))/(100)))+((((((746.2)*(v82)))*(0.94)))/(100)))+((((((747.1)*(v83)))*(0.9750833333333333)))/(100)))+((((((800)*(v84)))*(1.0)))/(100)))+((((((500)*(v85)))*(1.0)))/(100)))+((((((100)*(v86)))*(1.0)))/(100)))+((((((500)*(v87)))*(1.0)))/(100)))+((((((566.5)*(v88)))*(1.0)))/(100)))+((((((600.5)*(v89)))*(1.0)))/(100)))+((((((500)*(v90)))*(1.0)))/(100)))+((((((431.41)*(v91)))*(1.0)))/(100)))+((((((498.015344202792)*(v92)))*(1.0)))/(100)))+((((((466.846846846847)*(v93)))*(1.0)))/(100)))+((((((500)*(v94)))*(1.0)))/(100)))+((((((100)*(v95)))*(1.0)))/(100)))+((((((500)*(v96)))*(1.0)))/(100)))+((((((910.99486005)*(v97)))*(1.0)))/(100)))+((((((853.351)*(v98)))*(1.0)))/(100)))+((((((1039.8935286)*(v99)))*(0.94)))/(100)))+((((((770.6612881)*(v100)))*(0.927)))/(100)))+((((((500)*(v101)))*(1.0)))/(100)))+((((((500)*(v102)))*(0.685)))/(100)))+((((((826.195501934952)*(v103)))*(0.8888)))/(100)))+((((((989.88716)*(v104)))*(0.92)))/(100)))+((((((1130.5194048)*(v105)))*(0.8)))/(100)))+((((((500)*(v106)))*(0.94)))/(100)))+((((((300)*(v107)))*(0.9750833333333333)))/(100)))+((((((826.195501934952)*(v108)))*(0.8888)))/(100)))+((((((989.88716)*(v109)))*(0.92)))/(100)))+((((((1130.5194048)*(v110)))*(0.8)))/(100)))+((((((500)*(v111)))*(0.94)))/(100)))+((((((300)*(v112)))*(0.9750833333333333)))/(100)))+((((((300)*(v113)))*(0.9750833333333333)))/(100)))+((((((826.195501934952)*(v114)))*(0.8888)))/(100)))+((((((989.88716)*(v115)))*(0.92)))/(100)))+((((((1130.5194048)*(v116)))*(0.8)))/(100)))+((((((500)*(v117)))*(0.94)))/(100)))+((((((300)*(v118)))*(0.9750833333333333)))/(100)))+((((((1130.5194048)*(v119)))*(0.8)))/(100))))/((1-(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((v1)*(6)))/(100)))+((((v2)*(7.3)))/(100)))+((((v3)*(0)))/(100)))+((((v4)*(31.5)))/(100)))+((((v5)*(11.12)))/(100)))+((((v6)*(8)))/(100)))+((((v7)*(20)))/(100)))+((((v8)*(6)))/(100)))+((((v9)*(2.49166666666667)))/(100)))+((((v10)*(6)))/(100)))+((((v11)*(7.3)))/(100)))+((((v12)*(0)))/(100)))+((((v13)*(31.5)))/(100)))+((((v14)*(11.12)))/(100)))+((((v15)*(8)))/(100)))+((((v16)*(20)))/(100)))+((((v17)*(6)))/(100)))+((((v18)*(2.49166666666667)))/(100)))+((((v19)*(6)))/(100)))+((((v20)*(7.3)))/(100)))+((((v21)*(0)))/(100)))+((((v22)*(31.5)))/(100)))+((((v23)*(11.12)))/(100)))+((((v24)*(8)))/(100)))+((((v25)*(20)))/(100)))+((((v26)*(6)))/(100)))+((((v27)*(2.49166666666667)))/(100)))+((((v28)*(6)))/(100)))+((((v29)*(7.3)))/(100)))+((((v30)*(0)))/(100)))+((((v31)*(31.5)))/(100)))+((((v32)*(11.12)))/(100)))+((((v33)*(8)))/(100)))+((((v34)*(20)))/(100)))+((((v35)*(6)))/(100)))+((((v36)*(2.49166666666667)))/(100)))+((((v37)*(0)))/(100)))+((((v38)*(0)))/(100)))+((((v39)*(0)))/(100)))+((((v40)*(0)))/(100)))+((((v41)*(0)))/(100)))+((((v42)*(0)))/(100)))+((((v43)*(0)))/(100)))+((((v44)*(0)))/(100)))+((((v45)*(0)))/(100)))+((((v46)*(0)))/(100)))+((((v47)*(0)))/(100)))+((((v48)*(0)))/(100)))+((((v49)*(0)))/(100)))+((((v50)*(0)))/(100)))+((((v51)*(0)))/(100)))+((((v52)*(0)))/(100)))+((((v53)*(0)))/(100)))+((((v54)*(0)))/(100)))+((((v55)*(0)))/(100)))+((((v56)*(0)))/(100)))+((((v57)*(0)))/(100)))+((((v58)*(0)))/(100)))+((((v59)*(0)))/(100)))+((((v60)*(0)))/(100)))+((((v61)*(0)))/(100)))+((((v62)*(0)))/(100)))+((((v63)*(0)))/(100)))+((((v64)*(0)))/(100)))+((((v65)*(0)))/(100)))+((((v66)*(0)))/(100)))+((((v67)*(0)))/(100)))+((((v68)*(0)))/(100)))+((((v69)*(0)))/(100)))+((((v70)*(0)))/(100)))+((((v71)*(0)))/(100)))+((((v72)*(0)))/(100)))+((((v73)*(0)))/(100)))+((((v74)*(0)))/(100)))+((((v75)*(6)))/(100)))+((((v76)*(7.3)))/(100)))+((((v77)*(0)))/(100)))+((((v78)*(31.5)))/(100)))+((((v79)*(11.12)))/(100)))+((((v80)*(8)))/(100)))+((((v81)*(20)))/(100)))+((((v82)*(6)))/(100)))+((((v83)*(2.49166666666667)))/(100)))+((((v84)*(0)))/(100)))+((((v85)*(0)))/(100)))+((((v86)*(0)))/(100)))+((((v87)*(0)))/(100)))+((((v88)*(0)))/(100)))+((((v89)*(0)))/(100)))+((((v90)*(0)))/(100)))+((((v91)*(0)))/(100)))+((((v92)*(0)))/(100)))+((((v93)*(0)))/(100)))+((((v94)*(0)))/(100)))+((((v95)*(0)))/(100)))+((((v96)*(0)))/(100)))+((((v97)*(0)))/(100)))+((((v98)*(0)))/(100)))+((((v99)*(6)))/(100)))+((((v100)*(7.3)))/(100)))+((((v101)*(0)))/(100)))+((((v102)*(31.5)))/(100)))+((((v103)*(11.12)))/(100)))+((((v104)*(8)))/(100)))+((((v105)*(20)))/(100)))+((((v106)*(6)))/(100)))+((((v107)*(2.49166666666667)))/(100)))+((((v108)*(11.12)))/(100)))+((((v109)*(8)))/(100)))+((((v110)*(20)))/(100)))+((((v111)*(6)))/(100)))+((((v112)*(2.49166666666667)))/(100)))+((((v113)*(2.49166666666667)))/(100)))+((((v114)*(11.12)))/(100)))+((((v115)*(8)))/(100)))+((((v116)*(20)))/(100)))+((((v117)*(6)))/(100)))+((((v118)*(2.49166666666667)))/(100)))+((((v119)*(20)))/(100))))/(100))))))/((1-(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((((2.63)*(v1)))*(0.94)))/(100)))+((((((6)*(v2)))*(0.927)))/(100)))+((((((1)*(v3)))*(1.0)))/(100)))+((((((13.63)*(v4)))*(0.685)))/(100)))+((((((9.5)*(v5)))*(0.8888)))/(100)))+((((((9)*(v6)))*(0.92)))/(100)))+((((((4.36)*(v7)))*(0.8)))/(100)))+((((((2)*(v8)))*(0.94)))/(100)))+((((((31.3234615384615)*(v9)))*(0.9750833333333333)))/(100)))+((((((2.63)*(v10)))*(0.94)))/(100)))+((((((6)*(v11)))*(0.927)))/(100)))+((((((1)*(v12)))*(1.0)))/(100)))+((((((13.63)*(v13)))*(0.685)))/(100)))+((((((9.5)*(v14)))*(0.8888)))/(100)))+((((((9)*(v15)))*(0.92)))/(100)))+((((((4.36)*(v16)))*(0.8)))/(100)))+((((((2)*(v17)))*(0.94)))/(100)))+((((((31.3234615384615)*(v18)))*(0.9750833333333333)))/(100)))+((((((0)*(v19)))*(0.94)))/(100)))+((((((0)*(v20)))*(0.927)))/(100)))+((((((0)*(v21)))*(1.0)))/(100)))+((((((0)*(v22)))*(0.685)))/(100)))+((((((0)*(v23)))*(0.8888)))/(100)))+((((((0)*(v24)))*(0.92)))/(100)))+((((((0)*(v25)))*(0.8)))/(100)))+((((((0)*(v26)))*(0.94)))/(100)))+((((((0)*(v27)))*(0.9750833333333333)))/(100)))+((((((0)*(v28)))*(0.94)))/(100)))+((((((0)*(v29)))*(0.927)))/(100)))+((((((0)*(v30)))*(1.0)))/(100)))+((((((0)*(v31)))*(0.685)))/(100)))+((((((0)*(v32)))*(0.8888)))/(100)))+((((((0)*(v33)))*(0.92)))/(100)))+((((((0)*(v34)))*(0.8)))/(100)))+((((((0)*(v35)))*(0.94)))/(100)))+((((((2.63)*(v36)))*(0.9750833333333333)))/(100)))+((((((6)*(v37)))*(1.0)))/(100)))+((((((1)*(v38)))*(1.0)))/(100)))+((((((13.63)*(v39)))*(1.0)))/(100)))+((((((9.5)*(v40)))*(1.0)))/(100)))+((((((9)*(v41)))*(1.0)))/(100)))+((((((4.36)*(v42)))*(1.0)))/(100)))+((((((2)*(v43)))*(1.0)))/(100)))+((((((31.3234615384615)*(v44)))*(1.0)))/(100)))+((((((0)*(v45)))*(1.0)))/(100)))+((((((0)*(v46)))*(1.0)))/(100)))+((((((0)*(v47)))*(1.0)))/(100)))+((((((0)*(v48)))*(1.0)))/(100)))+((((((0)*(v49)))*(1.0)))/(100)))+((((((0)*(v50)))*(1.0)))/(100)))+((((((0)*(v51)))*(1.0)))/(100)))+((((((0)*(v52)))*(1.0)))/(100)))+((((((0)*(v53)))*(1.0)))/(100)))+((((((0)*(v54)))*(1.0)))/(100)))+((((((0)*(v55)))*(1.0)))/(100)))+((((((0)*(v56)))*(1.0)))/(100)))+((((((0)*(v57)))*(1.0)))/(100)))+((((((0)*(v58)))*(1.0)))/(100)))+((((((0)*(v59)))*(1.0)))/(100)))+((((((2.63)*(v60)))*(1.0)))/(100)))+((((((6)*(v61)))*(1.0)))/(100)))+((((((1)*(v62)))*(1.0)))/(100)))+((((((13.63)*(v63)))*(1.0)))/(100)))+((((((9.5)*(v64)))*(1.0)))/(100)))+((((((9)*(v65)))*(1.0)))/(100)))+((((((4.36)*(v66)))*(1.0)))/(100)))+((((((2)*(v67)))*(1.0)))/(100)))+((((((31.3234615384615)*(v68)))*(1.0)))/(100)))+((((((0)*(v69)))*(1.0)))/(100)))+((((((0)*(v70)))*(1.0)))/(100)))+((((((0)*(v71)))*(1.0)))/(100)))+((((((0)*(v72)))*(1.0)))/(100)))+((((((0)*(v73)))*(1.0)))/(100)))+((((((0)*(v74)))*(1.0)))/(100)))+((((((0)*(v75)))*(0.94)))/(100)))+((((((0)*(v76)))*(0.927)))/(100)))+((((((0)*(v77)))*(1.0)))/(100)))+((((((0)*(v78)))*(0.685)))/(100)))+((((((0)*(v79)))*(0.8888)))/(100)))+((((((0)*(v80)))*(0.92)))/(100)))+((((((0)*(v81)))*(0.8)))/(100)))+((((((2.63)*(v82)))*(0.94)))/(100)))+((((((6)*(v83)))*(0.9750833333333333)))/(100)))+((((((1)*(v84)))*(1.0)))/(100)))+((((((13.63)*(v85)))*(1.0)))/(100)))+((((((9.5)*(v86)))*(1.0)))/(100)))+((((((9)*(v87)))*(1.0)))/(100)))+((((((4.36)*(v88)))*(1.0)))/(100)))+((((((2)*(v89)))*(1.0)))/(100)))+((((((31.3234615384615)*(v90)))*(1.0)))/(100)))+((((((0)*(v91)))*(1.0)))/(100)))+((((((0)*(v92)))*(1.0)))/(100)))+((((((0)*(v93)))*(1.0)))/(100)))+((((((0)*(v94)))*(1.0)))/(100)))+((((((0)*(v95)))*(1.0)))/(100)))+((((((2.63)*(v96)))*(1.0)))/(100)))+((((((6)*(v97)))*(1.0)))/(100)))+((((((1)*(v98)))*(1.0)))/(100)))+((((((13.63)*(v99)))*(0.94)))/(100)))+((((((9.5)*(v100)))*(0.927)))/(100)))+((((((9)*(v101)))*(1.0)))/(100)))+((((((4.36)*(v102)))*(0.685)))/(100)))+((((((2)*(v103)))*(0.8888)))/(100)))+((((((31.3234615384615)*(v104)))*(0.92)))/(100)))+((((((0)*(v105)))*(0.8)))/(100)))+((((((0)*(v106)))*(0.94)))/(100)))+((((((0)*(v107)))*(0.9750833333333333)))/(100)))+((((((2)*(v108)))*(0.8888)))/(100)))+((((((31.3234615384615)*(v109)))*(0.92)))/(100)))+((((((0)*(v110)))*(0.8)))/(100)))+((((((0)*(v111)))*(0.94)))/(100)))+((((((0)*(v112)))*(0.9750833333333333)))/(100)))+((((((0)*(v113)))*(0.9750833333333333)))/(100)))+((((((2)*(v114)))*(0.8888)))/(100)))+((((((31.3234615384615)*(v115)))*(0.92)))/(100)))+((((((0)*(v116)))*(0.8)))/(100)))+((((((0)*(v117)))*(0.94)))/(100)))+((((((0)*(v118)))*(0.9750833333333333)))/(100)))+((((((0)*(v119)))*(0.8)))/(100))))/((1-(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((v1)*(6)))/(100)))+((((v2)*(7.3)))/(100)))+((((v3)*(0)))/(100)))+((((v4)*(31.5)))/(100)))+((((v5)*(11.12)))/(100)))+((((v6)*(8)))/(100)))+((((v7)*(20)))/(100)))+((((v8)*(6)))/(100)))+((((v9)*(2.49166666666667)))/(100)))+((((v10)*(6)))/(100)))+((((v11)*(7.3)))/(100)))+((((v12)*(0)))/(100)))+((((v13)*(31.5)))/(100)))+((((v14)*(11.12)))/(100)))+((((v15)*(8)))/(100)))+((((v16)*(20)))/(100)))+((((v17)*(6)))/(100)))+((((v18)*(2.49166666666667)))/(100)))+((((v19)*(6)))/(100)))+((((v20)*(7.3)))/(100)))+((((v21)*(0)))/(100)))+((((v22)*(31.5)))/(100)))+((((v23)*(11.12)))/(100)))+((((v24)*(8)))/(100)))+((((v25)*(20)))/(100)))+((((v26)*(6)))/(100)))+((((v27)*(2.49166666666667)))/(100)))+((((v28)*(6)))/(100)))+((((v29)*(7.3)))/(100)))+((((v30)*(0)))/(100)))+((((v31)*(31.5)))/(100)))+((((v32)*(11.12)))/(100)))+((((v33)*(8)))/(100)))+((((v34)*(20)))/(100)))+((((v35)*(6)))/(100)))+((((v36)*(2.49166666666667)))/(100)))+((((v37)*(0)))/(100)))+((((v38)*(0)))/(100)))+((((v39)*(0)))/(100)))+((((v40)*(0)))/(100)))+((((v41)*(0)))/(100)))+((((v42)*(0)))/(100)))+((((v43)*(0)))/(100)))+((((v44)*(0)))/(100)))+((((v45)*(0)))/(100)))+((((v46)*(0)))/(100)))+((((v47)*(0)))/(100)))+((((v48)*(0)))/(100)))+((((v49)*(0)))/(100)))+((((v50)*(0)))/(100)))+((((v51)*(0)))/(100)))+((((v52)*(0)))/(100)))+((((v53)*(0)))/(100)))+((((v54)*(0)))/(100)))+((((v55)*(0)))/(100)))+((((v56)*(0)))/(100)))+((((v57)*(0)))/(100)))+((((v58)*(0)))/(100)))+((((v59)*(0)))/(100)))+((((v60)*(0)))/(100)))+((((v61)*(0)))/(100)))+((((v62)*(0)))/(100)))+((((v63)*(0)))/(100)))+((((v64)*(0)))/(100)))+((((v65)*(0)))/(100)))+((((v66)*(0)))/(100)))+((((v67)*(0)))/(100)))+((((v68)*(0)))/(100)))+((((v69)*(0)))/(100)))+((((v70)*(0)))/(100)))+((((v71)*(0)))/(100)))+((((v72)*(0)))/(100)))+((((v73)*(0)))/(100)))+((((v74)*(0)))/(100)))+((((v75)*(6)))/(100)))+((((v76)*(7.3)))/(100)))+((((v77)*(0)))/(100)))+((((v78)*(31.5)))/(100)))+((((v79)*(11.12)))/(100)))+((((v80)*(8)))/(100)))+((((v81)*(20)))/(100)))+((((v82)*(6)))/(100)))+((((v83)*(2.49166666666667)))/(100)))+((((v84)*(0)))/(100)))+((((v85)*(0)))/(100)))+((((v86)*(0)))/(100)))+((((v87)*(0)))/(100)))+((((v88)*(0)))/(100)))+((((v89)*(0)))/(100)))+((((v90)*(0)))/(100)))+((((v91)*(0)))/(100)))+((((v92)*(0)))/(100)))+((((v93)*(0)))/(100)))+((((v94)*(0)))/(100)))+((((v95)*(0)))/(100)))+((((v96)*(0)))/(100)))+((((v97)*(0)))/(100)))+((((v98)*(0)))/(100)))+((((v99)*(6)))/(100)))+((((v100)*(7.3)))/(100)))+((((v101)*(0)))/(100)))+((((v102)*(31.5)))/(100)))+((((v103)*(11.12)))/(100)))+((((v104)*(8)))/(100)))+((((v105)*(20)))/(100)))+((((v106)*(6)))/(100)))+((((v107)*(2.49166666666667)))/(100)))+((((v108)*(11.12)))/(100)))+((((v109)*(8)))/(100)))+((((v110)*(20)))/(100)))+((((v111)*(6)))/(100)))+((((v112)*(2.49166666666667)))/(100)))+((((v113)*(2.49166666666667)))/(100)))+((((v114)*(11.12)))/(100)))+((((v115)*(8)))/(100)))+
 
 APM model error: string > 15000  characters
 Consider breaking up the line into multiple equations
 
 The may also be due to only using newline character CR
   instead of CR LF (for Windows) or LF (for MacOS/Linux) 
 To fix this problem, save APM file with appropriate newline characters
 
 STOPPING...
 


2018-12-06 14:32:41,214 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 676.4877698126267), (1, 1, 1)]
2018-12-06 14:32:41,214 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.7054185350666575, 'sio2': 91.61742638194256, 'cost': 0.6771550829907741}
2018-12-06 14:32:41,396 __main__ mainTask ERROR = Traceback (most recent call last):
  File "C:/Users/sun/PycharmProjects/optimizationproblem/gekkoSolution/mainTask.py", line 37, in <module>
    lp.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\gekkoSolution\gekkoProblem.py", line 46, in solve
    self.prob.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\gekko\gekko.py", line 682, in solve
    raise Exception(apm_error)
Exception:  @error: Max Equation Length
 Error with line number:  123
 i0=((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((((910.99486005)*(v1)))*(0.94)))/(100)))+((((((853.351)*(v2)))*(0.927)))/(100)))+((((((1039.8935286)*(v3)))*(1.0)))/(100)))+((((((770.6612881)*(v4)))*(0.685)))/(100)))+((((((500)*(v5)))*(0.8888)))/(100)))+((((((500)*(v6)))*(0.92)))/(100)))+((((((826.195501934952)*(v7)))*(0.8)))/(100)))+((((((989.88716)*(v8)))*(0.94)))/(100)))+((((((1130.5194048)*(v9)))*(0.9750833333333333)))/(100)))+((((((500)*(v10)))*(0.94)))/(100)))+((((((300)*(v11)))*(0.927)))/(100)))+((((((1069.8162944)*(v12)))*(1.0)))/(100)))+((((((1245.56)*(v13)))*(0.685)))/(100)))+((((((500)*(v14)))*(0.8888)))/(100)))+((((((825.711413030191)*(v15)))*(0.92)))/(100)))+((((((1004.658478)*(v16)))*(0.8)))/(100)))+((((((1129.8570048)*(v17)))*(0.94)))/(100)))+((((((300)*(v18)))*(0.9750833333333333)))/(100)))+((((((801.67994)*(v19)))*(0.94)))/(100)))+((((((834.2588482)*(v20)))*(0.927)))/(100)))+((((((991.6951428)*(v21)))*(1.0)))/(100)))+((((((500)*(v22)))*(0.685)))/(100)))+((((((886.96504)*(v23)))*(0.8888)))/(100)))+((((((1049.00673)*(v24)))*(0.92)))/(100)))+((((((1059.7526526)*(v25)))*(0.8)))/(100)))+((((((1097.7898072)*(v26)))*(0.94)))/(100)))+((((((500)*(v27)))*(0.9750833333333333)))/(100)))+((((((825.711413030191)*(v28)))*(0.94)))/(100)))+((((((1004.658478)*(v29)))*(0.927)))/(100)))+((((((1241.92)*(v30)))*(1.0)))/(100)))+((((((941.547504)*(v31)))*(0.685)))/(100)))+((((((826.7537594)*(v32)))*(0.8888)))/(100)))+((((((300)*(v33)))*(0.92)))/(100)))+((((((775.7532696)*(v34)))*(0.8)))/(100)))+((((((500)*(v35)))*(0.94)))/(100)))+((((((944.28)*(v36)))*(0.9750833333333333)))/(100)))+((((((612.08)*(v37)))*(1.0)))/(100)))+((((((500)*(v38)))*(1.0)))/(100)))+((((((473.38)*(v39)))*(1.0)))/(100)))+((((((925.96)*(v40)))*(1.0)))/(100)))+((((((484.27)*(v41)))*(1.0)))/(100)))+((((((780.55)*(v42)))*(1.0)))/(100)))+((((((434.35)*(v43)))*(1.0)))/(100)))+((((((1228.65)*(v44)))*(1.0)))/(100)))+((((((300)*(v45)))*(1.0)))/(100)))+((((((500)*(v46)))*(1.0)))/(100)))+((((((964.82)*(v47)))*(1.0)))/(100)))+((((((586.286222115809)*(v48)))*(1.0)))/(100)))+((((((500)*(v49)))*(1.0)))/(100)))+((((((0)*(v50)))*(1.0)))/(100)))+((((((925.96)*(v51)))*(1.0)))/(100)))+((((((405.863293435074)*(v52)))*(1.0)))/(100)))+((((((910.96)*(v53)))*(1.0)))/(100)))+((((((0)*(v54)))*(1.0)))/(100)))+((((((1242.28973578925)*(v55)))*(1.0)))/(100)))+((((((300)*(v56)))*(1.0)))/(100)))+((((((500)*(v57)))*(1.0)))/(100)))+((((((773.95)*(v58)))*(1.0)))/(100)))+((((((0)*(v59)))*(1.0)))/(100)))+((((((500)*(v60)))*(1.0)))/(100)))+((((((634.53)*(v61)))*(1.0)))/(100)))+((((((746.2)*(v62)))*(1.0)))/(100)))+((((((747.1)*(v63)))*(1.0)))/(100)))+((((((800)*(v64)))*(1.0)))/(100)))+((((((500)*(v65)))*(1.0)))/(100)))+((((((100)*(v66)))*(1.0)))/(100)))+((((((500)*(v67)))*(1.0)))/(100)))+((((((773.95)*(v68)))*(1.0)))/(100)))+((((((793.97)*(v69)))*(1.0)))/(100)))+((((((500)*(v70)))*(1.0)))/(100)))+((((((634.53)*(v71)))*(1.0)))/(100)))+((((((746.2)*(v72)))*(1.0)))/(100)))+((((((747.1)*(v73)))*(1.0)))/(100)))+((((((800)*(v74)))*(1.0)))/(100)))+((((((500)*(v75)))*(0.94)))/(100)))+((((((100)*(v76)))*(0.927)))/(100)))+((((((500)*(v77)))*(1.0)))/(100)))+((((((773.95)*(v78)))*(0.685)))/(100)))+((((((793.97)*(v79)))*(0.8888)))/(100)))+((((((500)*(v80)))*(0.92)))/(100)))+((((((634.53)*(v81)))*(0.8)))/(100)))+((((((746.2)*(v82)))*(0.94)))/(100)))+((((((747.1)*(v83)))*(0.9750833333333333)))/(100)))+((((((800)*(v84)))*(1.0)))/(100)))+((((((500)*(v85)))*(1.0)))/(100)))+((((((100)*(v86)))*(1.0)))/(100)))+((((((500)*(v87)))*(1.0)))/(100)))+((((((566.5)*(v88)))*(1.0)))/(100)))+((((((600.5)*(v89)))*(1.0)))/(100)))+((((((500)*(v90)))*(1.0)))/(100)))+((((((431.41)*(v91)))*(1.0)))/(100)))+((((((498.015344202792)*(v92)))*(1.0)))/(100)))+((((((466.846846846847)*(v93)))*(1.0)))/(100)))+((((((500)*(v94)))*(1.0)))/(100)))+((((((100)*(v95)))*(1.0)))/(100)))+((((((500)*(v96)))*(1.0)))/(100)))+((((((910.99486005)*(v97)))*(1.0)))/(100)))+((((((853.351)*(v98)))*(1.0)))/(100)))+((((((1039.8935286)*(v99)))*(0.94)))/(100)))+((((((770.6612881)*(v100)))*(0.927)))/(100)))+((((((500)*(v101)))*(1.0)))/(100)))+((((((500)*(v102)))*(0.685)))/(100)))+((((((826.195501934952)*(v103)))*(0.8888)))/(100)))+((((((989.88716)*(v104)))*(0.92)))/(100)))+((((((1130.5194048)*(v105)))*(0.8)))/(100)))+((((((500)*(v106)))*(0.94)))/(100)))+((((((300)*(v107)))*(0.9750833333333333)))/(100)))+((((((826.195501934952)*(v108)))*(0.8888)))/(100)))+((((((989.88716)*(v109)))*(0.92)))/(100)))+((((((1130.5194048)*(v110)))*(0.8)))/(100)))+((((((500)*(v111)))*(0.94)))/(100)))+((((((300)*(v112)))*(0.9750833333333333)))/(100)))+((((((300)*(v113)))*(0.9750833333333333)))/(100)))+((((((826.195501934952)*(v114)))*(0.8888)))/(100)))+((((((989.88716)*(v115)))*(0.92)))/(100)))+((((((1130.5194048)*(v116)))*(0.8)))/(100)))+((((((500)*(v117)))*(0.94)))/(100)))+((((((300)*(v118)))*(0.9750833333333333)))/(100))))/((1-((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((v1)*(6)))/(100)))+((((v2)*(7.3)))/(100)))+((((v3)*(0)))/(100)))+((((v4)*(31.5)))/(100)))+((((v5)*(11.12)))/(100)))+((((v6)*(8)))/(100)))+((((v7)*(20)))/(100)))+((((v8)*(6)))/(100)))+((((v9)*(2.49166666666667)))/(100)))+((((v10)*(6)))/(100)))+((((v11)*(7.3)))/(100)))+((((v12)*(0)))/(100)))+((((v13)*(31.5)))/(100)))+((((v14)*(11.12)))/(100)))+((((v15)*(8)))/(100)))+((((v16)*(20)))/(100)))+((((v17)*(6)))/(100)))+((((v18)*(2.49166666666667)))/(100)))+((((v19)*(6)))/(100)))+((((v20)*(7.3)))/(100)))+((((v21)*(0)))/(100)))+((((v22)*(31.5)))/(100)))+((((v23)*(11.12)))/(100)))+((((v24)*(8)))/(100)))+((((v25)*(20)))/(100)))+((((v26)*(6)))/(100)))+((((v27)*(2.49166666666667)))/(100)))+((((v28)*(6)))/(100)))+((((v29)*(7.3)))/(100)))+((((v30)*(0)))/(100)))+((((v31)*(31.5)))/(100)))+((((v32)*(11.12)))/(100)))+((((v33)*(8)))/(100)))+((((v34)*(20)))/(100)))+((((v35)*(6)))/(100)))+((((v36)*(2.49166666666667)))/(100)))+((((v37)*(0)))/(100)))+((((v38)*(0)))/(100)))+((((v39)*(0)))/(100)))+((((v40)*(0)))/(100)))+((((v41)*(0)))/(100)))+((((v42)*(0)))/(100)))+((((v43)*(0)))/(100)))+((((v44)*(0)))/(100)))+((((v45)*(0)))/(100)))+((((v46)*(0)))/(100)))+((((v47)*(0)))/(100)))+((((v48)*(0)))/(100)))+((((v49)*(0)))/(100)))+((((v50)*(0)))/(100)))+((((v51)*(0)))/(100)))+((((v52)*(0)))/(100)))+((((v53)*(0)))/(100)))+((((v54)*(0)))/(100)))+((((v55)*(0)))/(100)))+((((v56)*(0)))/(100)))+((((v57)*(0)))/(100)))+((((v58)*(0)))/(100)))+((((v59)*(0)))/(100)))+((((v60)*(0)))/(100)))+((((v61)*(0)))/(100)))+((((v62)*(0)))/(100)))+((((v63)*(0)))/(100)))+((((v64)*(0)))/(100)))+((((v65)*(0)))/(100)))+((((v66)*(0)))/(100)))+((((v67)*(0)))/(100)))+((((v68)*(0)))/(100)))+((((v69)*(0)))/(100)))+((((v70)*(0)))/(100)))+((((v71)*(0)))/(100)))+((((v72)*(0)))/(100)))+((((v73)*(0)))/(100)))+((((v74)*(0)))/(100)))+((((v75)*(6)))/(100)))+((((v76)*(7.3)))/(100)))+((((v77)*(0)))/(100)))+((((v78)*(31.5)))/(100)))+((((v79)*(11.12)))/(100)))+((((v80)*(8)))/(100)))+((((v81)*(20)))/(100)))+((((v82)*(6)))/(100)))+((((v83)*(2.49166666666667)))/(100)))+((((v84)*(0)))/(100)))+((((v85)*(0)))/(100)))+((((v86)*(0)))/(100)))+((((v87)*(0)))/(100)))+((((v88)*(0)))/(100)))+((((v89)*(0)))/(100)))+((((v90)*(0)))/(100)))+((((v91)*(0)))/(100)))+((((v92)*(0)))/(100)))+((((v93)*(0)))/(100)))+((((v94)*(0)))/(100)))+((((v95)*(0)))/(100)))+((((v96)*(0)))/(100)))+((((v97)*(0)))/(100)))+((((v98)*(0)))/(100)))+((((v99)*(6)))/(100)))+((((v100)*(7.3)))/(100)))+((((v101)*(0)))/(100)))+((((v102)*(31.5)))/(100)))+((((v103)*(11.12)))/(100)))+((((v104)*(8)))/(100)))+((((v105)*(20)))/(100)))+((((v106)*(6)))/(100)))+((((v107)*(2.49166666666667)))/(100)))+((((v108)*(11.12)))/(100)))+((((v109)*(8)))/(100)))+((((v110)*(20)))/(100)))+((((v111)*(6)))/(100)))+((((v112)*(2.49166666666667)))/(100)))+((((v113)*(2.49166666666667)))/(100)))+((((v114)*(11.12)))/(100)))+((((v115)*(8)))/(100)))+((((v116)*(20)))/(100)))+((((v117)*(6)))/(100)))+((((v118)*(2.49166666666667)))/(100))))/(100))))))/((1-((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((((2.63)*(v1)))*(0.94)))/(100)))+((((((6)*(v2)))*(0.927)))/(100)))+((((((1)*(v3)))*(1.0)))/(100)))+((((((13.63)*(v4)))*(0.685)))/(100)))+((((((9.5)*(v5)))*(0.8888)))/(100)))+((((((9)*(v6)))*(0.92)))/(100)))+((((((4.36)*(v7)))*(0.8)))/(100)))+((((((2)*(v8)))*(0.94)))/(100)))+((((((31.3234615384615)*(v9)))*(0.9750833333333333)))/(100)))+((((((2.63)*(v10)))*(0.94)))/(100)))+((((((6)*(v11)))*(0.927)))/(100)))+((((((1)*(v12)))*(1.0)))/(100)))+((((((13.63)*(v13)))*(0.685)))/(100)))+((((((9.5)*(v14)))*(0.8888)))/(100)))+((((((9)*(v15)))*(0.92)))/(100)))+((((((4.36)*(v16)))*(0.8)))/(100)))+((((((2)*(v17)))*(0.94)))/(100)))+((((((31.3234615384615)*(v18)))*(0.9750833333333333)))/(100)))+((((((0)*(v19)))*(0.94)))/(100)))+((((((0)*(v20)))*(0.927)))/(100)))+((((((0)*(v21)))*(1.0)))/(100)))+((((((0)*(v22)))*(0.685)))/(100)))+((((((0)*(v23)))*(0.8888)))/(100)))+((((((0)*(v24)))*(0.92)))/(100)))+((((((0)*(v25)))*(0.8)))/(100)))+((((((0)*(v26)))*(0.94)))/(100)))+((((((0)*(v27)))*(0.9750833333333333)))/(100)))+((((((0)*(v28)))*(0.94)))/(100)))+((((((0)*(v29)))*(0.927)))/(100)))+((((((0)*(v30)))*(1.0)))/(100)))+((((((0)*(v31)))*(0.685)))/(100)))+((((((0)*(v32)))*(0.8888)))/(100)))+((((((0)*(v33)))*(0.92)))/(100)))+((((((0)*(v34)))*(0.8)))/(100)))+((((((0)*(v35)))*(0.94)))/(100)))+((((((2.63)*(v36)))*(0.9750833333333333)))/(100)))+((((((6)*(v37)))*(1.0)))/(100)))+((((((1)*(v38)))*(1.0)))/(100)))+((((((13.63)*(v39)))*(1.0)))/(100)))+((((((9.5)*(v40)))*(1.0)))/(100)))+((((((9)*(v41)))*(1.0)))/(100)))+((((((4.36)*(v42)))*(1.0)))/(100)))+((((((2)*(v43)))*(1.0)))/(100)))+((((((31.3234615384615)*(v44)))*(1.0)))/(100)))+((((((0)*(v45)))*(1.0)))/(100)))+((((((0)*(v46)))*(1.0)))/(100)))+((((((0)*(v47)))*(1.0)))/(100)))+((((((0)*(v48)))*(1.0)))/(100)))+((((((0)*(v49)))*(1.0)))/(100)))+((((((0)*(v50)))*(1.0)))/(100)))+((((((0)*(v51)))*(1.0)))/(100)))+((((((0)*(v52)))*(1.0)))/(100)))+((((((0)*(v53)))*(1.0)))/(100)))+((((((0)*(v54)))*(1.0)))/(100)))+((((((0)*(v55)))*(1.0)))/(100)))+((((((0)*(v56)))*(1.0)))/(100)))+((((((0)*(v57)))*(1.0)))/(100)))+((((((0)*(v58)))*(1.0)))/(100)))+((((((0)*(v59)))*(1.0)))/(100)))+((((((2.63)*(v60)))*(1.0)))/(100)))+((((((6)*(v61)))*(1.0)))/(100)))+((((((1)*(v62)))*(1.0)))/(100)))+((((((13.63)*(v63)))*(1.0)))/(100)))+((((((9.5)*(v64)))*(1.0)))/(100)))+((((((9)*(v65)))*(1.0)))/(100)))+((((((4.36)*(v66)))*(1.0)))/(100)))+((((((2)*(v67)))*(1.0)))/(100)))+((((((31.3234615384615)*(v68)))*(1.0)))/(100)))+((((((0)*(v69)))*(1.0)))/(100)))+((((((0)*(v70)))*(1.0)))/(100)))+((((((0)*(v71)))*(1.0)))/(100)))+((((((0)*(v72)))*(1.0)))/(100)))+((((((0)*(v73)))*(1.0)))/(100)))+((((((0)*(v74)))*(1.0)))/(100)))+((((((0)*(v75)))*(0.94)))/(100)))+((((((0)*(v76)))*(0.927)))/(100)))+((((((0)*(v77)))*(1.0)))/(100)))+((((((0)*(v78)))*(0.685)))/(100)))+((((((0)*(v79)))*(0.8888)))/(100)))+((((((0)*(v80)))*(0.92)))/(100)))+((((((0)*(v81)))*(0.8)))/(100)))+((((((2.63)*(v82)))*(0.94)))/(100)))+((((((6)*(v83)))*(0.9750833333333333)))/(100)))+((((((1)*(v84)))*(1.0)))/(100)))+((((((13.63)*(v85)))*(1.0)))/(100)))+((((((9.5)*(v86)))*(1.0)))/(100)))+((((((9)*(v87)))*(1.0)))/(100)))+((((((4.36)*(v88)))*(1.0)))/(100)))+((((((2)*(v89)))*(1.0)))/(100)))+((((((31.3234615384615)*(v90)))*(1.0)))/(100)))+((((((0)*(v91)))*(1.0)))/(100)))+((((((0)*(v92)))*(1.0)))/(100)))+((((((0)*(v93)))*(1.0)))/(100)))+((((((0)*(v94)))*(1.0)))/(100)))+((((((0)*(v95)))*(1.0)))/(100)))+((((((2.63)*(v96)))*(1.0)))/(100)))+((((((6)*(v97)))*(1.0)))/(100)))+((((((1)*(v98)))*(1.0)))/(100)))+((((((13.63)*(v99)))*(0.94)))/(100)))+((((((9.5)*(v100)))*(0.927)))/(100)))+((((((9)*(v101)))*(1.0)))/(100)))+((((((4.36)*(v102)))*(0.685)))/(100)))+((((((2)*(v103)))*(0.8888)))/(100)))+((((((31.3234615384615)*(v104)))*(0.92)))/(100)))+((((((0)*(v105)))*(0.8)))/(100)))+((((((0)*(v106)))*(0.94)))/(100)))+((((((0)*(v107)))*(0.9750833333333333)))/(100)))+((((((2)*(v108)))*(0.8888)))/(100)))+((((((31.3234615384615)*(v109)))*(0.92)))/(100)))+((((((0)*(v110)))*(0.8)))/(100)))+((((((0)*(v111)))*(0.94)))/(100)))+((((((0)*(v112)))*(0.9750833333333333)))/(100)))+((((((0)*(v113)))*(0.9750833333333333)))/(100)))+((((((2)*(v114)))*(0.8888)))/(100)))+((((((31.3234615384615)*(v115)))*(0.92)))/(100)))+((((((0)*(v116)))*(0.8)))/(100)))+((((((0)*(v117)))*(0.94)))/(100)))+((((((0)*(v118)))*(0.9750833333333333)))/(100))))/((1-((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((v1)*(6)))/(100)))+((((v2)*(7.3)))/(100)))+((((v3)*(0)))/(100)))+((((v4)*(31.5)))/(100)))+((((v5)*(11.12)))/(100)))+((((v6)*(8)))/(100)))+((((v7)*(20)))/(100)))+((((v8)*(6)))/(100)))+((((v9)*(2.49166666666667)))/(100)))+((((v10)*(6)))/(100)))+((((v11)*(7.3)))/(100)))+((((v12)*(0)))/(100)))+((((v13)*(31.5)))/(100)))+((((v14)*(11.12)))/(100)))+((((v15)*(8)))/(100)))+((((v16)*(20)))/(100)))+((((v17)*(6)))/(100)))+((((v18)*(2.49166666666667)))/(100)))+((((v19)*(6)))/(100)))+((((v20)*(7.3)))/(100)))+((((v21)*(0)))/(100)))+((((v22)*(31.5)))/(100)))+((((v23)*(11.12)))/(100)))+((((v24)*(8)))/(100)))+((((v25)*(20)))/(100)))+((((v26)*(6)))/(100)))+((((v27)*(2.49166666666667)))/(100)))+((((v28)*(6)))/(100)))+((((v29)*(7.3)))/(100)))+((((v30)*(0)))/(100)))+((((v31)*(31.5)))/(100)))+((((v32)*(11.12)))/(100)))+((((v33)*(8)))/(100)))+((((v34)*(20)))/(100)))+((((v35)*(6)))/(100)))+((((v36)*(2.49166666666667)))/(100)))+((((v37)*(0)))/(100)))+((((v38)*(0)))/(100)))+((((v39)*(0)))/(100)))+((((v40)*(0)))/(100)))+((((v41)*(0)))/(100)))+((((v42)*(0)))/(100)))+((((v43)*(0)))/(100)))+((((v44)*(0)))/(100)))+((((v45)*(0)))/(100)))+((((v46)*(0)))/(100)))+((((v47)*(0)))/(100)))+((((v48)*(0)))/(100)))+((((v49)*(0)))/(100)))+((((v50)*(0)))/(100)))+((((v51)*(0)))/(100)))+((((v52)*(0)))/(100)))+((((v53)*(0)))/(100)))+((((v54)*(0)))/(100)))+((((v55)*(0)))/(100)))+((((v56)*(0)))/(100)))+((((v57)*(0)))/(100)))+((((v58)*(0)))/(100)))+((((v59)*(0)))/(100)))+((((v60)*(0)))/(100)))+((((v61)*(0)))/(100)))+((((v62)*(0)))/(100)))+((((v63)*(0)))/(100)))+((((v64)*(0)))/(100)))+((((v65)*(0)))/(100)))+((((v66)*(0)))/(100)))+((((v67)*(0)))/(100)))+((((v68)*(0)))/(100)))+((((v69)*(0)))/(100)))+((((v70)*(0)))/(100)))+((((v71)*(0)))/(100)))+((((v72)*(0)))/(100)))+((((v73)*(0)))/(100)))+((((v74)*(0)))/(100)))+((((v75)*(6)))/(100)))+((((v76)*(7.3)))/(100)))+((((v77)*(0)))/(100)))+((((v78)*(31.5)))/(100)))+((((v79)*(11.12)))/(100)))+((((v80)*(8)))/(100)))+((((v81)*(20)))/(100)))+((((v82)*(6)))/(100)))+((((v83)*(2.49166666666667)))/(100)))+((((v84)*(0)))/(100)))+((((v85)*(0)))/(100)))+((((v86)*(0)))/(100)))+((((v87)*(0)))/(100)))+((((v88)*(0)))/(100)))+((((v89)*(0)))/(100)))+((((v90)*(0)))/(100)))+((((v91)*(0)))/(100)))+((((v92)*(0)))/(100)))+((((v93)*(0)))/(100)))+((((v94)*(0)))/(100)))+((((v95)*(0)))/(100)))+((((v96)*(0)))/(100)))+((((v97)*(0)))/(100)))+((((v98)*(0)))/(100)))+((((v99)*(6)))/(100)))+((((v100)*(7.3)))/(100)))+((((v101)*(0)))/(100)))+((((v102)*(31.5)))/(100)))+((((v103)*(11.12)))/(100)))+((((v104)*(8)))/(100)))+((((v105)*(20)))/(100)))+((((v106)*(6)))/(100)))+((((v107)*(2.49166666666667)))/(100)))+((((v108)*(11.12)))/(100)))+((((v109)*(8)))/(100)))+((((v110)*(20)))/(100)))+((((v111)*(6)))/(100)))+((((v112)*(2.49166666666667)))/(100)))+((((v113)*(2.49166666666667)))/(100)))+((((v114)*(11.12)))/(100)))+((((v115)*(8)))/(100)))+((((v116)*(20)))/(100)))+((((v117)*(6)))/(100)))+((((v118)*(2.49166666666667)))/(100))))/(100))))))/(100))))
 
 APM model error: string > 15000  characters
 Consider breaking up the line into multiple equations
 
 The may also be due to only using newline character CR
   instead of CR LF (for Windows) or LF (for MacOS/Linux) 
 To fix this problem, save APM file with appropriate newline characters
 
 STOPPING...
 


2018-12-06 14:32:54,364 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 679.7056139990594), (1, 1, 1)]
2018-12-06 14:32:54,364 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.705665560945339, 'sio2': 91.62036351964008, 'cost': 0.673970919414584}
2018-12-06 14:32:54,542 __main__ mainTask ERROR = Traceback (most recent call last):
  File "C:/Users/sun/PycharmProjects/optimizationproblem/gekkoSolution/mainTask.py", line 37, in <module>
    lp.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\gekkoSolution\gekkoProblem.py", line 46, in solve
    self.prob.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\gekko\gekko.py", line 682, in solve
    raise Exception(apm_error)
Exception:  @error: Max Equation Length
 Error with line number:  122
 i0=(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((((910.99486005)*(v1)))*(0.94)))/(100)))+((((((853.351)*(v2)))*(0.927)))/(100)))+((((((1039.8935286)*(v3)))*(1.0)))/(100)))+((((((770.6612881)*(v4)))*(0.685)))/(100)))+((((((500)*(v5)))*(0.8888)))/(100)))+((((((500)*(v6)))*(0.92)))/(100)))+((((((826.195501934952)*(v7)))*(0.8)))/(100)))+((((((989.88716)*(v8)))*(0.94)))/(100)))+((((((1130.5194048)*(v9)))*(0.9750833333333333)))/(100)))+((((((500)*(v10)))*(0.94)))/(100)))+((((((300)*(v11)))*(0.927)))/(100)))+((((((1069.8162944)*(v12)))*(1.0)))/(100)))+((((((1245.56)*(v13)))*(0.685)))/(100)))+((((((500)*(v14)))*(0.8888)))/(100)))+((((((825.711413030191)*(v15)))*(0.92)))/(100)))+((((((1004.658478)*(v16)))*(0.8)))/(100)))+((((((1129.8570048)*(v17)))*(0.94)))/(100)))+((((((300)*(v18)))*(0.9750833333333333)))/(100)))+((((((801.67994)*(v19)))*(0.94)))/(100)))+((((((834.2588482)*(v20)))*(0.927)))/(100)))+((((((991.6951428)*(v21)))*(1.0)))/(100)))+((((((500)*(v22)))*(0.685)))/(100)))+((((((886.96504)*(v23)))*(0.8888)))/(100)))+((((((1049.00673)*(v24)))*(0.92)))/(100)))+((((((1059.7526526)*(v25)))*(0.8)))/(100)))+((((((1097.7898072)*(v26)))*(0.94)))/(100)))+((((((500)*(v27)))*(0.9750833333333333)))/(100)))+((((((825.711413030191)*(v28)))*(0.94)))/(100)))+((((((1004.658478)*(v29)))*(0.927)))/(100)))+((((((1241.92)*(v30)))*(1.0)))/(100)))+((((((941.547504)*(v31)))*(0.685)))/(100)))+((((((826.7537594)*(v32)))*(0.8888)))/(100)))+((((((300)*(v33)))*(0.92)))/(100)))+((((((775.7532696)*(v34)))*(0.8)))/(100)))+((((((500)*(v35)))*(0.94)))/(100)))+((((((944.28)*(v36)))*(0.9750833333333333)))/(100)))+((((((612.08)*(v37)))*(1.0)))/(100)))+((((((500)*(v38)))*(1.0)))/(100)))+((((((473.38)*(v39)))*(1.0)))/(100)))+((((((925.96)*(v40)))*(1.0)))/(100)))+((((((484.27)*(v41)))*(1.0)))/(100)))+((((((780.55)*(v42)))*(1.0)))/(100)))+((((((434.35)*(v43)))*(1.0)))/(100)))+((((((1228.65)*(v44)))*(1.0)))/(100)))+((((((300)*(v45)))*(1.0)))/(100)))+((((((500)*(v46)))*(1.0)))/(100)))+((((((964.82)*(v47)))*(1.0)))/(100)))+((((((586.286222115809)*(v48)))*(1.0)))/(100)))+((((((500)*(v49)))*(1.0)))/(100)))+((((((0)*(v50)))*(1.0)))/(100)))+((((((925.96)*(v51)))*(1.0)))/(100)))+((((((405.863293435074)*(v52)))*(1.0)))/(100)))+((((((910.96)*(v53)))*(1.0)))/(100)))+((((((0)*(v54)))*(1.0)))/(100)))+((((((1242.28973578925)*(v55)))*(1.0)))/(100)))+((((((300)*(v56)))*(1.0)))/(100)))+((((((500)*(v57)))*(1.0)))/(100)))+((((((773.95)*(v58)))*(1.0)))/(100)))+((((((0)*(v59)))*(1.0)))/(100)))+((((((500)*(v60)))*(1.0)))/(100)))+((((((634.53)*(v61)))*(1.0)))/(100)))+((((((746.2)*(v62)))*(1.0)))/(100)))+((((((747.1)*(v63)))*(1.0)))/(100)))+((((((800)*(v64)))*(1.0)))/(100)))+((((((500)*(v65)))*(1.0)))/(100)))+((((((100)*(v66)))*(1.0)))/(100)))+((((((500)*(v67)))*(1.0)))/(100)))+((((((773.95)*(v68)))*(1.0)))/(100)))+((((((793.97)*(v69)))*(1.0)))/(100)))+((((((500)*(v70)))*(1.0)))/(100)))+((((((634.53)*(v71)))*(1.0)))/(100)))+((((((746.2)*(v72)))*(1.0)))/(100)))+((((((747.1)*(v73)))*(1.0)))/(100)))+((((((800)*(v74)))*(1.0)))/(100)))+((((((500)*(v75)))*(0.94)))/(100)))+((((((100)*(v76)))*(0.927)))/(100)))+((((((500)*(v77)))*(1.0)))/(100)))+((((((773.95)*(v78)))*(0.685)))/(100)))+((((((793.97)*(v79)))*(0.8888)))/(100)))+((((((500)*(v80)))*(0.92)))/(100)))+((((((634.53)*(v81)))*(0.8)))/(100)))+((((((746.2)*(v82)))*(0.94)))/(100)))+((((((747.1)*(v83)))*(0.9750833333333333)))/(100)))+((((((800)*(v84)))*(1.0)))/(100)))+((((((500)*(v85)))*(1.0)))/(100)))+((((((100)*(v86)))*(1.0)))/(100)))+((((((500)*(v87)))*(1.0)))/(100)))+((((((566.5)*(v88)))*(1.0)))/(100)))+((((((600.5)*(v89)))*(1.0)))/(100)))+((((((500)*(v90)))*(1.0)))/(100)))+((((((431.41)*(v91)))*(1.0)))/(100)))+((((((498.015344202792)*(v92)))*(1.0)))/(100)))+((((((466.846846846847)*(v93)))*(1.0)))/(100)))+((((((500)*(v94)))*(1.0)))/(100)))+((((((100)*(v95)))*(1.0)))/(100)))+((((((500)*(v96)))*(1.0)))/(100)))+((((((910.99486005)*(v97)))*(1.0)))/(100)))+((((((853.351)*(v98)))*(1.0)))/(100)))+((((((1039.8935286)*(v99)))*(0.94)))/(100)))+((((((770.6612881)*(v100)))*(0.927)))/(100)))+((((((500)*(v101)))*(1.0)))/(100)))+((((((500)*(v102)))*(0.685)))/(100)))+((((((826.195501934952)*(v103)))*(0.8888)))/(100)))+((((((989.88716)*(v104)))*(0.92)))/(100)))+((((((1130.5194048)*(v105)))*(0.8)))/(100)))+((((((500)*(v106)))*(0.94)))/(100)))+((((((300)*(v107)))*(0.9750833333333333)))/(100)))+((((((826.195501934952)*(v108)))*(0.8888)))/(100)))+((((((989.88716)*(v109)))*(0.92)))/(100)))+((((((1130.5194048)*(v110)))*(0.8)))/(100)))+((((((500)*(v111)))*(0.94)))/(100)))+((((((300)*(v112)))*(0.9750833333333333)))/(100)))+((((((300)*(v113)))*(0.9750833333333333)))/(100)))+((((((826.195501934952)*(v114)))*(0.8888)))/(100)))+((((((989.88716)*(v115)))*(0.92)))/(100)))+((((((1130.5194048)*(v116)))*(0.8)))/(100)))+((((((500)*(v117)))*(0.94)))/(100))))/((1-(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((v1)*(6)))/(100)))+((((v2)*(7.3)))/(100)))+((((v3)*(0)))/(100)))+((((v4)*(31.5)))/(100)))+((((v5)*(11.12)))/(100)))+((((v6)*(8)))/(100)))+((((v7)*(20)))/(100)))+((((v8)*(6)))/(100)))+((((v9)*(2.49166666666667)))/(100)))+((((v10)*(6)))/(100)))+((((v11)*(7.3)))/(100)))+((((v12)*(0)))/(100)))+((((v13)*(31.5)))/(100)))+((((v14)*(11.12)))/(100)))+((((v15)*(8)))/(100)))+((((v16)*(20)))/(100)))+((((v17)*(6)))/(100)))+((((v18)*(2.49166666666667)))/(100)))+((((v19)*(6)))/(100)))+((((v20)*(7.3)))/(100)))+((((v21)*(0)))/(100)))+((((v22)*(31.5)))/(100)))+((((v23)*(11.12)))/(100)))+((((v24)*(8)))/(100)))+((((v25)*(20)))/(100)))+((((v26)*(6)))/(100)))+((((v27)*(2.49166666666667)))/(100)))+((((v28)*(6)))/(100)))+((((v29)*(7.3)))/(100)))+((((v30)*(0)))/(100)))+((((v31)*(31.5)))/(100)))+((((v32)*(11.12)))/(100)))+((((v33)*(8)))/(100)))+((((v34)*(20)))/(100)))+((((v35)*(6)))/(100)))+((((v36)*(2.49166666666667)))/(100)))+((((v37)*(0)))/(100)))+((((v38)*(0)))/(100)))+((((v39)*(0)))/(100)))+((((v40)*(0)))/(100)))+((((v41)*(0)))/(100)))+((((v42)*(0)))/(100)))+((((v43)*(0)))/(100)))+((((v44)*(0)))/(100)))+((((v45)*(0)))/(100)))+((((v46)*(0)))/(100)))+((((v47)*(0)))/(100)))+((((v48)*(0)))/(100)))+((((v49)*(0)))/(100)))+((((v50)*(0)))/(100)))+((((v51)*(0)))/(100)))+((((v52)*(0)))/(100)))+((((v53)*(0)))/(100)))+((((v54)*(0)))/(100)))+((((v55)*(0)))/(100)))+((((v56)*(0)))/(100)))+((((v57)*(0)))/(100)))+((((v58)*(0)))/(100)))+((((v59)*(0)))/(100)))+((((v60)*(0)))/(100)))+((((v61)*(0)))/(100)))+((((v62)*(0)))/(100)))+((((v63)*(0)))/(100)))+((((v64)*(0)))/(100)))+((((v65)*(0)))/(100)))+((((v66)*(0)))/(100)))+((((v67)*(0)))/(100)))+((((v68)*(0)))/(100)))+((((v69)*(0)))/(100)))+((((v70)*(0)))/(100)))+((((v71)*(0)))/(100)))+((((v72)*(0)))/(100)))+((((v73)*(0)))/(100)))+((((v74)*(0)))/(100)))+((((v75)*(6)))/(100)))+((((v76)*(7.3)))/(100)))+((((v77)*(0)))/(100)))+((((v78)*(31.5)))/(100)))+((((v79)*(11.12)))/(100)))+((((v80)*(8)))/(100)))+((((v81)*(20)))/(100)))+((((v82)*(6)))/(100)))+((((v83)*(2.49166666666667)))/(100)))+((((v84)*(0)))/(100)))+((((v85)*(0)))/(100)))+((((v86)*(0)))/(100)))+((((v87)*(0)))/(100)))+((((v88)*(0)))/(100)))+((((v89)*(0)))/(100)))+((((v90)*(0)))/(100)))+((((v91)*(0)))/(100)))+((((v92)*(0)))/(100)))+((((v93)*(0)))/(100)))+((((v94)*(0)))/(100)))+((((v95)*(0)))/(100)))+((((v96)*(0)))/(100)))+((((v97)*(0)))/(100)))+((((v98)*(0)))/(100)))+((((v99)*(6)))/(100)))+((((v100)*(7.3)))/(100)))+((((v101)*(0)))/(100)))+((((v102)*(31.5)))/(100)))+((((v103)*(11.12)))/(100)))+((((v104)*(8)))/(100)))+((((v105)*(20)))/(100)))+((((v106)*(6)))/(100)))+((((v107)*(2.49166666666667)))/(100)))+((((v108)*(11.12)))/(100)))+((((v109)*(8)))/(100)))+((((v110)*(20)))/(100)))+((((v111)*(6)))/(100)))+((((v112)*(2.49166666666667)))/(100)))+((((v113)*(2.49166666666667)))/(100)))+((((v114)*(11.12)))/(100)))+((((v115)*(8)))/(100)))+((((v116)*(20)))/(100)))+((((v117)*(6)))/(100))))/(100))))))/((1-(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((((2.63)*(v1)))*(0.94)))/(100)))+((((((6)*(v2)))*(0.927)))/(100)))+((((((1)*(v3)))*(1.0)))/(100)))+((((((13.63)*(v4)))*(0.685)))/(100)))+((((((9.5)*(v5)))*(0.8888)))/(100)))+((((((9)*(v6)))*(0.92)))/(100)))+((((((4.36)*(v7)))*(0.8)))/(100)))+((((((2)*(v8)))*(0.94)))/(100)))+((((((31.3234615384615)*(v9)))*(0.9750833333333333)))/(100)))+((((((2.63)*(v10)))*(0.94)))/(100)))+((((((6)*(v11)))*(0.927)))/(100)))+((((((1)*(v12)))*(1.0)))/(100)))+((((((13.63)*(v13)))*(0.685)))/(100)))+((((((9.5)*(v14)))*(0.8888)))/(100)))+((((((9)*(v15)))*(0.92)))/(100)))+((((((4.36)*(v16)))*(0.8)))/(100)))+((((((2)*(v17)))*(0.94)))/(100)))+((((((31.3234615384615)*(v18)))*(0.9750833333333333)))/(100)))+((((((0)*(v19)))*(0.94)))/(100)))+((((((0)*(v20)))*(0.927)))/(100)))+((((((0)*(v21)))*(1.0)))/(100)))+((((((0)*(v22)))*(0.685)))/(100)))+((((((0)*(v23)))*(0.8888)))/(100)))+((((((0)*(v24)))*(0.92)))/(100)))+((((((0)*(v25)))*(0.8)))/(100)))+((((((0)*(v26)))*(0.94)))/(100)))+((((((0)*(v27)))*(0.9750833333333333)))/(100)))+((((((0)*(v28)))*(0.94)))/(100)))+((((((0)*(v29)))*(0.927)))/(100)))+((((((0)*(v30)))*(1.0)))/(100)))+((((((0)*(v31)))*(0.685)))/(100)))+((((((0)*(v32)))*(0.8888)))/(100)))+((((((0)*(v33)))*(0.92)))/(100)))+((((((0)*(v34)))*(0.8)))/(100)))+((((((0)*(v35)))*(0.94)))/(100)))+((((((2.63)*(v36)))*(0.9750833333333333)))/(100)))+((((((6)*(v37)))*(1.0)))/(100)))+((((((1)*(v38)))*(1.0)))/(100)))+((((((13.63)*(v39)))*(1.0)))/(100)))+((((((9.5)*(v40)))*(1.0)))/(100)))+((((((9)*(v41)))*(1.0)))/(100)))+((((((4.36)*(v42)))*(1.0)))/(100)))+((((((2)*(v43)))*(1.0)))/(100)))+((((((31.3234615384615)*(v44)))*(1.0)))/(100)))+((((((0)*(v45)))*(1.0)))/(100)))+((((((0)*(v46)))*(1.0)))/(100)))+((((((0)*(v47)))*(1.0)))/(100)))+((((((0)*(v48)))*(1.0)))/(100)))+((((((0)*(v49)))*(1.0)))/(100)))+((((((0)*(v50)))*(1.0)))/(100)))+((((((0)*(v51)))*(1.0)))/(100)))+((((((0)*(v52)))*(1.0)))/(100)))+((((((0)*(v53)))*(1.0)))/(100)))+((((((0)*(v54)))*(1.0)))/(100)))+((((((0)*(v55)))*(1.0)))/(100)))+((((((0)*(v56)))*(1.0)))/(100)))+((((((0)*(v57)))*(1.0)))/(100)))+((((((0)*(v58)))*(1.0)))/(100)))+((((((0)*(v59)))*(1.0)))/(100)))+((((((2.63)*(v60)))*(1.0)))/(100)))+((((((6)*(v61)))*(1.0)))/(100)))+((((((1)*(v62)))*(1.0)))/(100)))+((((((13.63)*(v63)))*(1.0)))/(100)))+((((((9.5)*(v64)))*(1.0)))/(100)))+((((((9)*(v65)))*(1.0)))/(100)))+((((((4.36)*(v66)))*(1.0)))/(100)))+((((((2)*(v67)))*(1.0)))/(100)))+((((((31.3234615384615)*(v68)))*(1.0)))/(100)))+((((((0)*(v69)))*(1.0)))/(100)))+((((((0)*(v70)))*(1.0)))/(100)))+((((((0)*(v71)))*(1.0)))/(100)))+((((((0)*(v72)))*(1.0)))/(100)))+((((((0)*(v73)))*(1.0)))/(100)))+((((((0)*(v74)))*(1.0)))/(100)))+((((((0)*(v75)))*(0.94)))/(100)))+((((((0)*(v76)))*(0.927)))/(100)))+((((((0)*(v77)))*(1.0)))/(100)))+((((((0)*(v78)))*(0.685)))/(100)))+((((((0)*(v79)))*(0.8888)))/(100)))+((((((0)*(v80)))*(0.92)))/(100)))+((((((0)*(v81)))*(0.8)))/(100)))+((((((2.63)*(v82)))*(0.94)))/(100)))+((((((6)*(v83)))*(0.9750833333333333)))/(100)))+((((((1)*(v84)))*(1.0)))/(100)))+((((((13.63)*(v85)))*(1.0)))/(100)))+((((((9.5)*(v86)))*(1.0)))/(100)))+((((((9)*(v87)))*(1.0)))/(100)))+((((((4.36)*(v88)))*(1.0)))/(100)))+((((((2)*(v89)))*(1.0)))/(100)))+((((((31.3234615384615)*(v90)))*(1.0)))/(100)))+((((((0)*(v91)))*(1.0)))/(100)))+((((((0)*(v92)))*(1.0)))/(100)))+((((((0)*(v93)))*(1.0)))/(100)))+((((((0)*(v94)))*(1.0)))/(100)))+((((((0)*(v95)))*(1.0)))/(100)))+((((((2.63)*(v96)))*(1.0)))/(100)))+((((((6)*(v97)))*(1.0)))/(100)))+((((((1)*(v98)))*(1.0)))/(100)))+((((((13.63)*(v99)))*(0.94)))/(100)))+((((((9.5)*(v100)))*(0.927)))/(100)))+((((((9)*(v101)))*(1.0)))/(100)))+((((((4.36)*(v102)))*(0.685)))/(100)))+((((((2)*(v103)))*(0.8888)))/(100)))+((((((31.3234615384615)*(v104)))*(0.92)))/(100)))+((((((0)*(v105)))*(0.8)))/(100)))+((((((0)*(v106)))*(0.94)))/(100)))+((((((0)*(v107)))*(0.9750833333333333)))/(100)))+((((((2)*(v108)))*(0.8888)))/(100)))+((((((31.3234615384615)*(v109)))*(0.92)))/(100)))+((((((0)*(v110)))*(0.8)))/(100)))+((((((0)*(v111)))*(0.94)))/(100)))+((((((0)*(v112)))*(0.9750833333333333)))/(100)))+((((((0)*(v113)))*(0.9750833333333333)))/(100)))+((((((2)*(v114)))*(0.8888)))/(100)))+((((((31.3234615384615)*(v115)))*(0.92)))/(100)))+((((((0)*(v116)))*(0.8)))/(100)))+((((((0)*(v117)))*(0.94)))/(100))))/((1-(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((v1)*(6)))/(100)))+((((v2)*(7.3)))/(100)))+((((v3)*(0)))/(100)))+((((v4)*(31.5)))/(100)))+((((v5)*(11.12)))/(100)))+((((v6)*(8)))/(100)))+((((v7)*(20)))/(100)))+((((v8)*(6)))/(100)))+((((v9)*(2.49166666666667)))/(100)))+((((v10)*(6)))/(100)))+((((v11)*(7.3)))/(100)))+((((v12)*(0)))/(100)))+((((v13)*(31.5)))/(100)))+((((v14)*(11.12)))/(100)))+((((v15)*(8)))/(100)))+((((v16)*(20)))/(100)))+((((v17)*(6)))/(100)))+((((v18)*(2.49166666666667)))/(100)))+((((v19)*(6)))/(100)))+((((v20)*(7.3)))/(100)))+((((v21)*(0)))/(100)))+((((v22)*(31.5)))/(100)))+((((v23)*(11.12)))/(100)))+((((v24)*(8)))/(100)))+((((v25)*(20)))/(100)))+((((v26)*(6)))/(100)))+((((v27)*(2.49166666666667)))/(100)))+((((v28)*(6)))/(100)))+((((v29)*(7.3)))/(100)))+((((v30)*(0)))/(100)))+((((v31)*(31.5)))/(100)))+((((v32)*(11.12)))/(100)))+((((v33)*(8)))/(100)))+((((v34)*(20)))/(100)))+((((v35)*(6)))/(100)))+((((v36)*(2.49166666666667)))/(100)))+((((v37)*(0)))/(100)))+((((v38)*(0)))/(100)))+((((v39)*(0)))/(100)))+((((v40)*(0)))/(100)))+((((v41)*(0)))/(100)))+((((v42)*(0)))/(100)))+((((v43)*(0)))/(100)))+((((v44)*(0)))/(100)))+((((v45)*(0)))/(100)))+((((v46)*(0)))/(100)))+((((v47)*(0)))/(100)))+((((v48)*(0)))/(100)))+((((v49)*(0)))/(100)))+((((v50)*(0)))/(100)))+((((v51)*(0)))/(100)))+((((v52)*(0)))/(100)))+((((v53)*(0)))/(100)))+((((v54)*(0)))/(100)))+((((v55)*(0)))/(100)))+((((v56)*(0)))/(100)))+((((v57)*(0)))/(100)))+((((v58)*(0)))/(100)))+((((v59)*(0)))/(100)))+((((v60)*(0)))/(100)))+((((v61)*(0)))/(100)))+((((v62)*(0)))/(100)))+((((v63)*(0)))/(100)))+((((v64)*(0)))/(100)))+((((v65)*(0)))/(100)))+((((v66)*(0)))/(100)))+((((v67)*(0)))/(100)))+((((v68)*(0)))/(100)))+((((v69)*(0)))/(100)))+((((v70)*(0)))/(100)))+((((v71)*(0)))/(100)))+((((v72)*(0)))/(100)))+((((v73)*(0)))/(100)))+((((v74)*(0)))/(100)))+((((v75)*(6)))/(100)))+((((v76)*(7.3)))/(100)))+((((v77)*(0)))/(100)))+((((v78)*(31.5)))/(100)))+((((v79)*(11.12)))/(100)))+((((v80)*(8)))/(100)))+((((v81)*(20)))/(100)))+((((v82)*(6)))/(100)))+((((v83)*(2.49166666666667)))/(100)))+((((v84)*(0)))/(100)))+((((v85)*(0)))/(100)))+((((v86)*(0)))/(100)))+((((v87)*(0)))/(100)))+((((v88)*(0)))/(100)))+((((v89)*(0)))/(100)))+((((v90)*(0)))/(100)))+((((v91)*(0)))/(100)))+((((v92)*(0)))/(100)))+((((v93)*(0)))/(100)))+((((v94)*(0)))/(100)))+((((v95)*(0)))/(100)))+((((v96)*(0)))/(100)))+((((v97)*(0)))/(100)))+((((v98)*(0)))/(100)))+((((v99)*(6)))/(100)))+((((v100)*(7.3)))/(100)))+((((v101)*(0)))/(100)))+((((v102)*(31.5)))/(100)))+((((v103)*(11.12)))/(100)))+((((v104)*(8)))/(100)))+((((v105)*(20)))/(100)))+((((v106)*(6)))/(100)))+((((v107)*(2.49166666666667)))/(100)))+((((v108)*(11.12)))/(100)))+((((v109)*(8)))/(100)))+((((v110)*(20)))/(100)))+((((v111)*(6)))/(100)))+((((v112)*(2.49166666666667)))/(100)))+((((v113)*(2.49166666666667)))/(100)))+((((v114)*(11.12)))/(100)))+((((v115)*(8)))/(100)))+((((v116)*(20)))/(100)))+((((v117)*(6)))/(100))))/(100))))))/(100))))))*(1))
 
 APM model error: string > 15000  characters
 Consider breaking up the line into multiple equations
 
 The may also be due to only using newline character CR
   instead of CR LF (for Windows) or LF (for MacOS/Linux) 
 To fix this problem, save APM file with appropriate newline characters
 
 STOPPING...
 


2018-12-06 14:45:24,189 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 679.7056139990594), (1, 1, 1)]
2018-12-06 14:45:24,189 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.705665560945339, 'sio2': 91.62036351964008, 'cost': 0.673970919414584}
2018-12-06 14:45:24,373 __main__ mainTask ERROR = Traceback (most recent call last):
  File "C:/Users/sun/PycharmProjects/optimizationproblem/gekkoSolution/mainTask.py", line 37, in <module>
    lp.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\gekkoSolution\gekkoProblem.py", line 46, in solve
    self.prob.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\gekko\gekko.py", line 682, in solve
    raise Exception(apm_error)
Exception:  @error: Max Equation Length
 Error with line number:  122
 i0=(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((((910.99486005)*(v1)))*(0.94)))/(100)))+((((((853.351)*(v2)))*(0.927)))/(100)))+((((((1039.8935286)*(v3)))*(1.0)))/(100)))+((((((770.6612881)*(v4)))*(0.685)))/(100)))+((((((500)*(v5)))*(0.8888)))/(100)))+((((((500)*(v6)))*(0.92)))/(100)))+((((((826.195501934952)*(v7)))*(0.8)))/(100)))+((((((989.88716)*(v8)))*(0.94)))/(100)))+((((((1130.5194048)*(v9)))*(0.9750833333333333)))/(100)))+((((((500)*(v10)))*(0.94)))/(100)))+((((((300)*(v11)))*(0.927)))/(100)))+((((((1069.8162944)*(v12)))*(1.0)))/(100)))+((((((1245.56)*(v13)))*(0.685)))/(100)))+((((((500)*(v14)))*(0.8888)))/(100)))+((((((825.711413030191)*(v15)))*(0.92)))/(100)))+((((((1004.658478)*(v16)))*(0.8)))/(100)))+((((((1129.8570048)*(v17)))*(0.94)))/(100)))+((((((300)*(v18)))*(0.9750833333333333)))/(100)))+((((((801.67994)*(v19)))*(0.94)))/(100)))+((((((834.2588482)*(v20)))*(0.927)))/(100)))+((((((991.6951428)*(v21)))*(1.0)))/(100)))+((((((500)*(v22)))*(0.685)))/(100)))+((((((886.96504)*(v23)))*(0.8888)))/(100)))+((((((1049.00673)*(v24)))*(0.92)))/(100)))+((((((1059.7526526)*(v25)))*(0.8)))/(100)))+((((((1097.7898072)*(v26)))*(0.94)))/(100)))+((((((500)*(v27)))*(0.9750833333333333)))/(100)))+((((((825.711413030191)*(v28)))*(0.94)))/(100)))+((((((1004.658478)*(v29)))*(0.927)))/(100)))+((((((1241.92)*(v30)))*(1.0)))/(100)))+((((((941.547504)*(v31)))*(0.685)))/(100)))+((((((826.7537594)*(v32)))*(0.8888)))/(100)))+((((((300)*(v33)))*(0.92)))/(100)))+((((((775.7532696)*(v34)))*(0.8)))/(100)))+((((((500)*(v35)))*(0.94)))/(100)))+((((((944.28)*(v36)))*(0.9750833333333333)))/(100)))+((((((612.08)*(v37)))*(1.0)))/(100)))+((((((500)*(v38)))*(1.0)))/(100)))+((((((473.38)*(v39)))*(1.0)))/(100)))+((((((925.96)*(v40)))*(1.0)))/(100)))+((((((484.27)*(v41)))*(1.0)))/(100)))+((((((780.55)*(v42)))*(1.0)))/(100)))+((((((434.35)*(v43)))*(1.0)))/(100)))+((((((1228.65)*(v44)))*(1.0)))/(100)))+((((((300)*(v45)))*(1.0)))/(100)))+((((((500)*(v46)))*(1.0)))/(100)))+((((((964.82)*(v47)))*(1.0)))/(100)))+((((((586.286222115809)*(v48)))*(1.0)))/(100)))+((((((500)*(v49)))*(1.0)))/(100)))+((((((0)*(v50)))*(1.0)))/(100)))+((((((925.96)*(v51)))*(1.0)))/(100)))+((((((405.863293435074)*(v52)))*(1.0)))/(100)))+((((((910.96)*(v53)))*(1.0)))/(100)))+((((((0)*(v54)))*(1.0)))/(100)))+((((((1242.28973578925)*(v55)))*(1.0)))/(100)))+((((((300)*(v56)))*(1.0)))/(100)))+((((((500)*(v57)))*(1.0)))/(100)))+((((((773.95)*(v58)))*(1.0)))/(100)))+((((((0)*(v59)))*(1.0)))/(100)))+((((((500)*(v60)))*(1.0)))/(100)))+((((((634.53)*(v61)))*(1.0)))/(100)))+((((((746.2)*(v62)))*(1.0)))/(100)))+((((((747.1)*(v63)))*(1.0)))/(100)))+((((((800)*(v64)))*(1.0)))/(100)))+((((((500)*(v65)))*(1.0)))/(100)))+((((((100)*(v66)))*(1.0)))/(100)))+((((((500)*(v67)))*(1.0)))/(100)))+((((((773.95)*(v68)))*(1.0)))/(100)))+((((((793.97)*(v69)))*(1.0)))/(100)))+((((((500)*(v70)))*(1.0)))/(100)))+((((((634.53)*(v71)))*(1.0)))/(100)))+((((((746.2)*(v72)))*(1.0)))/(100)))+((((((747.1)*(v73)))*(1.0)))/(100)))+((((((800)*(v74)))*(1.0)))/(100)))+((((((500)*(v75)))*(0.94)))/(100)))+((((((100)*(v76)))*(0.927)))/(100)))+((((((500)*(v77)))*(1.0)))/(100)))+((((((773.95)*(v78)))*(0.685)))/(100)))+((((((793.97)*(v79)))*(0.8888)))/(100)))+((((((500)*(v80)))*(0.92)))/(100)))+((((((634.53)*(v81)))*(0.8)))/(100)))+((((((746.2)*(v82)))*(0.94)))/(100)))+((((((747.1)*(v83)))*(0.9750833333333333)))/(100)))+((((((800)*(v84)))*(1.0)))/(100)))+((((((500)*(v85)))*(1.0)))/(100)))+((((((100)*(v86)))*(1.0)))/(100)))+((((((500)*(v87)))*(1.0)))/(100)))+((((((566.5)*(v88)))*(1.0)))/(100)))+((((((600.5)*(v89)))*(1.0)))/(100)))+((((((500)*(v90)))*(1.0)))/(100)))+((((((431.41)*(v91)))*(1.0)))/(100)))+((((((498.015344202792)*(v92)))*(1.0)))/(100)))+((((((466.846846846847)*(v93)))*(1.0)))/(100)))+((((((500)*(v94)))*(1.0)))/(100)))+((((((100)*(v95)))*(1.0)))/(100)))+((((((500)*(v96)))*(1.0)))/(100)))+((((((910.99486005)*(v97)))*(1.0)))/(100)))+((((((853.351)*(v98)))*(1.0)))/(100)))+((((((1039.8935286)*(v99)))*(0.94)))/(100)))+((((((770.6612881)*(v100)))*(0.927)))/(100)))+((((((500)*(v101)))*(1.0)))/(100)))+((((((500)*(v102)))*(0.685)))/(100)))+((((((826.195501934952)*(v103)))*(0.8888)))/(100)))+((((((989.88716)*(v104)))*(0.92)))/(100)))+((((((1130.5194048)*(v105)))*(0.8)))/(100)))+((((((500)*(v106)))*(0.94)))/(100)))+((((((300)*(v107)))*(0.9750833333333333)))/(100)))+((((((826.195501934952)*(v108)))*(0.8888)))/(100)))+((((((989.88716)*(v109)))*(0.92)))/(100)))+((((((1130.5194048)*(v110)))*(0.8)))/(100)))+((((((500)*(v111)))*(0.94)))/(100)))+((((((300)*(v112)))*(0.9750833333333333)))/(100)))+((((((300)*(v113)))*(0.9750833333333333)))/(100)))+((((((826.195501934952)*(v114)))*(0.8888)))/(100)))+((((((989.88716)*(v115)))*(0.92)))/(100)))+((((((1130.5194048)*(v116)))*(0.8)))/(100)))+((((((500)*(v117)))*(0.94)))/(100))))/((1-(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((v1)*(6)))/(100)))+((((v2)*(7.3)))/(100)))+((((v3)*(0)))/(100)))+((((v4)*(31.5)))/(100)))+((((v5)*(11.12)))/(100)))+((((v6)*(8)))/(100)))+((((v7)*(20)))/(100)))+((((v8)*(6)))/(100)))+((((v9)*(2.49166666666667)))/(100)))+((((v10)*(6)))/(100)))+((((v11)*(7.3)))/(100)))+((((v12)*(0)))/(100)))+((((v13)*(31.5)))/(100)))+((((v14)*(11.12)))/(100)))+((((v15)*(8)))/(100)))+((((v16)*(20)))/(100)))+((((v17)*(6)))/(100)))+((((v18)*(2.49166666666667)))/(100)))+((((v19)*(6)))/(100)))+((((v20)*(7.3)))/(100)))+((((v21)*(0)))/(100)))+((((v22)*(31.5)))/(100)))+((((v23)*(11.12)))/(100)))+((((v24)*(8)))/(100)))+((((v25)*(20)))/(100)))+((((v26)*(6)))/(100)))+((((v27)*(2.49166666666667)))/(100)))+((((v28)*(6)))/(100)))+((((v29)*(7.3)))/(100)))+((((v30)*(0)))/(100)))+((((v31)*(31.5)))/(100)))+((((v32)*(11.12)))/(100)))+((((v33)*(8)))/(100)))+((((v34)*(20)))/(100)))+((((v35)*(6)))/(100)))+((((v36)*(2.49166666666667)))/(100)))+((((v37)*(0)))/(100)))+((((v38)*(0)))/(100)))+((((v39)*(0)))/(100)))+((((v40)*(0)))/(100)))+((((v41)*(0)))/(100)))+((((v42)*(0)))/(100)))+((((v43)*(0)))/(100)))+((((v44)*(0)))/(100)))+((((v45)*(0)))/(100)))+((((v46)*(0)))/(100)))+((((v47)*(0)))/(100)))+((((v48)*(0)))/(100)))+((((v49)*(0)))/(100)))+((((v50)*(0)))/(100)))+((((v51)*(0)))/(100)))+((((v52)*(0)))/(100)))+((((v53)*(0)))/(100)))+((((v54)*(0)))/(100)))+((((v55)*(0)))/(100)))+((((v56)*(0)))/(100)))+((((v57)*(0)))/(100)))+((((v58)*(0)))/(100)))+((((v59)*(0)))/(100)))+((((v60)*(0)))/(100)))+((((v61)*(0)))/(100)))+((((v62)*(0)))/(100)))+((((v63)*(0)))/(100)))+((((v64)*(0)))/(100)))+((((v65)*(0)))/(100)))+((((v66)*(0)))/(100)))+((((v67)*(0)))/(100)))+((((v68)*(0)))/(100)))+((((v69)*(0)))/(100)))+((((v70)*(0)))/(100)))+((((v71)*(0)))/(100)))+((((v72)*(0)))/(100)))+((((v73)*(0)))/(100)))+((((v74)*(0)))/(100)))+((((v75)*(6)))/(100)))+((((v76)*(7.3)))/(100)))+((((v77)*(0)))/(100)))+((((v78)*(31.5)))/(100)))+((((v79)*(11.12)))/(100)))+((((v80)*(8)))/(100)))+((((v81)*(20)))/(100)))+((((v82)*(6)))/(100)))+((((v83)*(2.49166666666667)))/(100)))+((((v84)*(0)))/(100)))+((((v85)*(0)))/(100)))+((((v86)*(0)))/(100)))+((((v87)*(0)))/(100)))+((((v88)*(0)))/(100)))+((((v89)*(0)))/(100)))+((((v90)*(0)))/(100)))+((((v91)*(0)))/(100)))+((((v92)*(0)))/(100)))+((((v93)*(0)))/(100)))+((((v94)*(0)))/(100)))+((((v95)*(0)))/(100)))+((((v96)*(0)))/(100)))+((((v97)*(0)))/(100)))+((((v98)*(0)))/(100)))+((((v99)*(6)))/(100)))+((((v100)*(7.3)))/(100)))+((((v101)*(0)))/(100)))+((((v102)*(31.5)))/(100)))+((((v103)*(11.12)))/(100)))+((((v104)*(8)))/(100)))+((((v105)*(20)))/(100)))+((((v106)*(6)))/(100)))+((((v107)*(2.49166666666667)))/(100)))+((((v108)*(11.12)))/(100)))+((((v109)*(8)))/(100)))+((((v110)*(20)))/(100)))+((((v111)*(6)))/(100)))+((((v112)*(2.49166666666667)))/(100)))+((((v113)*(2.49166666666667)))/(100)))+((((v114)*(11.12)))/(100)))+((((v115)*(8)))/(100)))+((((v116)*(20)))/(100)))+((((v117)*(6)))/(100))))/(100))))))/((1-(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((((2.63)*(v1)))*(0.94)))/(100)))+((((((6)*(v2)))*(0.927)))/(100)))+((((((1)*(v3)))*(1.0)))/(100)))+((((((13.63)*(v4)))*(0.685)))/(100)))+((((((9.5)*(v5)))*(0.8888)))/(100)))+((((((9)*(v6)))*(0.92)))/(100)))+((((((4.36)*(v7)))*(0.8)))/(100)))+((((((2)*(v8)))*(0.94)))/(100)))+((((((31.3234615384615)*(v9)))*(0.9750833333333333)))/(100)))+((((((2.63)*(v10)))*(0.94)))/(100)))+((((((6)*(v11)))*(0.927)))/(100)))+((((((1)*(v12)))*(1.0)))/(100)))+((((((13.63)*(v13)))*(0.685)))/(100)))+((((((9.5)*(v14)))*(0.8888)))/(100)))+((((((9)*(v15)))*(0.92)))/(100)))+((((((4.36)*(v16)))*(0.8)))/(100)))+((((((2)*(v17)))*(0.94)))/(100)))+((((((31.3234615384615)*(v18)))*(0.9750833333333333)))/(100)))+((((((0)*(v19)))*(0.94)))/(100)))+((((((0)*(v20)))*(0.927)))/(100)))+((((((0)*(v21)))*(1.0)))/(100)))+((((((0)*(v22)))*(0.685)))/(100)))+((((((0)*(v23)))*(0.8888)))/(100)))+((((((0)*(v24)))*(0.92)))/(100)))+((((((0)*(v25)))*(0.8)))/(100)))+((((((0)*(v26)))*(0.94)))/(100)))+((((((0)*(v27)))*(0.9750833333333333)))/(100)))+((((((0)*(v28)))*(0.94)))/(100)))+((((((0)*(v29)))*(0.927)))/(100)))+((((((0)*(v30)))*(1.0)))/(100)))+((((((0)*(v31)))*(0.685)))/(100)))+((((((0)*(v32)))*(0.8888)))/(100)))+((((((0)*(v33)))*(0.92)))/(100)))+((((((0)*(v34)))*(0.8)))/(100)))+((((((0)*(v35)))*(0.94)))/(100)))+((((((2.63)*(v36)))*(0.9750833333333333)))/(100)))+((((((6)*(v37)))*(1.0)))/(100)))+((((((1)*(v38)))*(1.0)))/(100)))+((((((13.63)*(v39)))*(1.0)))/(100)))+((((((9.5)*(v40)))*(1.0)))/(100)))+((((((9)*(v41)))*(1.0)))/(100)))+((((((4.36)*(v42)))*(1.0)))/(100)))+((((((2)*(v43)))*(1.0)))/(100)))+((((((31.3234615384615)*(v44)))*(1.0)))/(100)))+((((((0)*(v45)))*(1.0)))/(100)))+((((((0)*(v46)))*(1.0)))/(100)))+((((((0)*(v47)))*(1.0)))/(100)))+((((((0)*(v48)))*(1.0)))/(100)))+((((((0)*(v49)))*(1.0)))/(100)))+((((((0)*(v50)))*(1.0)))/(100)))+((((((0)*(v51)))*(1.0)))/(100)))+((((((0)*(v52)))*(1.0)))/(100)))+((((((0)*(v53)))*(1.0)))/(100)))+((((((0)*(v54)))*(1.0)))/(100)))+((((((0)*(v55)))*(1.0)))/(100)))+((((((0)*(v56)))*(1.0)))/(100)))+((((((0)*(v57)))*(1.0)))/(100)))+((((((0)*(v58)))*(1.0)))/(100)))+((((((0)*(v59)))*(1.0)))/(100)))+((((((2.63)*(v60)))*(1.0)))/(100)))+((((((6)*(v61)))*(1.0)))/(100)))+((((((1)*(v62)))*(1.0)))/(100)))+((((((13.63)*(v63)))*(1.0)))/(100)))+((((((9.5)*(v64)))*(1.0)))/(100)))+((((((9)*(v65)))*(1.0)))/(100)))+((((((4.36)*(v66)))*(1.0)))/(100)))+((((((2)*(v67)))*(1.0)))/(100)))+((((((31.3234615384615)*(v68)))*(1.0)))/(100)))+((((((0)*(v69)))*(1.0)))/(100)))+((((((0)*(v70)))*(1.0)))/(100)))+((((((0)*(v71)))*(1.0)))/(100)))+((((((0)*(v72)))*(1.0)))/(100)))+((((((0)*(v73)))*(1.0)))/(100)))+((((((0)*(v74)))*(1.0)))/(100)))+((((((0)*(v75)))*(0.94)))/(100)))+((((((0)*(v76)))*(0.927)))/(100)))+((((((0)*(v77)))*(1.0)))/(100)))+((((((0)*(v78)))*(0.685)))/(100)))+((((((0)*(v79)))*(0.8888)))/(100)))+((((((0)*(v80)))*(0.92)))/(100)))+((((((0)*(v81)))*(0.8)))/(100)))+((((((2.63)*(v82)))*(0.94)))/(100)))+((((((6)*(v83)))*(0.9750833333333333)))/(100)))+((((((1)*(v84)))*(1.0)))/(100)))+((((((13.63)*(v85)))*(1.0)))/(100)))+((((((9.5)*(v86)))*(1.0)))/(100)))+((((((9)*(v87)))*(1.0)))/(100)))+((((((4.36)*(v88)))*(1.0)))/(100)))+((((((2)*(v89)))*(1.0)))/(100)))+((((((31.3234615384615)*(v90)))*(1.0)))/(100)))+((((((0)*(v91)))*(1.0)))/(100)))+((((((0)*(v92)))*(1.0)))/(100)))+((((((0)*(v93)))*(1.0)))/(100)))+((((((0)*(v94)))*(1.0)))/(100)))+((((((0)*(v95)))*(1.0)))/(100)))+((((((2.63)*(v96)))*(1.0)))/(100)))+((((((6)*(v97)))*(1.0)))/(100)))+((((((1)*(v98)))*(1.0)))/(100)))+((((((13.63)*(v99)))*(0.94)))/(100)))+((((((9.5)*(v100)))*(0.927)))/(100)))+((((((9)*(v101)))*(1.0)))/(100)))+((((((4.36)*(v102)))*(0.685)))/(100)))+((((((2)*(v103)))*(0.8888)))/(100)))+((((((31.3234615384615)*(v104)))*(0.92)))/(100)))+((((((0)*(v105)))*(0.8)))/(100)))+((((((0)*(v106)))*(0.94)))/(100)))+((((((0)*(v107)))*(0.9750833333333333)))/(100)))+((((((2)*(v108)))*(0.8888)))/(100)))+((((((31.3234615384615)*(v109)))*(0.92)))/(100)))+((((((0)*(v110)))*(0.8)))/(100)))+((((((0)*(v111)))*(0.94)))/(100)))+((((((0)*(v112)))*(0.9750833333333333)))/(100)))+((((((0)*(v113)))*(0.9750833333333333)))/(100)))+((((((2)*(v114)))*(0.8888)))/(100)))+((((((31.3234615384615)*(v115)))*(0.92)))/(100)))+((((((0)*(v116)))*(0.8)))/(100)))+((((((0)*(v117)))*(0.94)))/(100))))/((1-(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((v1)*(6)))/(100)))+((((v2)*(7.3)))/(100)))+((((v3)*(0)))/(100)))+((((v4)*(31.5)))/(100)))+((((v5)*(11.12)))/(100)))+((((v6)*(8)))/(100)))+((((v7)*(20)))/(100)))+((((v8)*(6)))/(100)))+((((v9)*(2.49166666666667)))/(100)))+((((v10)*(6)))/(100)))+((((v11)*(7.3)))/(100)))+((((v12)*(0)))/(100)))+((((v13)*(31.5)))/(100)))+((((v14)*(11.12)))/(100)))+((((v15)*(8)))/(100)))+((((v16)*(20)))/(100)))+((((v17)*(6)))/(100)))+((((v18)*(2.49166666666667)))/(100)))+((((v19)*(6)))/(100)))+((((v20)*(7.3)))/(100)))+((((v21)*(0)))/(100)))+((((v22)*(31.5)))/(100)))+((((v23)*(11.12)))/(100)))+((((v24)*(8)))/(100)))+((((v25)*(20)))/(100)))+((((v26)*(6)))/(100)))+((((v27)*(2.49166666666667)))/(100)))+((((v28)*(6)))/(100)))+((((v29)*(7.3)))/(100)))+((((v30)*(0)))/(100)))+((((v31)*(31.5)))/(100)))+((((v32)*(11.12)))/(100)))+((((v33)*(8)))/(100)))+((((v34)*(20)))/(100)))+((((v35)*(6)))/(100)))+((((v36)*(2.49166666666667)))/(100)))+((((v37)*(0)))/(100)))+((((v38)*(0)))/(100)))+((((v39)*(0)))/(100)))+((((v40)*(0)))/(100)))+((((v41)*(0)))/(100)))+((((v42)*(0)))/(100)))+((((v43)*(0)))/(100)))+((((v44)*(0)))/(100)))+((((v45)*(0)))/(100)))+((((v46)*(0)))/(100)))+((((v47)*(0)))/(100)))+((((v48)*(0)))/(100)))+((((v49)*(0)))/(100)))+((((v50)*(0)))/(100)))+((((v51)*(0)))/(100)))+((((v52)*(0)))/(100)))+((((v53)*(0)))/(100)))+((((v54)*(0)))/(100)))+((((v55)*(0)))/(100)))+((((v56)*(0)))/(100)))+((((v57)*(0)))/(100)))+((((v58)*(0)))/(100)))+((((v59)*(0)))/(100)))+((((v60)*(0)))/(100)))+((((v61)*(0)))/(100)))+((((v62)*(0)))/(100)))+((((v63)*(0)))/(100)))+((((v64)*(0)))/(100)))+((((v65)*(0)))/(100)))+((((v66)*(0)))/(100)))+((((v67)*(0)))/(100)))+((((v68)*(0)))/(100)))+((((v69)*(0)))/(100)))+((((v70)*(0)))/(100)))+((((v71)*(0)))/(100)))+((((v72)*(0)))/(100)))+((((v73)*(0)))/(100)))+((((v74)*(0)))/(100)))+((((v75)*(6)))/(100)))+((((v76)*(7.3)))/(100)))+((((v77)*(0)))/(100)))+((((v78)*(31.5)))/(100)))+((((v79)*(11.12)))/(100)))+((((v80)*(8)))/(100)))+((((v81)*(20)))/(100)))+((((v82)*(6)))/(100)))+((((v83)*(2.49166666666667)))/(100)))+((((v84)*(0)))/(100)))+((((v85)*(0)))/(100)))+((((v86)*(0)))/(100)))+((((v87)*(0)))/(100)))+((((v88)*(0)))/(100)))+((((v89)*(0)))/(100)))+((((v90)*(0)))/(100)))+((((v91)*(0)))/(100)))+((((v92)*(0)))/(100)))+((((v93)*(0)))/(100)))+((((v94)*(0)))/(100)))+((((v95)*(0)))/(100)))+((((v96)*(0)))/(100)))+((((v97)*(0)))/(100)))+((((v98)*(0)))/(100)))+((((v99)*(6)))/(100)))+((((v100)*(7.3)))/(100)))+((((v101)*(0)))/(100)))+((((v102)*(31.5)))/(100)))+((((v103)*(11.12)))/(100)))+((((v104)*(8)))/(100)))+((((v105)*(20)))/(100)))+((((v106)*(6)))/(100)))+((((v107)*(2.49166666666667)))/(100)))+((((v108)*(11.12)))/(100)))+((((v109)*(8)))/(100)))+((((v110)*(20)))/(100)))+((((v111)*(6)))/(100)))+((((v112)*(2.49166666666667)))/(100)))+((((v113)*(2.49166666666667)))/(100)))+((((v114)*(11.12)))/(100)))+((((v115)*(8)))/(100)))+((((v116)*(20)))/(100)))+((((v117)*(6)))/(100))))/(100))))))/(100))))))*(1))
 
 APM model error: string > 15000  characters
 Consider breaking up the line into multiple equations
 
 The may also be due to only using newline character CR
   instead of CR LF (for Windows) or LF (for MacOS/Linux) 
 To fix this problem, save APM file with appropriate newline characters
 
 STOPPING...
 


2018-12-06 14:45:46,626 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 681.2548003266375), (1, 1, 1)]
2018-12-06 14:45:46,626 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.705783661530658, 'sio2': 91.62176773559953, 'cost': 0.6724486028698085}
2018-12-06 14:45:46,882 __main__ mainTask ERROR = Traceback (most recent call last):
  File "C:/Users/sun/PycharmProjects/optimizationproblem/gekkoSolution/mainTask.py", line 37, in <module>
    lp.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\gekkoSolution\gekkoProblem.py", line 46, in solve
    self.prob.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\gekko\gekko.py", line 682, in solve
    raise Exception(apm_error)
Exception:  @error: Max Equation Length
 Error with line number:  121
 i0=((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((((910.99486005)*(v1)))*(0.94)))/(100)))+((((((853.351)*(v2)))*(0.927)))/(100)))+((((((1039.8935286)*(v3)))*(1.0)))/(100)))+((((((770.6612881)*(v4)))*(0.685)))/(100)))+((((((500)*(v5)))*(0.8888)))/(100)))+((((((500)*(v6)))*(0.92)))/(100)))+((((((826.195501934952)*(v7)))*(0.8)))/(100)))+((((((989.88716)*(v8)))*(0.94)))/(100)))+((((((1130.5194048)*(v9)))*(0.9750833333333333)))/(100)))+((((((500)*(v10)))*(0.94)))/(100)))+((((((300)*(v11)))*(0.927)))/(100)))+((((((1069.8162944)*(v12)))*(1.0)))/(100)))+((((((1245.56)*(v13)))*(0.685)))/(100)))+((((((500)*(v14)))*(0.8888)))/(100)))+((((((825.711413030191)*(v15)))*(0.92)))/(100)))+((((((1004.658478)*(v16)))*(0.8)))/(100)))+((((((1129.8570048)*(v17)))*(0.94)))/(100)))+((((((300)*(v18)))*(0.9750833333333333)))/(100)))+((((((801.67994)*(v19)))*(0.94)))/(100)))+((((((834.2588482)*(v20)))*(0.927)))/(100)))+((((((991.6951428)*(v21)))*(1.0)))/(100)))+((((((500)*(v22)))*(0.685)))/(100)))+((((((886.96504)*(v23)))*(0.8888)))/(100)))+((((((1049.00673)*(v24)))*(0.92)))/(100)))+((((((1059.7526526)*(v25)))*(0.8)))/(100)))+((((((1097.7898072)*(v26)))*(0.94)))/(100)))+((((((500)*(v27)))*(0.9750833333333333)))/(100)))+((((((825.711413030191)*(v28)))*(0.94)))/(100)))+((((((1004.658478)*(v29)))*(0.927)))/(100)))+((((((1241.92)*(v30)))*(1.0)))/(100)))+((((((941.547504)*(v31)))*(0.685)))/(100)))+((((((826.7537594)*(v32)))*(0.8888)))/(100)))+((((((300)*(v33)))*(0.92)))/(100)))+((((((775.7532696)*(v34)))*(0.8)))/(100)))+((((((500)*(v35)))*(0.94)))/(100)))+((((((944.28)*(v36)))*(0.9750833333333333)))/(100)))+((((((612.08)*(v37)))*(1.0)))/(100)))+((((((500)*(v38)))*(1.0)))/(100)))+((((((473.38)*(v39)))*(1.0)))/(100)))+((((((925.96)*(v40)))*(1.0)))/(100)))+((((((484.27)*(v41)))*(1.0)))/(100)))+((((((780.55)*(v42)))*(1.0)))/(100)))+((((((434.35)*(v43)))*(1.0)))/(100)))+((((((1228.65)*(v44)))*(1.0)))/(100)))+((((((300)*(v45)))*(1.0)))/(100)))+((((((500)*(v46)))*(1.0)))/(100)))+((((((964.82)*(v47)))*(1.0)))/(100)))+((((((586.286222115809)*(v48)))*(1.0)))/(100)))+((((((500)*(v49)))*(1.0)))/(100)))+((((((0)*(v50)))*(1.0)))/(100)))+((((((925.96)*(v51)))*(1.0)))/(100)))+((((((405.863293435074)*(v52)))*(1.0)))/(100)))+((((((910.96)*(v53)))*(1.0)))/(100)))+((((((0)*(v54)))*(1.0)))/(100)))+((((((1242.28973578925)*(v55)))*(1.0)))/(100)))+((((((300)*(v56)))*(1.0)))/(100)))+((((((500)*(v57)))*(1.0)))/(100)))+((((((773.95)*(v58)))*(1.0)))/(100)))+((((((0)*(v59)))*(1.0)))/(100)))+((((((500)*(v60)))*(1.0)))/(100)))+((((((634.53)*(v61)))*(1.0)))/(100)))+((((((746.2)*(v62)))*(1.0)))/(100)))+((((((747.1)*(v63)))*(1.0)))/(100)))+((((((800)*(v64)))*(1.0)))/(100)))+((((((500)*(v65)))*(1.0)))/(100)))+((((((100)*(v66)))*(1.0)))/(100)))+((((((500)*(v67)))*(1.0)))/(100)))+((((((773.95)*(v68)))*(1.0)))/(100)))+((((((793.97)*(v69)))*(1.0)))/(100)))+((((((500)*(v70)))*(1.0)))/(100)))+((((((634.53)*(v71)))*(1.0)))/(100)))+((((((746.2)*(v72)))*(1.0)))/(100)))+((((((747.1)*(v73)))*(1.0)))/(100)))+((((((800)*(v74)))*(1.0)))/(100)))+((((((500)*(v75)))*(0.94)))/(100)))+((((((100)*(v76)))*(0.927)))/(100)))+((((((500)*(v77)))*(1.0)))/(100)))+((((((773.95)*(v78)))*(0.685)))/(100)))+((((((793.97)*(v79)))*(0.8888)))/(100)))+((((((500)*(v80)))*(0.92)))/(100)))+((((((634.53)*(v81)))*(0.8)))/(100)))+((((((746.2)*(v82)))*(0.94)))/(100)))+((((((747.1)*(v83)))*(0.9750833333333333)))/(100)))+((((((800)*(v84)))*(1.0)))/(100)))+((((((500)*(v85)))*(1.0)))/(100)))+((((((100)*(v86)))*(1.0)))/(100)))+((((((500)*(v87)))*(1.0)))/(100)))+((((((566.5)*(v88)))*(1.0)))/(100)))+((((((600.5)*(v89)))*(1.0)))/(100)))+((((((500)*(v90)))*(1.0)))/(100)))+((((((431.41)*(v91)))*(1.0)))/(100)))+((((((498.015344202792)*(v92)))*(1.0)))/(100)))+((((((466.846846846847)*(v93)))*(1.0)))/(100)))+((((((500)*(v94)))*(1.0)))/(100)))+((((((100)*(v95)))*(1.0)))/(100)))+((((((500)*(v96)))*(1.0)))/(100)))+((((((910.99486005)*(v97)))*(1.0)))/(100)))+((((((853.351)*(v98)))*(1.0)))/(100)))+((((((1039.8935286)*(v99)))*(0.94)))/(100)))+((((((770.6612881)*(v100)))*(0.927)))/(100)))+((((((500)*(v101)))*(1.0)))/(100)))+((((((500)*(v102)))*(0.685)))/(100)))+((((((826.195501934952)*(v103)))*(0.8888)))/(100)))+((((((989.88716)*(v104)))*(0.92)))/(100)))+((((((1130.5194048)*(v105)))*(0.8)))/(100)))+((((((500)*(v106)))*(0.94)))/(100)))+((((((300)*(v107)))*(0.9750833333333333)))/(100)))+((((((826.195501934952)*(v108)))*(0.8888)))/(100)))+((((((989.88716)*(v109)))*(0.92)))/(100)))+((((((1130.5194048)*(v110)))*(0.8)))/(100)))+((((((500)*(v111)))*(0.94)))/(100)))+((((((300)*(v112)))*(0.9750833333333333)))/(100)))+((((((300)*(v113)))*(0.9750833333333333)))/(100)))+((((((826.195501934952)*(v114)))*(0.8888)))/(100)))+((((((989.88716)*(v115)))*(0.92)))/(100)))+((((((1130.5194048)*(v116)))*(0.8)))/(100))))/((1-((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((v1)*(6)))/(100)))+((((v2)*(7.3)))/(100)))+((((v3)*(0)))/(100)))+((((v4)*(31.5)))/(100)))+((((v5)*(11.12)))/(100)))+((((v6)*(8)))/(100)))+((((v7)*(20)))/(100)))+((((v8)*(6)))/(100)))+((((v9)*(2.49166666666667)))/(100)))+((((v10)*(6)))/(100)))+((((v11)*(7.3)))/(100)))+((((v12)*(0)))/(100)))+((((v13)*(31.5)))/(100)))+((((v14)*(11.12)))/(100)))+((((v15)*(8)))/(100)))+((((v16)*(20)))/(100)))+((((v17)*(6)))/(100)))+((((v18)*(2.49166666666667)))/(100)))+((((v19)*(6)))/(100)))+((((v20)*(7.3)))/(100)))+((((v21)*(0)))/(100)))+((((v22)*(31.5)))/(100)))+((((v23)*(11.12)))/(100)))+((((v24)*(8)))/(100)))+((((v25)*(20)))/(100)))+((((v26)*(6)))/(100)))+((((v27)*(2.49166666666667)))/(100)))+((((v28)*(6)))/(100)))+((((v29)*(7.3)))/(100)))+((((v30)*(0)))/(100)))+((((v31)*(31.5)))/(100)))+((((v32)*(11.12)))/(100)))+((((v33)*(8)))/(100)))+((((v34)*(20)))/(100)))+((((v35)*(6)))/(100)))+((((v36)*(2.49166666666667)))/(100)))+((((v37)*(0)))/(100)))+((((v38)*(0)))/(100)))+((((v39)*(0)))/(100)))+((((v40)*(0)))/(100)))+((((v41)*(0)))/(100)))+((((v42)*(0)))/(100)))+((((v43)*(0)))/(100)))+((((v44)*(0)))/(100)))+((((v45)*(0)))/(100)))+((((v46)*(0)))/(100)))+((((v47)*(0)))/(100)))+((((v48)*(0)))/(100)))+((((v49)*(0)))/(100)))+((((v50)*(0)))/(100)))+((((v51)*(0)))/(100)))+((((v52)*(0)))/(100)))+((((v53)*(0)))/(100)))+((((v54)*(0)))/(100)))+((((v55)*(0)))/(100)))+((((v56)*(0)))/(100)))+((((v57)*(0)))/(100)))+((((v58)*(0)))/(100)))+((((v59)*(0)))/(100)))+((((v60)*(0)))/(100)))+((((v61)*(0)))/(100)))+((((v62)*(0)))/(100)))+((((v63)*(0)))/(100)))+((((v64)*(0)))/(100)))+((((v65)*(0)))/(100)))+((((v66)*(0)))/(100)))+((((v67)*(0)))/(100)))+((((v68)*(0)))/(100)))+((((v69)*(0)))/(100)))+((((v70)*(0)))/(100)))+((((v71)*(0)))/(100)))+((((v72)*(0)))/(100)))+((((v73)*(0)))/(100)))+((((v74)*(0)))/(100)))+((((v75)*(6)))/(100)))+((((v76)*(7.3)))/(100)))+((((v77)*(0)))/(100)))+((((v78)*(31.5)))/(100)))+((((v79)*(11.12)))/(100)))+((((v80)*(8)))/(100)))+((((v81)*(20)))/(100)))+((((v82)*(6)))/(100)))+((((v83)*(2.49166666666667)))/(100)))+((((v84)*(0)))/(100)))+((((v85)*(0)))/(100)))+((((v86)*(0)))/(100)))+((((v87)*(0)))/(100)))+((((v88)*(0)))/(100)))+((((v89)*(0)))/(100)))+((((v90)*(0)))/(100)))+((((v91)*(0)))/(100)))+((((v92)*(0)))/(100)))+((((v93)*(0)))/(100)))+((((v94)*(0)))/(100)))+((((v95)*(0)))/(100)))+((((v96)*(0)))/(100)))+((((v97)*(0)))/(100)))+((((v98)*(0)))/(100)))+((((v99)*(6)))/(100)))+((((v100)*(7.3)))/(100)))+((((v101)*(0)))/(100)))+((((v102)*(31.5)))/(100)))+((((v103)*(11.12)))/(100)))+((((v104)*(8)))/(100)))+((((v105)*(20)))/(100)))+((((v106)*(6)))/(100)))+((((v107)*(2.49166666666667)))/(100)))+((((v108)*(11.12)))/(100)))+((((v109)*(8)))/(100)))+((((v110)*(20)))/(100)))+((((v111)*(6)))/(100)))+((((v112)*(2.49166666666667)))/(100)))+((((v113)*(2.49166666666667)))/(100)))+((((v114)*(11.12)))/(100)))+((((v115)*(8)))/(100)))+((((v116)*(20)))/(100))))/(100))))))/((1-((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((((2.63)*(v1)))*(0.94)))/(100)))+((((((6)*(v2)))*(0.927)))/(100)))+((((((1)*(v3)))*(1.0)))/(100)))+((((((13.63)*(v4)))*(0.685)))/(100)))+((((((9.5)*(v5)))*(0.8888)))/(100)))+((((((9)*(v6)))*(0.92)))/(100)))+((((((4.36)*(v7)))*(0.8)))/(100)))+((((((2)*(v8)))*(0.94)))/(100)))+((((((31.3234615384615)*(v9)))*(0.9750833333333333)))/(100)))+((((((2.63)*(v10)))*(0.94)))/(100)))+((((((6)*(v11)))*(0.927)))/(100)))+((((((1)*(v12)))*(1.0)))/(100)))+((((((13.63)*(v13)))*(0.685)))/(100)))+((((((9.5)*(v14)))*(0.8888)))/(100)))+((((((9)*(v15)))*(0.92)))/(100)))+((((((4.36)*(v16)))*(0.8)))/(100)))+((((((2)*(v17)))*(0.94)))/(100)))+((((((31.3234615384615)*(v18)))*(0.9750833333333333)))/(100)))+((((((0)*(v19)))*(0.94)))/(100)))+((((((0)*(v20)))*(0.927)))/(100)))+((((((0)*(v21)))*(1.0)))/(100)))+((((((0)*(v22)))*(0.685)))/(100)))+((((((0)*(v23)))*(0.8888)))/(100)))+((((((0)*(v24)))*(0.92)))/(100)))+((((((0)*(v25)))*(0.8)))/(100)))+((((((0)*(v26)))*(0.94)))/(100)))+((((((0)*(v27)))*(0.9750833333333333)))/(100)))+((((((0)*(v28)))*(0.94)))/(100)))+((((((0)*(v29)))*(0.927)))/(100)))+((((((0)*(v30)))*(1.0)))/(100)))+((((((0)*(v31)))*(0.685)))/(100)))+((((((0)*(v32)))*(0.8888)))/(100)))+((((((0)*(v33)))*(0.92)))/(100)))+((((((0)*(v34)))*(0.8)))/(100)))+((((((0)*(v35)))*(0.94)))/(100)))+((((((2.63)*(v36)))*(0.9750833333333333)))/(100)))+((((((6)*(v37)))*(1.0)))/(100)))+((((((1)*(v38)))*(1.0)))/(100)))+((((((13.63)*(v39)))*(1.0)))/(100)))+((((((9.5)*(v40)))*(1.0)))/(100)))+((((((9)*(v41)))*(1.0)))/(100)))+((((((4.36)*(v42)))*(1.0)))/(100)))+((((((2)*(v43)))*(1.0)))/(100)))+((((((31.3234615384615)*(v44)))*(1.0)))/(100)))+((((((0)*(v45)))*(1.0)))/(100)))+((((((0)*(v46)))*(1.0)))/(100)))+((((((0)*(v47)))*(1.0)))/(100)))+((((((0)*(v48)))*(1.0)))/(100)))+((((((0)*(v49)))*(1.0)))/(100)))+((((((0)*(v50)))*(1.0)))/(100)))+((((((0)*(v51)))*(1.0)))/(100)))+((((((0)*(v52)))*(1.0)))/(100)))+((((((0)*(v53)))*(1.0)))/(100)))+((((((0)*(v54)))*(1.0)))/(100)))+((((((0)*(v55)))*(1.0)))/(100)))+((((((0)*(v56)))*(1.0)))/(100)))+((((((0)*(v57)))*(1.0)))/(100)))+((((((0)*(v58)))*(1.0)))/(100)))+((((((0)*(v59)))*(1.0)))/(100)))+((((((2.63)*(v60)))*(1.0)))/(100)))+((((((6)*(v61)))*(1.0)))/(100)))+((((((1)*(v62)))*(1.0)))/(100)))+((((((13.63)*(v63)))*(1.0)))/(100)))+((((((9.5)*(v64)))*(1.0)))/(100)))+((((((9)*(v65)))*(1.0)))/(100)))+((((((4.36)*(v66)))*(1.0)))/(100)))+((((((2)*(v67)))*(1.0)))/(100)))+((((((31.3234615384615)*(v68)))*(1.0)))/(100)))+((((((0)*(v69)))*(1.0)))/(100)))+((((((0)*(v70)))*(1.0)))/(100)))+((((((0)*(v71)))*(1.0)))/(100)))+((((((0)*(v72)))*(1.0)))/(100)))+((((((0)*(v73)))*(1.0)))/(100)))+((((((0)*(v74)))*(1.0)))/(100)))+((((((0)*(v75)))*(0.94)))/(100)))+((((((0)*(v76)))*(0.927)))/(100)))+((((((0)*(v77)))*(1.0)))/(100)))+((((((0)*(v78)))*(0.685)))/(100)))+((((((0)*(v79)))*(0.8888)))/(100)))+((((((0)*(v80)))*(0.92)))/(100)))+((((((0)*(v81)))*(0.8)))/(100)))+((((((2.63)*(v82)))*(0.94)))/(100)))+((((((6)*(v83)))*(0.9750833333333333)))/(100)))+((((((1)*(v84)))*(1.0)))/(100)))+((((((13.63)*(v85)))*(1.0)))/(100)))+((((((9.5)*(v86)))*(1.0)))/(100)))+((((((9)*(v87)))*(1.0)))/(100)))+((((((4.36)*(v88)))*(1.0)))/(100)))+((((((2)*(v89)))*(1.0)))/(100)))+((((((31.3234615384615)*(v90)))*(1.0)))/(100)))+((((((0)*(v91)))*(1.0)))/(100)))+((((((0)*(v92)))*(1.0)))/(100)))+((((((0)*(v93)))*(1.0)))/(100)))+((((((0)*(v94)))*(1.0)))/(100)))+((((((0)*(v95)))*(1.0)))/(100)))+((((((2.63)*(v96)))*(1.0)))/(100)))+((((((6)*(v97)))*(1.0)))/(100)))+((((((1)*(v98)))*(1.0)))/(100)))+((((((13.63)*(v99)))*(0.94)))/(100)))+((((((9.5)*(v100)))*(0.927)))/(100)))+((((((9)*(v101)))*(1.0)))/(100)))+((((((4.36)*(v102)))*(0.685)))/(100)))+((((((2)*(v103)))*(0.8888)))/(100)))+((((((31.3234615384615)*(v104)))*(0.92)))/(100)))+((((((0)*(v105)))*(0.8)))/(100)))+((((((0)*(v106)))*(0.94)))/(100)))+((((((0)*(v107)))*(0.9750833333333333)))/(100)))+((((((2)*(v108)))*(0.8888)))/(100)))+((((((31.3234615384615)*(v109)))*(0.92)))/(100)))+((((((0)*(v110)))*(0.8)))/(100)))+((((((0)*(v111)))*(0.94)))/(100)))+((((((0)*(v112)))*(0.9750833333333333)))/(100)))+((((((0)*(v113)))*(0.9750833333333333)))/(100)))+((((((2)*(v114)))*(0.8888)))/(100)))+((((((31.3234615384615)*(v115)))*(0.92)))/(100)))+((((((0)*(v116)))*(0.8)))/(100))))/((1-((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((v1)*(6)))/(100)))+((((v2)*(7.3)))/(100)))+((((v3)*(0)))/(100)))+((((v4)*(31.5)))/(100)))+((((v5)*(11.12)))/(100)))+((((v6)*(8)))/(100)))+((((v7)*(20)))/(100)))+((((v8)*(6)))/(100)))+((((v9)*(2.49166666666667)))/(100)))+((((v10)*(6)))/(100)))+((((v11)*(7.3)))/(100)))+((((v12)*(0)))/(100)))+((((v13)*(31.5)))/(100)))+((((v14)*(11.12)))/(100)))+((((v15)*(8)))/(100)))+((((v16)*(20)))/(100)))+((((v17)*(6)))/(100)))+((((v18)*(2.49166666666667)))/(100)))+((((v19)*(6)))/(100)))+((((v20)*(7.3)))/(100)))+((((v21)*(0)))/(100)))+((((v22)*(31.5)))/(100)))+((((v23)*(11.12)))/(100)))+((((v24)*(8)))/(100)))+((((v25)*(20)))/(100)))+((((v26)*(6)))/(100)))+((((v27)*(2.49166666666667)))/(100)))+((((v28)*(6)))/(100)))+((((v29)*(7.3)))/(100)))+((((v30)*(0)))/(100)))+((((v31)*(31.5)))/(100)))+((((v32)*(11.12)))/(100)))+((((v33)*(8)))/(100)))+((((v34)*(20)))/(100)))+((((v35)*(6)))/(100)))+((((v36)*(2.49166666666667)))/(100)))+((((v37)*(0)))/(100)))+((((v38)*(0)))/(100)))+((((v39)*(0)))/(100)))+((((v40)*(0)))/(100)))+((((v41)*(0)))/(100)))+((((v42)*(0)))/(100)))+((((v43)*(0)))/(100)))+((((v44)*(0)))/(100)))+((((v45)*(0)))/(100)))+((((v46)*(0)))/(100)))+((((v47)*(0)))/(100)))+((((v48)*(0)))/(100)))+((((v49)*(0)))/(100)))+((((v50)*(0)))/(100)))+((((v51)*(0)))/(100)))+((((v52)*(0)))/(100)))+((((v53)*(0)))/(100)))+((((v54)*(0)))/(100)))+((((v55)*(0)))/(100)))+((((v56)*(0)))/(100)))+((((v57)*(0)))/(100)))+((((v58)*(0)))/(100)))+((((v59)*(0)))/(100)))+((((v60)*(0)))/(100)))+((((v61)*(0)))/(100)))+((((v62)*(0)))/(100)))+((((v63)*(0)))/(100)))+((((v64)*(0)))/(100)))+((((v65)*(0)))/(100)))+((((v66)*(0)))/(100)))+((((v67)*(0)))/(100)))+((((v68)*(0)))/(100)))+((((v69)*(0)))/(100)))+((((v70)*(0)))/(100)))+((((v71)*(0)))/(100)))+((((v72)*(0)))/(100)))+((((v73)*(0)))/(100)))+((((v74)*(0)))/(100)))+((((v75)*(6)))/(100)))+((((v76)*(7.3)))/(100)))+((((v77)*(0)))/(100)))+((((v78)*(31.5)))/(100)))+((((v79)*(11.12)))/(100)))+((((v80)*(8)))/(100)))+((((v81)*(20)))/(100)))+((((v82)*(6)))/(100)))+((((v83)*(2.49166666666667)))/(100)))+((((v84)*(0)))/(100)))+((((v85)*(0)))/(100)))+((((v86)*(0)))/(100)))+((((v87)*(0)))/(100)))+((((v88)*(0)))/(100)))+((((v89)*(0)))/(100)))+((((v90)*(0)))/(100)))+((((v91)*(0)))/(100)))+((((v92)*(0)))/(100)))+((((v93)*(0)))/(100)))+((((v94)*(0)))/(100)))+((((v95)*(0)))/(100)))+((((v96)*(0)))/(100)))+((((v97)*(0)))/(100)))+((((v98)*(0)))/(100)))+((((v99)*(6)))/(100)))+((((v100)*(7.3)))/(100)))+((((v101)*(0)))/(100)))+((((v102)*(31.5)))/(100)))+((((v103)*(11.12)))/(100)))+((((v104)*(8)))/(100)))+((((v105)*(20)))/(100)))+((((v106)*(6)))/(100)))+((((v107)*(2.49166666666667)))/(100)))+((((v108)*(11.12)))/(100)))+((((v109)*(8)))/(100)))+((((v110)*(20)))/(100)))+((((v111)*(6)))/(100)))+((((v112)*(2.49166666666667)))/(100)))+((((v113)*(2.49166666666667)))/(100)))+((((v114)*(11.12)))/(100)))+((((v115)*(8)))/(100)))+((((v116)*(20)))/(100))))/(100))))))/(100))))))*(1))
 
 APM model error: string > 15000  characters
 Consider breaking up the line into multiple equations
 
 The may also be due to only using newline character CR
   instead of CR LF (for Windows) or LF (for MacOS/Linux) 
 To fix this problem, save APM file with appropriate newline characters
 
 STOPPING...
 


2018-12-06 14:46:00,002 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 677.3481515920865), (1, 1, 1)]
2018-12-06 14:46:00,002 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.705484812757092, 'sio2': 91.61821442368183, 'cost': 0.6763007635610725}
2018-12-06 14:46:00,179 __main__ mainTask ERROR = Traceback (most recent call last):
  File "C:/Users/sun/PycharmProjects/optimizationproblem/gekkoSolution/mainTask.py", line 37, in <module>
    lp.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\gekkoSolution\gekkoProblem.py", line 46, in solve
    self.prob.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\gekko\gekko.py", line 682, in solve
    raise Exception(apm_error)
Exception:  @error: Max Equation Length
 Error with line number:  120
 i0=(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((((910.99486005)*(v1)))*(0.94)))/(100)))+((((((853.351)*(v2)))*(0.927)))/(100)))+((((((1039.8935286)*(v3)))*(1.0)))/(100)))+((((((770.6612881)*(v4)))*(0.685)))/(100)))+((((((500)*(v5)))*(0.8888)))/(100)))+((((((500)*(v6)))*(0.92)))/(100)))+((((((826.195501934952)*(v7)))*(0.8)))/(100)))+((((((989.88716)*(v8)))*(0.94)))/(100)))+((((((1130.5194048)*(v9)))*(0.9750833333333333)))/(100)))+((((((500)*(v10)))*(0.94)))/(100)))+((((((300)*(v11)))*(0.927)))/(100)))+((((((1069.8162944)*(v12)))*(1.0)))/(100)))+((((((1245.56)*(v13)))*(0.685)))/(100)))+((((((500)*(v14)))*(0.8888)))/(100)))+((((((825.711413030191)*(v15)))*(0.92)))/(100)))+((((((1004.658478)*(v16)))*(0.8)))/(100)))+((((((1129.8570048)*(v17)))*(0.94)))/(100)))+((((((300)*(v18)))*(0.9750833333333333)))/(100)))+((((((801.67994)*(v19)))*(0.94)))/(100)))+((((((834.2588482)*(v20)))*(0.927)))/(100)))+((((((991.6951428)*(v21)))*(1.0)))/(100)))+((((((500)*(v22)))*(0.685)))/(100)))+((((((886.96504)*(v23)))*(0.8888)))/(100)))+((((((1049.00673)*(v24)))*(0.92)))/(100)))+((((((1059.7526526)*(v25)))*(0.8)))/(100)))+((((((1097.7898072)*(v26)))*(0.94)))/(100)))+((((((500)*(v27)))*(0.9750833333333333)))/(100)))+((((((825.711413030191)*(v28)))*(0.94)))/(100)))+((((((1004.658478)*(v29)))*(0.927)))/(100)))+((((((1241.92)*(v30)))*(1.0)))/(100)))+((((((941.547504)*(v31)))*(0.685)))/(100)))+((((((826.7537594)*(v32)))*(0.8888)))/(100)))+((((((300)*(v33)))*(0.92)))/(100)))+((((((775.7532696)*(v34)))*(0.8)))/(100)))+((((((500)*(v35)))*(0.94)))/(100)))+((((((944.28)*(v36)))*(0.9750833333333333)))/(100)))+((((((612.08)*(v37)))*(1.0)))/(100)))+((((((500)*(v38)))*(1.0)))/(100)))+((((((473.38)*(v39)))*(1.0)))/(100)))+((((((925.96)*(v40)))*(1.0)))/(100)))+((((((484.27)*(v41)))*(1.0)))/(100)))+((((((780.55)*(v42)))*(1.0)))/(100)))+((((((434.35)*(v43)))*(1.0)))/(100)))+((((((1228.65)*(v44)))*(1.0)))/(100)))+((((((300)*(v45)))*(1.0)))/(100)))+((((((500)*(v46)))*(1.0)))/(100)))+((((((964.82)*(v47)))*(1.0)))/(100)))+((((((586.286222115809)*(v48)))*(1.0)))/(100)))+((((((500)*(v49)))*(1.0)))/(100)))+((((((0)*(v50)))*(1.0)))/(100)))+((((((925.96)*(v51)))*(1.0)))/(100)))+((((((405.863293435074)*(v52)))*(1.0)))/(100)))+((((((910.96)*(v53)))*(1.0)))/(100)))+((((((0)*(v54)))*(1.0)))/(100)))+((((((1242.28973578925)*(v55)))*(1.0)))/(100)))+((((((300)*(v56)))*(1.0)))/(100)))+((((((500)*(v57)))*(1.0)))/(100)))+((((((773.95)*(v58)))*(1.0)))/(100)))+((((((0)*(v59)))*(1.0)))/(100)))+((((((500)*(v60)))*(1.0)))/(100)))+((((((634.53)*(v61)))*(1.0)))/(100)))+((((((746.2)*(v62)))*(1.0)))/(100)))+((((((747.1)*(v63)))*(1.0)))/(100)))+((((((800)*(v64)))*(1.0)))/(100)))+((((((500)*(v65)))*(1.0)))/(100)))+((((((100)*(v66)))*(1.0)))/(100)))+((((((500)*(v67)))*(1.0)))/(100)))+((((((773.95)*(v68)))*(1.0)))/(100)))+((((((793.97)*(v69)))*(1.0)))/(100)))+((((((500)*(v70)))*(1.0)))/(100)))+((((((634.53)*(v71)))*(1.0)))/(100)))+((((((746.2)*(v72)))*(1.0)))/(100)))+((((((747.1)*(v73)))*(1.0)))/(100)))+((((((800)*(v74)))*(1.0)))/(100)))+((((((500)*(v75)))*(0.94)))/(100)))+((((((100)*(v76)))*(0.927)))/(100)))+((((((500)*(v77)))*(1.0)))/(100)))+((((((773.95)*(v78)))*(0.685)))/(100)))+((((((793.97)*(v79)))*(0.8888)))/(100)))+((((((500)*(v80)))*(0.92)))/(100)))+((((((634.53)*(v81)))*(0.8)))/(100)))+((((((746.2)*(v82)))*(0.94)))/(100)))+((((((747.1)*(v83)))*(0.9750833333333333)))/(100)))+((((((800)*(v84)))*(1.0)))/(100)))+((((((500)*(v85)))*(1.0)))/(100)))+((((((100)*(v86)))*(1.0)))/(100)))+((((((500)*(v87)))*(1.0)))/(100)))+((((((566.5)*(v88)))*(1.0)))/(100)))+((((((600.5)*(v89)))*(1.0)))/(100)))+((((((500)*(v90)))*(1.0)))/(100)))+((((((431.41)*(v91)))*(1.0)))/(100)))+((((((498.015344202792)*(v92)))*(1.0)))/(100)))+((((((466.846846846847)*(v93)))*(1.0)))/(100)))+((((((500)*(v94)))*(1.0)))/(100)))+((((((100)*(v95)))*(1.0)))/(100)))+((((((500)*(v96)))*(1.0)))/(100)))+((((((910.99486005)*(v97)))*(1.0)))/(100)))+((((((853.351)*(v98)))*(1.0)))/(100)))+((((((1039.8935286)*(v99)))*(0.94)))/(100)))+((((((770.6612881)*(v100)))*(0.927)))/(100)))+((((((500)*(v101)))*(1.0)))/(100)))+((((((500)*(v102)))*(0.685)))/(100)))+((((((826.195501934952)*(v103)))*(0.8888)))/(100)))+((((((989.88716)*(v104)))*(0.92)))/(100)))+((((((1130.5194048)*(v105)))*(0.8)))/(100)))+((((((500)*(v106)))*(0.94)))/(100)))+((((((300)*(v107)))*(0.9750833333333333)))/(100)))+((((((826.195501934952)*(v108)))*(0.8888)))/(100)))+((((((989.88716)*(v109)))*(0.92)))/(100)))+((((((1130.5194048)*(v110)))*(0.8)))/(100)))+((((((500)*(v111)))*(0.94)))/(100)))+((((((300)*(v112)))*(0.9750833333333333)))/(100)))+((((((300)*(v113)))*(0.9750833333333333)))/(100)))+((((((826.195501934952)*(v114)))*(0.8888)))/(100)))+((((((989.88716)*(v115)))*(0.92)))/(100))))/((1-(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((v1)*(6)))/(100)))+((((v2)*(7.3)))/(100)))+((((v3)*(0)))/(100)))+((((v4)*(31.5)))/(100)))+((((v5)*(11.12)))/(100)))+((((v6)*(8)))/(100)))+((((v7)*(20)))/(100)))+((((v8)*(6)))/(100)))+((((v9)*(2.49166666666667)))/(100)))+((((v10)*(6)))/(100)))+((((v11)*(7.3)))/(100)))+((((v12)*(0)))/(100)))+((((v13)*(31.5)))/(100)))+((((v14)*(11.12)))/(100)))+((((v15)*(8)))/(100)))+((((v16)*(20)))/(100)))+((((v17)*(6)))/(100)))+((((v18)*(2.49166666666667)))/(100)))+((((v19)*(6)))/(100)))+((((v20)*(7.3)))/(100)))+((((v21)*(0)))/(100)))+((((v22)*(31.5)))/(100)))+((((v23)*(11.12)))/(100)))+((((v24)*(8)))/(100)))+((((v25)*(20)))/(100)))+((((v26)*(6)))/(100)))+((((v27)*(2.49166666666667)))/(100)))+((((v28)*(6)))/(100)))+((((v29)*(7.3)))/(100)))+((((v30)*(0)))/(100)))+((((v31)*(31.5)))/(100)))+((((v32)*(11.12)))/(100)))+((((v33)*(8)))/(100)))+((((v34)*(20)))/(100)))+((((v35)*(6)))/(100)))+((((v36)*(2.49166666666667)))/(100)))+((((v37)*(0)))/(100)))+((((v38)*(0)))/(100)))+((((v39)*(0)))/(100)))+((((v40)*(0)))/(100)))+((((v41)*(0)))/(100)))+((((v42)*(0)))/(100)))+((((v43)*(0)))/(100)))+((((v44)*(0)))/(100)))+((((v45)*(0)))/(100)))+((((v46)*(0)))/(100)))+((((v47)*(0)))/(100)))+((((v48)*(0)))/(100)))+((((v49)*(0)))/(100)))+((((v50)*(0)))/(100)))+((((v51)*(0)))/(100)))+((((v52)*(0)))/(100)))+((((v53)*(0)))/(100)))+((((v54)*(0)))/(100)))+((((v55)*(0)))/(100)))+((((v56)*(0)))/(100)))+((((v57)*(0)))/(100)))+((((v58)*(0)))/(100)))+((((v59)*(0)))/(100)))+((((v60)*(0)))/(100)))+((((v61)*(0)))/(100)))+((((v62)*(0)))/(100)))+((((v63)*(0)))/(100)))+((((v64)*(0)))/(100)))+((((v65)*(0)))/(100)))+((((v66)*(0)))/(100)))+((((v67)*(0)))/(100)))+((((v68)*(0)))/(100)))+((((v69)*(0)))/(100)))+((((v70)*(0)))/(100)))+((((v71)*(0)))/(100)))+((((v72)*(0)))/(100)))+((((v73)*(0)))/(100)))+((((v74)*(0)))/(100)))+((((v75)*(6)))/(100)))+((((v76)*(7.3)))/(100)))+((((v77)*(0)))/(100)))+((((v78)*(31.5)))/(100)))+((((v79)*(11.12)))/(100)))+((((v80)*(8)))/(100)))+((((v81)*(20)))/(100)))+((((v82)*(6)))/(100)))+((((v83)*(2.49166666666667)))/(100)))+((((v84)*(0)))/(100)))+((((v85)*(0)))/(100)))+((((v86)*(0)))/(100)))+((((v87)*(0)))/(100)))+((((v88)*(0)))/(100)))+((((v89)*(0)))/(100)))+((((v90)*(0)))/(100)))+((((v91)*(0)))/(100)))+((((v92)*(0)))/(100)))+((((v93)*(0)))/(100)))+((((v94)*(0)))/(100)))+((((v95)*(0)))/(100)))+((((v96)*(0)))/(100)))+((((v97)*(0)))/(100)))+((((v98)*(0)))/(100)))+((((v99)*(6)))/(100)))+((((v100)*(7.3)))/(100)))+((((v101)*(0)))/(100)))+((((v102)*(31.5)))/(100)))+((((v103)*(11.12)))/(100)))+((((v104)*(8)))/(100)))+((((v105)*(20)))/(100)))+((((v106)*(6)))/(100)))+((((v107)*(2.49166666666667)))/(100)))+((((v108)*(11.12)))/(100)))+((((v109)*(8)))/(100)))+((((v110)*(20)))/(100)))+((((v111)*(6)))/(100)))+((((v112)*(2.49166666666667)))/(100)))+((((v113)*(2.49166666666667)))/(100)))+((((v114)*(11.12)))/(100)))+((((v115)*(8)))/(100))))/(100))))))/((1-(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((((2.63)*(v1)))*(0.94)))/(100)))+((((((6)*(v2)))*(0.927)))/(100)))+((((((1)*(v3)))*(1.0)))/(100)))+((((((13.63)*(v4)))*(0.685)))/(100)))+((((((9.5)*(v5)))*(0.8888)))/(100)))+((((((9)*(v6)))*(0.92)))/(100)))+((((((4.36)*(v7)))*(0.8)))/(100)))+((((((2)*(v8)))*(0.94)))/(100)))+((((((31.3234615384615)*(v9)))*(0.9750833333333333)))/(100)))+((((((2.63)*(v10)))*(0.94)))/(100)))+((((((6)*(v11)))*(0.927)))/(100)))+((((((1)*(v12)))*(1.0)))/(100)))+((((((13.63)*(v13)))*(0.685)))/(100)))+((((((9.5)*(v14)))*(0.8888)))/(100)))+((((((9)*(v15)))*(0.92)))/(100)))+((((((4.36)*(v16)))*(0.8)))/(100)))+((((((2)*(v17)))*(0.94)))/(100)))+((((((31.3234615384615)*(v18)))*(0.9750833333333333)))/(100)))+((((((0)*(v19)))*(0.94)))/(100)))+((((((0)*(v20)))*(0.927)))/(100)))+((((((0)*(v21)))*(1.0)))/(100)))+((((((0)*(v22)))*(0.685)))/(100)))+((((((0)*(v23)))*(0.8888)))/(100)))+((((((0)*(v24)))*(0.92)))/(100)))+((((((0)*(v25)))*(0.8)))/(100)))+((((((0)*(v26)))*(0.94)))/(100)))+((((((0)*(v27)))*(0.9750833333333333)))/(100)))+((((((0)*(v28)))*(0.94)))/(100)))+((((((0)*(v29)))*(0.927)))/(100)))+((((((0)*(v30)))*(1.0)))/(100)))+((((((0)*(v31)))*(0.685)))/(100)))+((((((0)*(v32)))*(0.8888)))/(100)))+((((((0)*(v33)))*(0.92)))/(100)))+((((((0)*(v34)))*(0.8)))/(100)))+((((((0)*(v35)))*(0.94)))/(100)))+((((((2.63)*(v36)))*(0.9750833333333333)))/(100)))+((((((6)*(v37)))*(1.0)))/(100)))+((((((1)*(v38)))*(1.0)))/(100)))+((((((13.63)*(v39)))*(1.0)))/(100)))+((((((9.5)*(v40)))*(1.0)))/(100)))+((((((9)*(v41)))*(1.0)))/(100)))+((((((4.36)*(v42)))*(1.0)))/(100)))+((((((2)*(v43)))*(1.0)))/(100)))+((((((31.3234615384615)*(v44)))*(1.0)))/(100)))+((((((0)*(v45)))*(1.0)))/(100)))+((((((0)*(v46)))*(1.0)))/(100)))+((((((0)*(v47)))*(1.0)))/(100)))+((((((0)*(v48)))*(1.0)))/(100)))+((((((0)*(v49)))*(1.0)))/(100)))+((((((0)*(v50)))*(1.0)))/(100)))+((((((0)*(v51)))*(1.0)))/(100)))+((((((0)*(v52)))*(1.0)))/(100)))+((((((0)*(v53)))*(1.0)))/(100)))+((((((0)*(v54)))*(1.0)))/(100)))+((((((0)*(v55)))*(1.0)))/(100)))+((((((0)*(v56)))*(1.0)))/(100)))+((((((0)*(v57)))*(1.0)))/(100)))+((((((0)*(v58)))*(1.0)))/(100)))+((((((0)*(v59)))*(1.0)))/(100)))+((((((2.63)*(v60)))*(1.0)))/(100)))+((((((6)*(v61)))*(1.0)))/(100)))+((((((1)*(v62)))*(1.0)))/(100)))+((((((13.63)*(v63)))*(1.0)))/(100)))+((((((9.5)*(v64)))*(1.0)))/(100)))+((((((9)*(v65)))*(1.0)))/(100)))+((((((4.36)*(v66)))*(1.0)))/(100)))+((((((2)*(v67)))*(1.0)))/(100)))+((((((31.3234615384615)*(v68)))*(1.0)))/(100)))+((((((0)*(v69)))*(1.0)))/(100)))+((((((0)*(v70)))*(1.0)))/(100)))+((((((0)*(v71)))*(1.0)))/(100)))+((((((0)*(v72)))*(1.0)))/(100)))+((((((0)*(v73)))*(1.0)))/(100)))+((((((0)*(v74)))*(1.0)))/(100)))+((((((0)*(v75)))*(0.94)))/(100)))+((((((0)*(v76)))*(0.927)))/(100)))+((((((0)*(v77)))*(1.0)))/(100)))+((((((0)*(v78)))*(0.685)))/(100)))+((((((0)*(v79)))*(0.8888)))/(100)))+((((((0)*(v80)))*(0.92)))/(100)))+((((((0)*(v81)))*(0.8)))/(100)))+((((((2.63)*(v82)))*(0.94)))/(100)))+((((((6)*(v83)))*(0.9750833333333333)))/(100)))+((((((1)*(v84)))*(1.0)))/(100)))+((((((13.63)*(v85)))*(1.0)))/(100)))+((((((9.5)*(v86)))*(1.0)))/(100)))+((((((9)*(v87)))*(1.0)))/(100)))+((((((4.36)*(v88)))*(1.0)))/(100)))+((((((2)*(v89)))*(1.0)))/(100)))+((((((31.3234615384615)*(v90)))*(1.0)))/(100)))+((((((0)*(v91)))*(1.0)))/(100)))+((((((0)*(v92)))*(1.0)))/(100)))+((((((0)*(v93)))*(1.0)))/(100)))+((((((0)*(v94)))*(1.0)))/(100)))+((((((0)*(v95)))*(1.0)))/(100)))+((((((2.63)*(v96)))*(1.0)))/(100)))+((((((6)*(v97)))*(1.0)))/(100)))+((((((1)*(v98)))*(1.0)))/(100)))+((((((13.63)*(v99)))*(0.94)))/(100)))+((((((9.5)*(v100)))*(0.927)))/(100)))+((((((9)*(v101)))*(1.0)))/(100)))+((((((4.36)*(v102)))*(0.685)))/(100)))+((((((2)*(v103)))*(0.8888)))/(100)))+((((((31.3234615384615)*(v104)))*(0.92)))/(100)))+((((((0)*(v105)))*(0.8)))/(100)))+((((((0)*(v106)))*(0.94)))/(100)))+((((((0)*(v107)))*(0.9750833333333333)))/(100)))+((((((2)*(v108)))*(0.8888)))/(100)))+((((((31.3234615384615)*(v109)))*(0.92)))/(100)))+((((((0)*(v110)))*(0.8)))/(100)))+((((((0)*(v111)))*(0.94)))/(100)))+((((((0)*(v112)))*(0.9750833333333333)))/(100)))+((((((0)*(v113)))*(0.9750833333333333)))/(100)))+((((((2)*(v114)))*(0.8888)))/(100)))+((((((31.3234615384615)*(v115)))*(0.92)))/(100))))/((1-(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((v1)*(6)))/(100)))+((((v2)*(7.3)))/(100)))+((((v3)*(0)))/(100)))+((((v4)*(31.5)))/(100)))+((((v5)*(11.12)))/(100)))+((((v6)*(8)))/(100)))+((((v7)*(20)))/(100)))+((((v8)*(6)))/(100)))+((((v9)*(2.49166666666667)))/(100)))+((((v10)*(6)))/(100)))+((((v11)*(7.3)))/(100)))+((((v12)*(0)))/(100)))+((((v13)*(31.5)))/(100)))+((((v14)*(11.12)))/(100)))+((((v15)*(8)))/(100)))+((((v16)*(20)))/(100)))+((((v17)*(6)))/(100)))+((((v18)*(2.49166666666667)))/(100)))+((((v19)*(6)))/(100)))+((((v20)*(7.3)))/(100)))+((((v21)*(0)))/(100)))+((((v22)*(31.5)))/(100)))+((((v23)*(11.12)))/(100)))+((((v24)*(8)))/(100)))+((((v25)*(20)))/(100)))+((((v26)*(6)))/(100)))+((((v27)*(2.49166666666667)))/(100)))+((((v28)*(6)))/(100)))+((((v29)*(7.3)))/(100)))+((((v30)*(0)))/(100)))+((((v31)*(31.5)))/(100)))+((((v32)*(11.12)))/(100)))+((((v33)*(8)))/(100)))+((((v34)*(20)))/(100)))+((((v35)*(6)))/(100)))+((((v36)*(2.49166666666667)))/(100)))+((((v37)*(0)))/(100)))+((((v38)*(0)))/(100)))+((((v39)*(0)))/(100)))+((((v40)*(0)))/(100)))+((((v41)*(0)))/(100)))+((((v42)*(0)))/(100)))+((((v43)*(0)))/(100)))+((((v44)*(0)))/(100)))+((((v45)*(0)))/(100)))+((((v46)*(0)))/(100)))+((((v47)*(0)))/(100)))+((((v48)*(0)))/(100)))+((((v49)*(0)))/(100)))+((((v50)*(0)))/(100)))+((((v51)*(0)))/(100)))+((((v52)*(0)))/(100)))+((((v53)*(0)))/(100)))+((((v54)*(0)))/(100)))+((((v55)*(0)))/(100)))+((((v56)*(0)))/(100)))+((((v57)*(0)))/(100)))+((((v58)*(0)))/(100)))+((((v59)*(0)))/(100)))+((((v60)*(0)))/(100)))+((((v61)*(0)))/(100)))+((((v62)*(0)))/(100)))+((((v63)*(0)))/(100)))+((((v64)*(0)))/(100)))+((((v65)*(0)))/(100)))+((((v66)*(0)))/(100)))+((((v67)*(0)))/(100)))+((((v68)*(0)))/(100)))+((((v69)*(0)))/(100)))+((((v70)*(0)))/(100)))+((((v71)*(0)))/(100)))+((((v72)*(0)))/(100)))+((((v73)*(0)))/(100)))+((((v74)*(0)))/(100)))+((((v75)*(6)))/(100)))+((((v76)*(7.3)))/(100)))+((((v77)*(0)))/(100)))+((((v78)*(31.5)))/(100)))+((((v79)*(11.12)))/(100)))+((((v80)*(8)))/(100)))+((((v81)*(20)))/(100)))+((((v82)*(6)))/(100)))+((((v83)*(2.49166666666667)))/(100)))+((((v84)*(0)))/(100)))+((((v85)*(0)))/(100)))+((((v86)*(0)))/(100)))+((((v87)*(0)))/(100)))+((((v88)*(0)))/(100)))+((((v89)*(0)))/(100)))+((((v90)*(0)))/(100)))+((((v91)*(0)))/(100)))+((((v92)*(0)))/(100)))+((((v93)*(0)))/(100)))+((((v94)*(0)))/(100)))+((((v95)*(0)))/(100)))+((((v96)*(0)))/(100)))+((((v97)*(0)))/(100)))+((((v98)*(0)))/(100)))+((((v99)*(6)))/(100)))+((((v100)*(7.3)))/(100)))+((((v101)*(0)))/(100)))+((((v102)*(31.5)))/(100)))+((((v103)*(11.12)))/(100)))+((((v104)*(8)))/(100)))+((((v105)*(20)))/(100)))+((((v106)*(6)))/(100)))+((((v107)*(2.49166666666667)))/(100)))+((((v108)*(11.12)))/(100)))+((((v109)*(8)))/(100)))+((((v110)*(20)))/(100)))+((((v111)*(6)))/(100)))+((((v112)*(2.49166666666667)))/(100)))+((((v113)*(2.49166666666667)))/(100)))+((((v114)*(11.12)))/(100)))+((((v115)*(8)))/(100))))/(100))))))/(100))))))*(1))
 
 APM model error: string > 15000  characters
 Consider breaking up the line into multiple equations
 
 The may also be due to only using newline character CR
   instead of CR LF (for Windows) or LF (for MacOS/Linux) 
 To fix this problem, save APM file with appropriate newline characters
 
 STOPPING...
 


2018-12-06 14:46:12,413 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 674.6065813428943), (1, 1, 1)]
2018-12-06 14:46:12,413 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.705273036769767, 'sio2': 91.61569640719253, 'cost': 0.6790305560377079}
2018-12-06 14:46:19,951 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5714713, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.01, 1.01, 0.0, 0.0, 0.0, 0.0, 0.0, 12.5228, 8.434098, 0.0, 0.0, 0.0, 6.396422, 0.0, 0.0, 0.0, 0.0, 15.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.058813, 0.0, 2.504559, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 16.89029, 30.0, 0.6015498, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
2018-12-06 14:46:19,951 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['高宝印粉-13_1=[0.0]', '朝鲜粉-13_1=[0.0]', '伊朗粉-13_1=[0.0]', '海南铁粉-13_1=[0.0]', '高返-13_1=[0.0]', '铁泥-13_1=[0.0]', '过筛镍矿-13_1=[0.0]', '塞阿里昂粉-13_1=[0.0]', '巴西粗粉-13_1=[0.0]', '重力除尘灰-13_1=[0.0]', '水洗铁-13_1=[0.0]', '巴西粗粉-13_3=[0.0]', '还原铁粉-13_3=[0.0]', '高返-13_3=[0.0]', '过筛镍矿-13_3=[0.0]', '塞拉利昂粉-13_3=[0.0]', '巴西卡粉-13_3=[0.0]', '水洗铁-13_3=[0.0]', '马来西亚粉（高硅）-13_3=[0.0]', '印尼粉-13_3=[0.0]', '塞尔维亚粉-13_3=[0.0]', '重力除尘灰-13_3=[0.5714713]', '马来西亚粉（低硅）-13_3=[0.0]', 'PB粉-13_3=[0.0]', '高品澳粉-13_4=[0.0]', '巴西精粉-13_4=[0.0]', '高返-13_4=[0.0]', '过筛镍矿-13_4=[0.0]', '塞拉利昂（破碎）-13_4=[0.0]', '还原铁粉-13_4=[0.0]', '赛尔维亚粉-13_4=[0.0]', '印尼粉-13_4=[0.0]', '水洗铁-13_4=[0.0]', '马来西亚-13_4=[0.0]', '重力除尘灰-13_4=[0.0]', '高品澳粉-13_5=[0.0]', '赛尔维亚粉-13_5=[0.0]', '高返-13_5=[0.0]', '过筛镍矿-13_5=[0.0]', '过筛塞拉利昂粉-13_5=[0.0]', '印尼粉-13_5=[0.0]', '委内瑞拉粉-13_5=[0.01]', '朝鲜铁粉-13_5=[1.01]', '还原铁粉-13_5=[0.0]', '水洗铁-13_5=[0.0]', '重力除尘灰-13_5=[0.0]', '高品澳粉-13_12=[0.0]', '赛尔维亚粉-13_12=[0.0]', '高返-13_12=[12.5228]', '过筛镍矿-13_12=[8.434098]', '过筛塞拉利昂粉-13_12=[0.0]', '印尼粉-13_12=[0.0]', '委内瑞拉粉-13_12=[0.0]', '朝鲜铁粉-13_12=[6.396422]', '还原铁粉-13_12=[0.0]', '水洗铁-13_12=[0.0]', '重力除尘灰-13_12=[0.0]', '巴西粗粉-14-1=[0.0]', '高品澳粉-14-1=[15.0]', '高返-14-1=[0.0]', '过筛镍矿-14-1=[0.0]', '塞拉利昂粉-14-1=[0.0]', 'FMG低品澳粉-14-1=[0.0]', '氧化铁-14-1=[0.0]', '铁泥-14-1=[0.0]', '干渣粉-14-1=[0.0]', '重力除尘灰-14-1=[0.0]', '巴西粗粉-14-3=[0.0]', '高品澳粉-14-3=[0.0]', '高返-14-3=[0.0]', '过筛镍矿-14-3=[0.0]', '塞拉利昂粉-14-3=[0.0]', 'FMG低品澳粉-14-3=[0.0]', '氧化铁-14-3=[6.058813]', '铁泥-14-3=[0.0]', '干渣粉-14-3=[2.504559]', '重力除尘灰-14-3=[0.0]', '巴西粗粉-14-4=[0.0]', '高品澳粉-14-4=[0.0]', '高返-14-4=[0.0]', '过筛镍矿-14-4=[0.0]', '塞拉利昂粉-14-4=[0.0]', 'FMG低品澳粉-14-4=[0.0]', '氧化铁-14-4=[0.0]', '铁泥-14-4=[0.0]', '干渣粉-14-4=[0.0]', '重力除尘灰-14-4=[0.0]', '巴西粗粉-14-4=[0.0]', '高品澳粉-14-12=[0.0]', '高返-14-12=[0.0]', '过筛镍矿-14-12=[0.0]', '塞拉利昂粉-14-12=[16.89029]', 'FMG低品澳粉-14-12=[30.0]', '铁泥-14-12=[0.6015498]', '干渣粉-14-12=[0.0]', '重力除尘灰-14-12=[0.0]', '高宝印粉-13_1=[0.0]', '朝鲜粉-13_1=[0.0]', '伊朗粉-13_1=[0.0]', '海南铁粉-13_1=[0.0]', '高返-13_1=[0.0]', '铁泥-13_1=[0.0]', '过筛镍矿-13_1=[0.0]', '塞阿里昂粉-13_1=[0.0]', '巴西粗粉-13_1=[0.0]', '重力除尘灰-13_1=[0.0]', '水洗铁-13_1=[0.0]', '过筛镍矿-13_1=[0.0]', '塞阿里昂粉-13_1=[0.0]', '巴西粗粉-13_1=[0.0]', '重力除尘灰-13_1=[0.0]', '水洗铁-13_1=[0.0]', '水洗铁-13_1=[0.0]', '过筛镍矿-13_1=[0.0]']
2018-12-06 14:46:19,962 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934]
2018-12-06 14:46:19,962 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=347.0065483299038, wet_price=348.27023387083494, obj_price=348.342379582306)
2018-12-06 14:46:36,145 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 675.9247458697818), (1, 1, 1)]
2018-12-06 14:46:36,145 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.705375072992968, 'sio2': 91.61690961788639, 'cost': 0.6777153091206441}
2018-12-06 14:46:36,325 __main__ mainTask ERROR = Traceback (most recent call last):
  File "C:/Users/sun/PycharmProjects/optimizationproblem/gekkoSolution/mainTask.py", line 37, in <module>
    lp.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\gekkoSolution\gekkoProblem.py", line 46, in solve
    self.prob.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\gekko\gekko.py", line 682, in solve
    raise Exception(apm_error)
Exception:  @error: Max Equation Length
 Error with line number:  120
 i0=(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((((910.99486005)*(v1)))*(0.94)))/(100)))+((((((853.351)*(v2)))*(0.927)))/(100)))+((((((1039.8935286)*(v3)))*(1.0)))/(100)))+((((((770.6612881)*(v4)))*(0.685)))/(100)))+((((((500)*(v5)))*(0.8888)))/(100)))+((((((500)*(v6)))*(0.92)))/(100)))+((((((826.195501934952)*(v7)))*(0.8)))/(100)))+((((((989.88716)*(v8)))*(0.94)))/(100)))+((((((1130.5194048)*(v9)))*(0.9750833333333333)))/(100)))+((((((500)*(v10)))*(0.94)))/(100)))+((((((300)*(v11)))*(0.927)))/(100)))+((((((1069.8162944)*(v12)))*(1.0)))/(100)))+((((((1245.56)*(v13)))*(0.685)))/(100)))+((((((500)*(v14)))*(0.8888)))/(100)))+((((((825.711413030191)*(v15)))*(0.92)))/(100)))+((((((1004.658478)*(v16)))*(0.8)))/(100)))+((((((1129.8570048)*(v17)))*(0.94)))/(100)))+((((((300)*(v18)))*(0.9750833333333333)))/(100)))+((((((801.67994)*(v19)))*(0.94)))/(100)))+((((((834.2588482)*(v20)))*(0.927)))/(100)))+((((((991.6951428)*(v21)))*(1.0)))/(100)))+((((((500)*(v22)))*(0.685)))/(100)))+((((((886.96504)*(v23)))*(0.8888)))/(100)))+((((((1049.00673)*(v24)))*(0.92)))/(100)))+((((((1059.7526526)*(v25)))*(0.8)))/(100)))+((((((1097.7898072)*(v26)))*(0.94)))/(100)))+((((((500)*(v27)))*(0.9750833333333333)))/(100)))+((((((825.711413030191)*(v28)))*(0.94)))/(100)))+((((((1004.658478)*(v29)))*(0.927)))/(100)))+((((((1241.92)*(v30)))*(1.0)))/(100)))+((((((941.547504)*(v31)))*(0.685)))/(100)))+((((((826.7537594)*(v32)))*(0.8888)))/(100)))+((((((300)*(v33)))*(0.92)))/(100)))+((((((775.7532696)*(v34)))*(0.8)))/(100)))+((((((500)*(v35)))*(0.94)))/(100)))+((((((944.28)*(v36)))*(0.9750833333333333)))/(100)))+((((((612.08)*(v37)))*(1.0)))/(100)))+((((((500)*(v38)))*(1.0)))/(100)))+((((((473.38)*(v39)))*(1.0)))/(100)))+((((((925.96)*(v40)))*(1.0)))/(100)))+((((((484.27)*(v41)))*(1.0)))/(100)))+((((((780.55)*(v42)))*(1.0)))/(100)))+((((((434.35)*(v43)))*(1.0)))/(100)))+((((((1228.65)*(v44)))*(1.0)))/(100)))+((((((300)*(v45)))*(1.0)))/(100)))+((((((500)*(v46)))*(1.0)))/(100)))+((((((964.82)*(v47)))*(1.0)))/(100)))+((((((586.286222115809)*(v48)))*(1.0)))/(100)))+((((((500)*(v49)))*(1.0)))/(100)))+((((((0)*(v50)))*(1.0)))/(100)))+((((((925.96)*(v51)))*(1.0)))/(100)))+((((((405.863293435074)*(v52)))*(1.0)))/(100)))+((((((910.96)*(v53)))*(1.0)))/(100)))+((((((0)*(v54)))*(1.0)))/(100)))+((((((1242.28973578925)*(v55)))*(1.0)))/(100)))+((((((300)*(v56)))*(1.0)))/(100)))+((((((500)*(v57)))*(1.0)))/(100)))+((((((773.95)*(v58)))*(1.0)))/(100)))+((((((0)*(v59)))*(1.0)))/(100)))+((((((500)*(v60)))*(1.0)))/(100)))+((((((634.53)*(v61)))*(1.0)))/(100)))+((((((746.2)*(v62)))*(1.0)))/(100)))+((((((747.1)*(v63)))*(1.0)))/(100)))+((((((800)*(v64)))*(1.0)))/(100)))+((((((500)*(v65)))*(1.0)))/(100)))+((((((100)*(v66)))*(1.0)))/(100)))+((((((500)*(v67)))*(1.0)))/(100)))+((((((773.95)*(v68)))*(1.0)))/(100)))+((((((793.97)*(v69)))*(1.0)))/(100)))+((((((500)*(v70)))*(1.0)))/(100)))+((((((634.53)*(v71)))*(1.0)))/(100)))+((((((746.2)*(v72)))*(1.0)))/(100)))+((((((747.1)*(v73)))*(1.0)))/(100)))+((((((800)*(v74)))*(1.0)))/(100)))+((((((500)*(v75)))*(0.94)))/(100)))+((((((100)*(v76)))*(0.927)))/(100)))+((((((500)*(v77)))*(1.0)))/(100)))+((((((773.95)*(v78)))*(0.685)))/(100)))+((((((793.97)*(v79)))*(0.8888)))/(100)))+((((((500)*(v80)))*(0.92)))/(100)))+((((((634.53)*(v81)))*(0.8)))/(100)))+((((((746.2)*(v82)))*(0.94)))/(100)))+((((((747.1)*(v83)))*(0.9750833333333333)))/(100)))+((((((800)*(v84)))*(1.0)))/(100)))+((((((500)*(v85)))*(1.0)))/(100)))+((((((100)*(v86)))*(1.0)))/(100)))+((((((500)*(v87)))*(1.0)))/(100)))+((((((566.5)*(v88)))*(1.0)))/(100)))+((((((600.5)*(v89)))*(1.0)))/(100)))+((((((500)*(v90)))*(1.0)))/(100)))+((((((431.41)*(v91)))*(1.0)))/(100)))+((((((498.015344202792)*(v92)))*(1.0)))/(100)))+((((((466.846846846847)*(v93)))*(1.0)))/(100)))+((((((500)*(v94)))*(1.0)))/(100)))+((((((100)*(v95)))*(1.0)))/(100)))+((((((500)*(v96)))*(1.0)))/(100)))+((((((910.99486005)*(v97)))*(1.0)))/(100)))+((((((853.351)*(v98)))*(1.0)))/(100)))+((((((1039.8935286)*(v99)))*(0.94)))/(100)))+((((((770.6612881)*(v100)))*(0.927)))/(100)))+((((((500)*(v101)))*(1.0)))/(100)))+((((((500)*(v102)))*(0.685)))/(100)))+((((((826.195501934952)*(v103)))*(0.8888)))/(100)))+((((((989.88716)*(v104)))*(0.92)))/(100)))+((((((1130.5194048)*(v105)))*(0.8)))/(100)))+((((((500)*(v106)))*(0.94)))/(100)))+((((((300)*(v107)))*(0.9750833333333333)))/(100)))+((((((826.195501934952)*(v108)))*(0.8888)))/(100)))+((((((989.88716)*(v109)))*(0.92)))/(100)))+((((((1130.5194048)*(v110)))*(0.8)))/(100)))+((((((500)*(v111)))*(0.94)))/(100)))+((((((300)*(v112)))*(0.9750833333333333)))/(100)))+((((((300)*(v113)))*(0.9750833333333333)))/(100)))+((((((826.195501934952)*(v114)))*(0.8888)))/(100)))+((((((826.195501934952)*(v115)))*(0.8888)))/(100))))/((1-(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((v1)*(6)))/(100)))+((((v2)*(7.3)))/(100)))+((((v3)*(0)))/(100)))+((((v4)*(31.5)))/(100)))+((((v5)*(11.12)))/(100)))+((((v6)*(8)))/(100)))+((((v7)*(20)))/(100)))+((((v8)*(6)))/(100)))+((((v9)*(2.49166666666667)))/(100)))+((((v10)*(6)))/(100)))+((((v11)*(7.3)))/(100)))+((((v12)*(0)))/(100)))+((((v13)*(31.5)))/(100)))+((((v14)*(11.12)))/(100)))+((((v15)*(8)))/(100)))+((((v16)*(20)))/(100)))+((((v17)*(6)))/(100)))+((((v18)*(2.49166666666667)))/(100)))+((((v19)*(6)))/(100)))+((((v20)*(7.3)))/(100)))+((((v21)*(0)))/(100)))+((((v22)*(31.5)))/(100)))+((((v23)*(11.12)))/(100)))+((((v24)*(8)))/(100)))+((((v25)*(20)))/(100)))+((((v26)*(6)))/(100)))+((((v27)*(2.49166666666667)))/(100)))+((((v28)*(6)))/(100)))+((((v29)*(7.3)))/(100)))+((((v30)*(0)))/(100)))+((((v31)*(31.5)))/(100)))+((((v32)*(11.12)))/(100)))+((((v33)*(8)))/(100)))+((((v34)*(20)))/(100)))+((((v35)*(6)))/(100)))+((((v36)*(2.49166666666667)))/(100)))+((((v37)*(0)))/(100)))+((((v38)*(0)))/(100)))+((((v39)*(0)))/(100)))+((((v40)*(0)))/(100)))+((((v41)*(0)))/(100)))+((((v42)*(0)))/(100)))+((((v43)*(0)))/(100)))+((((v44)*(0)))/(100)))+((((v45)*(0)))/(100)))+((((v46)*(0)))/(100)))+((((v47)*(0)))/(100)))+((((v48)*(0)))/(100)))+((((v49)*(0)))/(100)))+((((v50)*(0)))/(100)))+((((v51)*(0)))/(100)))+((((v52)*(0)))/(100)))+((((v53)*(0)))/(100)))+((((v54)*(0)))/(100)))+((((v55)*(0)))/(100)))+((((v56)*(0)))/(100)))+((((v57)*(0)))/(100)))+((((v58)*(0)))/(100)))+((((v59)*(0)))/(100)))+((((v60)*(0)))/(100)))+((((v61)*(0)))/(100)))+((((v62)*(0)))/(100)))+((((v63)*(0)))/(100)))+((((v64)*(0)))/(100)))+((((v65)*(0)))/(100)))+((((v66)*(0)))/(100)))+((((v67)*(0)))/(100)))+((((v68)*(0)))/(100)))+((((v69)*(0)))/(100)))+((((v70)*(0)))/(100)))+((((v71)*(0)))/(100)))+((((v72)*(0)))/(100)))+((((v73)*(0)))/(100)))+((((v74)*(0)))/(100)))+((((v75)*(6)))/(100)))+((((v76)*(7.3)))/(100)))+((((v77)*(0)))/(100)))+((((v78)*(31.5)))/(100)))+((((v79)*(11.12)))/(100)))+((((v80)*(8)))/(100)))+((((v81)*(20)))/(100)))+((((v82)*(6)))/(100)))+((((v83)*(2.49166666666667)))/(100)))+((((v84)*(0)))/(100)))+((((v85)*(0)))/(100)))+((((v86)*(0)))/(100)))+((((v87)*(0)))/(100)))+((((v88)*(0)))/(100)))+((((v89)*(0)))/(100)))+((((v90)*(0)))/(100)))+((((v91)*(0)))/(100)))+((((v92)*(0)))/(100)))+((((v93)*(0)))/(100)))+((((v94)*(0)))/(100)))+((((v95)*(0)))/(100)))+((((v96)*(0)))/(100)))+((((v97)*(0)))/(100)))+((((v98)*(0)))/(100)))+((((v99)*(6)))/(100)))+((((v100)*(7.3)))/(100)))+((((v101)*(0)))/(100)))+((((v102)*(31.5)))/(100)))+((((v103)*(11.12)))/(100)))+((((v104)*(8)))/(100)))+((((v105)*(20)))/(100)))+((((v106)*(6)))/(100)))+((((v107)*(2.49166666666667)))/(100)))+((((v108)*(11.12)))/(100)))+((((v109)*(8)))/(100)))+((((v110)*(20)))/(100)))+((((v111)*(6)))/(100)))+((((v112)*(2.49166666666667)))/(100)))+((((v113)*(2.49166666666667)))/(100)))+((((v114)*(11.12)))/(100)))+((((v115)*(11.12)))/(100))))/(100))))))/((1-(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((((2.63)*(v1)))*(0.94)))/(100)))+((((((6)*(v2)))*(0.927)))/(100)))+((((((1)*(v3)))*(1.0)))/(100)))+((((((13.63)*(v4)))*(0.685)))/(100)))+((((((9.5)*(v5)))*(0.8888)))/(100)))+((((((9)*(v6)))*(0.92)))/(100)))+((((((4.36)*(v7)))*(0.8)))/(100)))+((((((2)*(v8)))*(0.94)))/(100)))+((((((31.3234615384615)*(v9)))*(0.9750833333333333)))/(100)))+((((((2.63)*(v10)))*(0.94)))/(100)))+((((((6)*(v11)))*(0.927)))/(100)))+((((((1)*(v12)))*(1.0)))/(100)))+((((((13.63)*(v13)))*(0.685)))/(100)))+((((((9.5)*(v14)))*(0.8888)))/(100)))+((((((9)*(v15)))*(0.92)))/(100)))+((((((4.36)*(v16)))*(0.8)))/(100)))+((((((2)*(v17)))*(0.94)))/(100)))+((((((31.3234615384615)*(v18)))*(0.9750833333333333)))/(100)))+((((((0)*(v19)))*(0.94)))/(100)))+((((((0)*(v20)))*(0.927)))/(100)))+((((((0)*(v21)))*(1.0)))/(100)))+((((((0)*(v22)))*(0.685)))/(100)))+((((((0)*(v23)))*(0.8888)))/(100)))+((((((0)*(v24)))*(0.92)))/(100)))+((((((0)*(v25)))*(0.8)))/(100)))+((((((0)*(v26)))*(0.94)))/(100)))+((((((0)*(v27)))*(0.9750833333333333)))/(100)))+((((((0)*(v28)))*(0.94)))/(100)))+((((((0)*(v29)))*(0.927)))/(100)))+((((((0)*(v30)))*(1.0)))/(100)))+((((((0)*(v31)))*(0.685)))/(100)))+((((((0)*(v32)))*(0.8888)))/(100)))+((((((0)*(v33)))*(0.92)))/(100)))+((((((0)*(v34)))*(0.8)))/(100)))+((((((0)*(v35)))*(0.94)))/(100)))+((((((2.63)*(v36)))*(0.9750833333333333)))/(100)))+((((((6)*(v37)))*(1.0)))/(100)))+((((((1)*(v38)))*(1.0)))/(100)))+((((((13.63)*(v39)))*(1.0)))/(100)))+((((((9.5)*(v40)))*(1.0)))/(100)))+((((((9)*(v41)))*(1.0)))/(100)))+((((((4.36)*(v42)))*(1.0)))/(100)))+((((((2)*(v43)))*(1.0)))/(100)))+((((((31.3234615384615)*(v44)))*(1.0)))/(100)))+((((((0)*(v45)))*(1.0)))/(100)))+((((((0)*(v46)))*(1.0)))/(100)))+((((((0)*(v47)))*(1.0)))/(100)))+((((((0)*(v48)))*(1.0)))/(100)))+((((((0)*(v49)))*(1.0)))/(100)))+((((((0)*(v50)))*(1.0)))/(100)))+((((((0)*(v51)))*(1.0)))/(100)))+((((((0)*(v52)))*(1.0)))/(100)))+((((((0)*(v53)))*(1.0)))/(100)))+((((((0)*(v54)))*(1.0)))/(100)))+((((((0)*(v55)))*(1.0)))/(100)))+((((((0)*(v56)))*(1.0)))/(100)))+((((((0)*(v57)))*(1.0)))/(100)))+((((((0)*(v58)))*(1.0)))/(100)))+((((((0)*(v59)))*(1.0)))/(100)))+((((((2.63)*(v60)))*(1.0)))/(100)))+((((((6)*(v61)))*(1.0)))/(100)))+((((((1)*(v62)))*(1.0)))/(100)))+((((((13.63)*(v63)))*(1.0)))/(100)))+((((((9.5)*(v64)))*(1.0)))/(100)))+((((((9)*(v65)))*(1.0)))/(100)))+((((((4.36)*(v66)))*(1.0)))/(100)))+((((((2)*(v67)))*(1.0)))/(100)))+((((((31.3234615384615)*(v68)))*(1.0)))/(100)))+((((((0)*(v69)))*(1.0)))/(100)))+((((((0)*(v70)))*(1.0)))/(100)))+((((((0)*(v71)))*(1.0)))/(100)))+((((((0)*(v72)))*(1.0)))/(100)))+((((((0)*(v73)))*(1.0)))/(100)))+((((((0)*(v74)))*(1.0)))/(100)))+((((((0)*(v75)))*(0.94)))/(100)))+((((((0)*(v76)))*(0.927)))/(100)))+((((((0)*(v77)))*(1.0)))/(100)))+((((((0)*(v78)))*(0.685)))/(100)))+((((((0)*(v79)))*(0.8888)))/(100)))+((((((0)*(v80)))*(0.92)))/(100)))+((((((0)*(v81)))*(0.8)))/(100)))+((((((2.63)*(v82)))*(0.94)))/(100)))+((((((6)*(v83)))*(0.9750833333333333)))/(100)))+((((((1)*(v84)))*(1.0)))/(100)))+((((((13.63)*(v85)))*(1.0)))/(100)))+((((((9.5)*(v86)))*(1.0)))/(100)))+((((((9)*(v87)))*(1.0)))/(100)))+((((((4.36)*(v88)))*(1.0)))/(100)))+((((((2)*(v89)))*(1.0)))/(100)))+((((((31.3234615384615)*(v90)))*(1.0)))/(100)))+((((((0)*(v91)))*(1.0)))/(100)))+((((((0)*(v92)))*(1.0)))/(100)))+((((((0)*(v93)))*(1.0)))/(100)))+((((((0)*(v94)))*(1.0)))/(100)))+((((((0)*(v95)))*(1.0)))/(100)))+((((((2.63)*(v96)))*(1.0)))/(100)))+((((((6)*(v97)))*(1.0)))/(100)))+((((((1)*(v98)))*(1.0)))/(100)))+((((((13.63)*(v99)))*(0.94)))/(100)))+((((((9.5)*(v100)))*(0.927)))/(100)))+((((((9)*(v101)))*(1.0)))/(100)))+((((((4.36)*(v102)))*(0.685)))/(100)))+((((((2)*(v103)))*(0.8888)))/(100)))+((((((31.3234615384615)*(v104)))*(0.92)))/(100)))+((((((0)*(v105)))*(0.8)))/(100)))+((((((0)*(v106)))*(0.94)))/(100)))+((((((0)*(v107)))*(0.9750833333333333)))/(100)))+((((((2)*(v108)))*(0.8888)))/(100)))+((((((31.3234615384615)*(v109)))*(0.92)))/(100)))+((((((0)*(v110)))*(0.8)))/(100)))+((((((0)*(v111)))*(0.94)))/(100)))+((((((0)*(v112)))*(0.9750833333333333)))/(100)))+((((((0)*(v113)))*(0.9750833333333333)))/(100)))+((((((2)*(v114)))*(0.8888)))/(100)))+((((((2)*(v115)))*(0.8888)))/(100))))/((1-(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0+((((v1)*(6)))/(100)))+((((v2)*(7.3)))/(100)))+((((v3)*(0)))/(100)))+((((v4)*(31.5)))/(100)))+((((v5)*(11.12)))/(100)))+((((v6)*(8)))/(100)))+((((v7)*(20)))/(100)))+((((v8)*(6)))/(100)))+((((v9)*(2.49166666666667)))/(100)))+((((v10)*(6)))/(100)))+((((v11)*(7.3)))/(100)))+((((v12)*(0)))/(100)))+((((v13)*(31.5)))/(100)))+((((v14)*(11.12)))/(100)))+((((v15)*(8)))/(100)))+((((v16)*(20)))/(100)))+((((v17)*(6)))/(100)))+((((v18)*(2.49166666666667)))/(100)))+((((v19)*(6)))/(100)))+((((v20)*(7.3)))/(100)))+((((v21)*(0)))/(100)))+((((v22)*(31.5)))/(100)))+((((v23)*(11.12)))/(100)))+((((v24)*(8)))/(100)))+((((v25)*(20)))/(100)))+((((v26)*(6)))/(100)))+((((v27)*(2.49166666666667)))/(100)))+((((v28)*(6)))/(100)))+((((v29)*(7.3)))/(100)))+((((v30)*(0)))/(100)))+((((v31)*(31.5)))/(100)))+((((v32)*(11.12)))/(100)))+((((v33)*(8)))/(100)))+((((v34)*(20)))/(100)))+((((v35)*(6)))/(100)))+((((v36)*(2.49166666666667)))/(100)))+((((v37)*(0)))/(100)))+((((v38)*(0)))/(100)))+((((v39)*(0)))/(100)))+((((v40)*(0)))/(100)))+((((v41)*(0)))/(100)))+((((v42)*(0)))/(100)))+((((v43)*(0)))/(100)))+((((v44)*(0)))/(100)))+((((v45)*(0)))/(100)))+((((v46)*(0)))/(100)))+((((v47)*(0)))/(100)))+((((v48)*(0)))/(100)))+((((v49)*(0)))/(100)))+((((v50)*(0)))/(100)))+((((v51)*(0)))/(100)))+((((v52)*(0)))/(100)))+((((v53)*(0)))/(100)))+((((v54)*(0)))/(100)))+((((v55)*(0)))/(100)))+((((v56)*(0)))/(100)))+((((v57)*(0)))/(100)))+((((v58)*(0)))/(100)))+((((v59)*(0)))/(100)))+((((v60)*(0)))/(100)))+((((v61)*(0)))/(100)))+((((v62)*(0)))/(100)))+((((v63)*(0)))/(100)))+((((v64)*(0)))/(100)))+((((v65)*(0)))/(100)))+((((v66)*(0)))/(100)))+((((v67)*(0)))/(100)))+((((v68)*(0)))/(100)))+((((v69)*(0)))/(100)))+((((v70)*(0)))/(100)))+((((v71)*(0)))/(100)))+((((v72)*(0)))/(100)))+((((v73)*(0)))/(100)))+((((v74)*(0)))/(100)))+((((v75)*(6)))/(100)))+((((v76)*(7.3)))/(100)))+((((v77)*(0)))/(100)))+((((v78)*(31.5)))/(100)))+((((v79)*(11.12)))/(100)))+((((v80)*(8)))/(100)))+((((v81)*(20)))/(100)))+((((v82)*(6)))/(100)))+((((v83)*(2.49166666666667)))/(100)))+((((v84)*(0)))/(100)))+((((v85)*(0)))/(100)))+((((v86)*(0)))/(100)))+((((v87)*(0)))/(100)))+((((v88)*(0)))/(100)))+((((v89)*(0)))/(100)))+((((v90)*(0)))/(100)))+((((v91)*(0)))/(100)))+((((v92)*(0)))/(100)))+((((v93)*(0)))/(100)))+((((v94)*(0)))/(100)))+((((v95)*(0)))/(100)))+((((v96)*(0)))/(100)))+((((v97)*(0)))/(100)))+((((v98)*(0)))/(100)))+((((v99)*(6)))/(100)))+((((v100)*(7.3)))/(100)))+((((v101)*(0)))/(100)))+((((v102)*(31.5)))/(100)))+((((v103)*(11.12)))/(100)))+((((v104)*(8)))/(100)))+((((v105)*(20)))/(100)))+((((v106)*(6)))/(100)))+((((v107)*(2.49166666666667)))/(100)))+((((v108)*(11.12)))/(100)))+((((v109)*(8)))/(100)))+((((v110)*(20)))/(100)))+((((v111)*(6)))/(100)))+((((v112)*(2.49166666666667)))/(100)))+((((v113)*(2.49166666666667)))/(100)))+((((v114)*(11.12)))/(100)))+((((v115)*(11.12)))/(100))))/(100))))))/(100))))))*(1))
 
 APM model error: string > 15000  characters
 Consider breaking up the line into multiple equations
 
 The may also be due to only using newline character CR
   instead of CR LF (for Windows) or LF (for MacOS/Linux) 
 To fix this problem, save APM file with appropriate newline characters
 
 STOPPING...
 


2018-12-06 14:46:49,343 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 674.6065813428943), (1, 1, 1)]
2018-12-06 14:46:49,343 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.705273036769767, 'sio2': 91.61569640719253, 'cost': 0.6790305560377079}
2018-12-06 14:46:56,852 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5714713, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.01, 1.01, 0.0, 0.0, 0.0, 0.0, 0.0, 12.5228, 8.434098, 0.0, 0.0, 0.0, 6.396422, 0.0, 0.0, 0.0, 0.0, 15.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.058813, 0.0, 2.504559, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 16.89029, 30.0, 0.6015498, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
2018-12-06 14:46:56,852 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['高宝印粉-13_1=[0.0]', '朝鲜粉-13_1=[0.0]', '伊朗粉-13_1=[0.0]', '海南铁粉-13_1=[0.0]', '高返-13_1=[0.0]', '铁泥-13_1=[0.0]', '过筛镍矿-13_1=[0.0]', '塞阿里昂粉-13_1=[0.0]', '巴西粗粉-13_1=[0.0]', '重力除尘灰-13_1=[0.0]', '水洗铁-13_1=[0.0]', '巴西粗粉-13_3=[0.0]', '还原铁粉-13_3=[0.0]', '高返-13_3=[0.0]', '过筛镍矿-13_3=[0.0]', '塞拉利昂粉-13_3=[0.0]', '巴西卡粉-13_3=[0.0]', '水洗铁-13_3=[0.0]', '马来西亚粉（高硅）-13_3=[0.0]', '印尼粉-13_3=[0.0]', '塞尔维亚粉-13_3=[0.0]', '重力除尘灰-13_3=[0.5714713]', '马来西亚粉（低硅）-13_3=[0.0]', 'PB粉-13_3=[0.0]', '高品澳粉-13_4=[0.0]', '巴西精粉-13_4=[0.0]', '高返-13_4=[0.0]', '过筛镍矿-13_4=[0.0]', '塞拉利昂（破碎）-13_4=[0.0]', '还原铁粉-13_4=[0.0]', '赛尔维亚粉-13_4=[0.0]', '印尼粉-13_4=[0.0]', '水洗铁-13_4=[0.0]', '马来西亚-13_4=[0.0]', '重力除尘灰-13_4=[0.0]', '高品澳粉-13_5=[0.0]', '赛尔维亚粉-13_5=[0.0]', '高返-13_5=[0.0]', '过筛镍矿-13_5=[0.0]', '过筛塞拉利昂粉-13_5=[0.0]', '印尼粉-13_5=[0.0]', '委内瑞拉粉-13_5=[0.01]', '朝鲜铁粉-13_5=[1.01]', '还原铁粉-13_5=[0.0]', '水洗铁-13_5=[0.0]', '重力除尘灰-13_5=[0.0]', '高品澳粉-13_12=[0.0]', '赛尔维亚粉-13_12=[0.0]', '高返-13_12=[12.5228]', '过筛镍矿-13_12=[8.434098]', '过筛塞拉利昂粉-13_12=[0.0]', '印尼粉-13_12=[0.0]', '委内瑞拉粉-13_12=[0.0]', '朝鲜铁粉-13_12=[6.396422]', '还原铁粉-13_12=[0.0]', '水洗铁-13_12=[0.0]', '重力除尘灰-13_12=[0.0]', '巴西粗粉-14-1=[0.0]', '高品澳粉-14-1=[15.0]', '高返-14-1=[0.0]', '过筛镍矿-14-1=[0.0]', '塞拉利昂粉-14-1=[0.0]', 'FMG低品澳粉-14-1=[0.0]', '氧化铁-14-1=[0.0]', '铁泥-14-1=[0.0]', '干渣粉-14-1=[0.0]', '重力除尘灰-14-1=[0.0]', '巴西粗粉-14-3=[0.0]', '高品澳粉-14-3=[0.0]', '高返-14-3=[0.0]', '过筛镍矿-14-3=[0.0]', '塞拉利昂粉-14-3=[0.0]', 'FMG低品澳粉-14-3=[0.0]', '氧化铁-14-3=[6.058813]', '铁泥-14-3=[0.0]', '干渣粉-14-3=[2.504559]', '重力除尘灰-14-3=[0.0]', '巴西粗粉-14-4=[0.0]', '高品澳粉-14-4=[0.0]', '高返-14-4=[0.0]', '过筛镍矿-14-4=[0.0]', '塞拉利昂粉-14-4=[0.0]', 'FMG低品澳粉-14-4=[0.0]', '氧化铁-14-4=[0.0]', '铁泥-14-4=[0.0]', '干渣粉-14-4=[0.0]', '重力除尘灰-14-4=[0.0]', '巴西粗粉-14-4=[0.0]', '高品澳粉-14-12=[0.0]', '高返-14-12=[0.0]', '过筛镍矿-14-12=[0.0]', '塞拉利昂粉-14-12=[16.89029]', 'FMG低品澳粉-14-12=[30.0]', '铁泥-14-12=[0.6015498]', '干渣粉-14-12=[0.0]', '重力除尘灰-14-12=[0.0]', '高宝印粉-13_1=[0.0]', '朝鲜粉-13_1=[0.0]', '伊朗粉-13_1=[0.0]', '海南铁粉-13_1=[0.0]', '高返-13_1=[0.0]', '铁泥-13_1=[0.0]', '过筛镍矿-13_1=[0.0]', '塞阿里昂粉-13_1=[0.0]', '巴西粗粉-13_1=[0.0]', '重力除尘灰-13_1=[0.0]', '水洗铁-13_1=[0.0]', '过筛镍矿-13_1=[0.0]', '塞阿里昂粉-13_1=[0.0]', '巴西粗粉-13_1=[0.0]', '重力除尘灰-13_1=[0.0]', '水洗铁-13_1=[0.0]', '水洗铁-13_1=[0.0]', '过筛镍矿-13_1=[0.0]']
2018-12-06 14:46:56,862 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934]
2018-12-06 14:46:56,862 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=347.0065483299038, wet_price=348.27023387083494, obj_price=348.342379582306)
2018-12-06 14:48:25,773 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 674.6065813428943), (1, 1, 1)]
2018-12-06 14:48:25,773 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.705273036769767, 'sio2': 91.61569640719253, 'cost': 0.6790305560377079}
2018-12-06 14:48:33,300 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5714713, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.01, 1.01, 0.0, 0.0, 0.0, 0.0, 0.0, 12.5228, 8.434098, 0.0, 0.0, 0.0, 6.396422, 0.0, 0.0, 0.0, 0.0, 15.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.058813, 0.0, 2.504559, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 16.89029, 30.0, 0.6015498, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
2018-12-06 14:48:33,300 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['高宝印粉-13_1=[0.0]', '朝鲜粉-13_1=[0.0]', '伊朗粉-13_1=[0.0]', '海南铁粉-13_1=[0.0]', '高返-13_1=[0.0]', '铁泥-13_1=[0.0]', '过筛镍矿-13_1=[0.0]', '塞阿里昂粉-13_1=[0.0]', '巴西粗粉-13_1=[0.0]', '重力除尘灰-13_1=[0.0]', '水洗铁-13_1=[0.0]', '巴西粗粉-13_3=[0.0]', '还原铁粉-13_3=[0.0]', '高返-13_3=[0.0]', '过筛镍矿-13_3=[0.0]', '塞拉利昂粉-13_3=[0.0]', '巴西卡粉-13_3=[0.0]', '水洗铁-13_3=[0.0]', '马来西亚粉（高硅）-13_3=[0.0]', '印尼粉-13_3=[0.0]', '塞尔维亚粉-13_3=[0.0]', '重力除尘灰-13_3=[0.5714713]', '马来西亚粉（低硅）-13_3=[0.0]', 'PB粉-13_3=[0.0]', '高品澳粉-13_4=[0.0]', '巴西精粉-13_4=[0.0]', '高返-13_4=[0.0]', '过筛镍矿-13_4=[0.0]', '塞拉利昂（破碎）-13_4=[0.0]', '还原铁粉-13_4=[0.0]', '赛尔维亚粉-13_4=[0.0]', '印尼粉-13_4=[0.0]', '水洗铁-13_4=[0.0]', '马来西亚-13_4=[0.0]', '重力除尘灰-13_4=[0.0]', '高品澳粉-13_5=[0.0]', '赛尔维亚粉-13_5=[0.0]', '高返-13_5=[0.0]', '过筛镍矿-13_5=[0.0]', '过筛塞拉利昂粉-13_5=[0.0]', '印尼粉-13_5=[0.0]', '委内瑞拉粉-13_5=[0.01]', '朝鲜铁粉-13_5=[1.01]', '还原铁粉-13_5=[0.0]', '水洗铁-13_5=[0.0]', '重力除尘灰-13_5=[0.0]', '高品澳粉-13_12=[0.0]', '赛尔维亚粉-13_12=[0.0]', '高返-13_12=[12.5228]', '过筛镍矿-13_12=[8.434098]', '过筛塞拉利昂粉-13_12=[0.0]', '印尼粉-13_12=[0.0]', '委内瑞拉粉-13_12=[0.0]', '朝鲜铁粉-13_12=[6.396422]', '还原铁粉-13_12=[0.0]', '水洗铁-13_12=[0.0]', '重力除尘灰-13_12=[0.0]', '巴西粗粉-14-1=[0.0]', '高品澳粉-14-1=[15.0]', '高返-14-1=[0.0]', '过筛镍矿-14-1=[0.0]', '塞拉利昂粉-14-1=[0.0]', 'FMG低品澳粉-14-1=[0.0]', '氧化铁-14-1=[0.0]', '铁泥-14-1=[0.0]', '干渣粉-14-1=[0.0]', '重力除尘灰-14-1=[0.0]', '巴西粗粉-14-3=[0.0]', '高品澳粉-14-3=[0.0]', '高返-14-3=[0.0]', '过筛镍矿-14-3=[0.0]', '塞拉利昂粉-14-3=[0.0]', 'FMG低品澳粉-14-3=[0.0]', '氧化铁-14-3=[6.058813]', '铁泥-14-3=[0.0]', '干渣粉-14-3=[2.504559]', '重力除尘灰-14-3=[0.0]', '巴西粗粉-14-4=[0.0]', '高品澳粉-14-4=[0.0]', '高返-14-4=[0.0]', '过筛镍矿-14-4=[0.0]', '塞拉利昂粉-14-4=[0.0]', 'FMG低品澳粉-14-4=[0.0]', '氧化铁-14-4=[0.0]', '铁泥-14-4=[0.0]', '干渣粉-14-4=[0.0]', '重力除尘灰-14-4=[0.0]', '巴西粗粉-14-4=[0.0]', '高品澳粉-14-12=[0.0]', '高返-14-12=[0.0]', '过筛镍矿-14-12=[0.0]', '塞拉利昂粉-14-12=[16.89029]', 'FMG低品澳粉-14-12=[30.0]', '铁泥-14-12=[0.6015498]', '干渣粉-14-12=[0.0]', '重力除尘灰-14-12=[0.0]', '高宝印粉-13_1=[0.0]', '朝鲜粉-13_1=[0.0]', '伊朗粉-13_1=[0.0]', '海南铁粉-13_1=[0.0]', '高返-13_1=[0.0]', '铁泥-13_1=[0.0]', '过筛镍矿-13_1=[0.0]', '塞阿里昂粉-13_1=[0.0]', '巴西粗粉-13_1=[0.0]', '重力除尘灰-13_1=[0.0]', '水洗铁-13_1=[0.0]', '过筛镍矿-13_1=[0.0]', '塞阿里昂粉-13_1=[0.0]', '巴西粗粉-13_1=[0.0]', '重力除尘灰-13_1=[0.0]', '水洗铁-13_1=[0.0]', '水洗铁-13_1=[0.0]', '过筛镍矿-13_1=[0.0]']
2018-12-06 14:48:33,310 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934]
2018-12-06 14:48:33,310 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=347.0065483299038, wet_price=348.27023387083494, obj_price=348.342379582306)
2018-12-06 14:48:33,465 __main__ mainTask ERROR = Traceback (most recent call last):
  File "C:/Users/sun/PycharmProjects/optimizationproblem/gekkoSolution/mainTask.py", line 42, in <module>
    lp.write_to_excel()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\gekkoSolution\gekkoProblem.py", line 91, in write_to_excel
    self.data.write_to_excel(excel_file, prices)
  File "C:\Users\sun\PycharmProjects\optimizationproblem\utils\excelParse.py", line 136, in write_to_excel
    writer.save()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\pandas\io\excel.py", line 1732, in save
    return self.book.close()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\xlsxwriter\workbook.py", line 306, in close
    self._store_workbook()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\xlsxwriter\workbook.py", line 655, in _store_workbook
    allowZip64=self.allow_zip64)
  File "C:\Users\sun\AppData\Local\Programs\Python\Python37-32\lib\zipfile.py", line 1182, in __init__
    self.fp = io.open(file, filemode)
PermissionError: [Errno 13] Permission denied: '../data/result.xlsx'

2018-12-06 14:49:45,547 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 674.6065813428943), (1, 1, 1)]
2018-12-06 14:49:45,547 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.705273036769767, 'sio2': 91.61569640719253, 'cost': 0.6790305560377079}
2018-12-06 14:50:14,849 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5714713, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.01, 1.01, 0.0, 0.0, 0.0, 0.0, 0.0, 12.5228, 8.434098, 0.0, 0.0, 0.0, 6.396422, 0.0, 0.0, 0.0, 0.0, 15.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.058813, 0.0, 2.504559, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 16.89029, 30.0, 0.6015498, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
2018-12-06 14:50:14,849 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['高宝印粉-13_1=[0.0]', '朝鲜粉-13_1=[0.0]', '伊朗粉-13_1=[0.0]', '海南铁粉-13_1=[0.0]', '高返-13_1=[0.0]', '铁泥-13_1=[0.0]', '过筛镍矿-13_1=[0.0]', '塞阿里昂粉-13_1=[0.0]', '巴西粗粉-13_1=[0.0]', '重力除尘灰-13_1=[0.0]', '水洗铁-13_1=[0.0]', '巴西粗粉-13_3=[0.0]', '还原铁粉-13_3=[0.0]', '高返-13_3=[0.0]', '过筛镍矿-13_3=[0.0]', '塞拉利昂粉-13_3=[0.0]', '巴西卡粉-13_3=[0.0]', '水洗铁-13_3=[0.0]', '马来西亚粉（高硅）-13_3=[0.0]', '印尼粉-13_3=[0.0]', '塞尔维亚粉-13_3=[0.0]', '重力除尘灰-13_3=[0.5714713]', '马来西亚粉（低硅）-13_3=[0.0]', 'PB粉-13_3=[0.0]', '高品澳粉-13_4=[0.0]', '巴西精粉-13_4=[0.0]', '高返-13_4=[0.0]', '过筛镍矿-13_4=[0.0]', '塞拉利昂（破碎）-13_4=[0.0]', '还原铁粉-13_4=[0.0]', '赛尔维亚粉-13_4=[0.0]', '印尼粉-13_4=[0.0]', '水洗铁-13_4=[0.0]', '马来西亚-13_4=[0.0]', '重力除尘灰-13_4=[0.0]', '高品澳粉-13_5=[0.0]', '赛尔维亚粉-13_5=[0.0]', '高返-13_5=[0.0]', '过筛镍矿-13_5=[0.0]', '过筛塞拉利昂粉-13_5=[0.0]', '印尼粉-13_5=[0.0]', '委内瑞拉粉-13_5=[0.01]', '朝鲜铁粉-13_5=[1.01]', '还原铁粉-13_5=[0.0]', '水洗铁-13_5=[0.0]', '重力除尘灰-13_5=[0.0]', '高品澳粉-13_12=[0.0]', '赛尔维亚粉-13_12=[0.0]', '高返-13_12=[12.5228]', '过筛镍矿-13_12=[8.434098]', '过筛塞拉利昂粉-13_12=[0.0]', '印尼粉-13_12=[0.0]', '委内瑞拉粉-13_12=[0.0]', '朝鲜铁粉-13_12=[6.396422]', '还原铁粉-13_12=[0.0]', '水洗铁-13_12=[0.0]', '重力除尘灰-13_12=[0.0]', '巴西粗粉-14-1=[0.0]', '高品澳粉-14-1=[15.0]', '高返-14-1=[0.0]', '过筛镍矿-14-1=[0.0]', '塞拉利昂粉-14-1=[0.0]', 'FMG低品澳粉-14-1=[0.0]', '氧化铁-14-1=[0.0]', '铁泥-14-1=[0.0]', '干渣粉-14-1=[0.0]', '重力除尘灰-14-1=[0.0]', '巴西粗粉-14-3=[0.0]', '高品澳粉-14-3=[0.0]', '高返-14-3=[0.0]', '过筛镍矿-14-3=[0.0]', '塞拉利昂粉-14-3=[0.0]', 'FMG低品澳粉-14-3=[0.0]', '氧化铁-14-3=[6.058813]', '铁泥-14-3=[0.0]', '干渣粉-14-3=[2.504559]', '重力除尘灰-14-3=[0.0]', '巴西粗粉-14-4=[0.0]', '高品澳粉-14-4=[0.0]', '高返-14-4=[0.0]', '过筛镍矿-14-4=[0.0]', '塞拉利昂粉-14-4=[0.0]', 'FMG低品澳粉-14-4=[0.0]', '氧化铁-14-4=[0.0]', '铁泥-14-4=[0.0]', '干渣粉-14-4=[0.0]', '重力除尘灰-14-4=[0.0]', '巴西粗粉-14-4=[0.0]', '高品澳粉-14-12=[0.0]', '高返-14-12=[0.0]', '过筛镍矿-14-12=[0.0]', '塞拉利昂粉-14-12=[16.89029]', 'FMG低品澳粉-14-12=[30.0]', '铁泥-14-12=[0.6015498]', '干渣粉-14-12=[0.0]', '重力除尘灰-14-12=[0.0]', '高宝印粉-13_1=[0.0]', '朝鲜粉-13_1=[0.0]', '伊朗粉-13_1=[0.0]', '海南铁粉-13_1=[0.0]', '高返-13_1=[0.0]', '铁泥-13_1=[0.0]', '过筛镍矿-13_1=[0.0]', '塞阿里昂粉-13_1=[0.0]', '巴西粗粉-13_1=[0.0]', '重力除尘灰-13_1=[0.0]', '水洗铁-13_1=[0.0]', '过筛镍矿-13_1=[0.0]', '塞阿里昂粉-13_1=[0.0]', '巴西粗粉-13_1=[0.0]', '重力除尘灰-13_1=[0.0]', '水洗铁-13_1=[0.0]', '水洗铁-13_1=[0.0]', '过筛镍矿-13_1=[0.0]']
2018-12-06 14:50:14,880 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934]
2018-12-06 14:50:14,880 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=347.0065483299038, wet_price=348.27023387083494, obj_price=348.342379582306)
2018-12-06 15:02:47,325 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 674.6065813428943), (1, 1, 1)]
2018-12-06 15:02:47,325 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.705273036769767, 'sio2': 91.61569640719253, 'cost': 0.6790305560377079}
2018-12-06 15:03:15,057 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5714713, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.01, 1.01, 0.0, 0.0, 0.0, 0.0, 0.0, 12.5228, 8.434098, 0.0, 0.0, 0.0, 6.396422, 0.0, 0.0, 0.0, 0.0, 15.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.058813, 0.0, 2.504559, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 16.89029, 30.0, 0.6015498, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
2018-12-06 15:03:15,057 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['高宝印粉-13_1=[0.0]', '朝鲜粉-13_1=[0.0]', '伊朗粉-13_1=[0.0]', '海南铁粉-13_1=[0.0]', '高返-13_1=[0.0]', '铁泥-13_1=[0.0]', '过筛镍矿-13_1=[0.0]', '塞阿里昂粉-13_1=[0.0]', '巴西粗粉-13_1=[0.0]', '重力除尘灰-13_1=[0.0]', '水洗铁-13_1=[0.0]', '巴西粗粉-13_3=[0.0]', '还原铁粉-13_3=[0.0]', '高返-13_3=[0.0]', '过筛镍矿-13_3=[0.0]', '塞拉利昂粉-13_3=[0.0]', '巴西卡粉-13_3=[0.0]', '水洗铁-13_3=[0.0]', '马来西亚粉（高硅）-13_3=[0.0]', '印尼粉-13_3=[0.0]', '塞尔维亚粉-13_3=[0.0]', '重力除尘灰-13_3=[0.5714713]', '马来西亚粉（低硅）-13_3=[0.0]', 'PB粉-13_3=[0.0]', '高品澳粉-13_4=[0.0]', '巴西精粉-13_4=[0.0]', '高返-13_4=[0.0]', '过筛镍矿-13_4=[0.0]', '塞拉利昂（破碎）-13_4=[0.0]', '还原铁粉-13_4=[0.0]', '赛尔维亚粉-13_4=[0.0]', '印尼粉-13_4=[0.0]', '水洗铁-13_4=[0.0]', '马来西亚-13_4=[0.0]', '重力除尘灰-13_4=[0.0]', '高品澳粉-13_5=[0.0]', '赛尔维亚粉-13_5=[0.0]', '高返-13_5=[0.0]', '过筛镍矿-13_5=[0.0]', '过筛塞拉利昂粉-13_5=[0.0]', '印尼粉-13_5=[0.0]', '委内瑞拉粉-13_5=[0.01]', '朝鲜铁粉-13_5=[1.01]', '还原铁粉-13_5=[0.0]', '水洗铁-13_5=[0.0]', '重力除尘灰-13_5=[0.0]', '高品澳粉-13_12=[0.0]', '赛尔维亚粉-13_12=[0.0]', '高返-13_12=[12.5228]', '过筛镍矿-13_12=[8.434098]', '过筛塞拉利昂粉-13_12=[0.0]', '印尼粉-13_12=[0.0]', '委内瑞拉粉-13_12=[0.0]', '朝鲜铁粉-13_12=[6.396422]', '还原铁粉-13_12=[0.0]', '水洗铁-13_12=[0.0]', '重力除尘灰-13_12=[0.0]', '巴西粗粉-14-1=[0.0]', '高品澳粉-14-1=[15.0]', '高返-14-1=[0.0]', '过筛镍矿-14-1=[0.0]', '塞拉利昂粉-14-1=[0.0]', 'FMG低品澳粉-14-1=[0.0]', '氧化铁-14-1=[0.0]', '铁泥-14-1=[0.0]', '干渣粉-14-1=[0.0]', '重力除尘灰-14-1=[0.0]', '巴西粗粉-14-3=[0.0]', '高品澳粉-14-3=[0.0]', '高返-14-3=[0.0]', '过筛镍矿-14-3=[0.0]', '塞拉利昂粉-14-3=[0.0]', 'FMG低品澳粉-14-3=[0.0]', '氧化铁-14-3=[6.058813]', '铁泥-14-3=[0.0]', '干渣粉-14-3=[2.504559]', '重力除尘灰-14-3=[0.0]', '巴西粗粉-14-4=[0.0]', '高品澳粉-14-4=[0.0]', '高返-14-4=[0.0]', '过筛镍矿-14-4=[0.0]', '塞拉利昂粉-14-4=[0.0]', 'FMG低品澳粉-14-4=[0.0]', '氧化铁-14-4=[0.0]', '铁泥-14-4=[0.0]', '干渣粉-14-4=[0.0]', '重力除尘灰-14-4=[0.0]', '巴西粗粉-14-4=[0.0]', '高品澳粉-14-12=[0.0]', '高返-14-12=[0.0]', '过筛镍矿-14-12=[0.0]', '塞拉利昂粉-14-12=[16.89029]', 'FMG低品澳粉-14-12=[30.0]', '铁泥-14-12=[0.6015498]', '干渣粉-14-12=[0.0]', '重力除尘灰-14-12=[0.0]', '高宝印粉-13_1=[0.0]', '朝鲜粉-13_1=[0.0]', '伊朗粉-13_1=[0.0]', '海南铁粉-13_1=[0.0]', '高返-13_1=[0.0]', '铁泥-13_1=[0.0]', '过筛镍矿-13_1=[0.0]', '塞阿里昂粉-13_1=[0.0]', '巴西粗粉-13_1=[0.0]', '重力除尘灰-13_1=[0.0]', '水洗铁-13_1=[0.0]', '过筛镍矿-13_1=[0.0]', '塞阿里昂粉-13_1=[0.0]', '巴西粗粉-13_1=[0.0]', '重力除尘灰-13_1=[0.0]', '水洗铁-13_1=[0.0]', '水洗铁-13_1=[0.0]', '过筛镍矿-13_1=[0.0]']
2018-12-06 15:03:15,088 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934]
2018-12-06 15:03:15,088 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=347.0065483299038, wet_price=348.27023387083494, obj_price=348.342379582306)
2018-12-06 15:05:03,520 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 674.6065813428943), (1, 1, 1)]
2018-12-06 15:05:03,520 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.705273036769767, 'sio2': 91.61569640719253, 'cost': 0.6790305560377079}
2018-12-06 15:05:31,382 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5714713, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.01, 1.01, 0.0, 0.0, 0.0, 0.0, 0.0, 12.5228, 8.434098, 0.0, 0.0, 0.0, 6.396422, 0.0, 0.0, 0.0, 0.0, 15.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.058813, 0.0, 2.504559, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 16.89029, 30.0, 0.6015498, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
2018-12-06 15:05:31,382 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['高宝印粉-13_1=[0.0]', '朝鲜粉-13_1=[0.0]', '伊朗粉-13_1=[0.0]', '海南铁粉-13_1=[0.0]', '高返-13_1=[0.0]', '铁泥-13_1=[0.0]', '过筛镍矿-13_1=[0.0]', '塞阿里昂粉-13_1=[0.0]', '巴西粗粉-13_1=[0.0]', '重力除尘灰-13_1=[0.0]', '水洗铁-13_1=[0.0]', '巴西粗粉-13_3=[0.0]', '还原铁粉-13_3=[0.0]', '高返-13_3=[0.0]', '过筛镍矿-13_3=[0.0]', '塞拉利昂粉-13_3=[0.0]', '巴西卡粉-13_3=[0.0]', '水洗铁-13_3=[0.0]', '马来西亚粉（高硅）-13_3=[0.0]', '印尼粉-13_3=[0.0]', '塞尔维亚粉-13_3=[0.0]', '重力除尘灰-13_3=[0.5714713]', '马来西亚粉（低硅）-13_3=[0.0]', 'PB粉-13_3=[0.0]', '高品澳粉-13_4=[0.0]', '巴西精粉-13_4=[0.0]', '高返-13_4=[0.0]', '过筛镍矿-13_4=[0.0]', '塞拉利昂（破碎）-13_4=[0.0]', '还原铁粉-13_4=[0.0]', '赛尔维亚粉-13_4=[0.0]', '印尼粉-13_4=[0.0]', '水洗铁-13_4=[0.0]', '马来西亚-13_4=[0.0]', '重力除尘灰-13_4=[0.0]', '高品澳粉-13_5=[0.0]', '赛尔维亚粉-13_5=[0.0]', '高返-13_5=[0.0]', '过筛镍矿-13_5=[0.0]', '过筛塞拉利昂粉-13_5=[0.0]', '印尼粉-13_5=[0.0]', '委内瑞拉粉-13_5=[0.01]', '朝鲜铁粉-13_5=[1.01]', '还原铁粉-13_5=[0.0]', '水洗铁-13_5=[0.0]', '重力除尘灰-13_5=[0.0]', '高品澳粉-13_12=[0.0]', '赛尔维亚粉-13_12=[0.0]', '高返-13_12=[12.5228]', '过筛镍矿-13_12=[8.434098]', '过筛塞拉利昂粉-13_12=[0.0]', '印尼粉-13_12=[0.0]', '委内瑞拉粉-13_12=[0.0]', '朝鲜铁粉-13_12=[6.396422]', '还原铁粉-13_12=[0.0]', '水洗铁-13_12=[0.0]', '重力除尘灰-13_12=[0.0]', '巴西粗粉-14-1=[0.0]', '高品澳粉-14-1=[15.0]', '高返-14-1=[0.0]', '过筛镍矿-14-1=[0.0]', '塞拉利昂粉-14-1=[0.0]', 'FMG低品澳粉-14-1=[0.0]', '氧化铁-14-1=[0.0]', '铁泥-14-1=[0.0]', '干渣粉-14-1=[0.0]', '重力除尘灰-14-1=[0.0]', '巴西粗粉-14-3=[0.0]', '高品澳粉-14-3=[0.0]', '高返-14-3=[0.0]', '过筛镍矿-14-3=[0.0]', '塞拉利昂粉-14-3=[0.0]', 'FMG低品澳粉-14-3=[0.0]', '氧化铁-14-3=[6.058813]', '铁泥-14-3=[0.0]', '干渣粉-14-3=[2.504559]', '重力除尘灰-14-3=[0.0]', '巴西粗粉-14-4=[0.0]', '高品澳粉-14-4=[0.0]', '高返-14-4=[0.0]', '过筛镍矿-14-4=[0.0]', '塞拉利昂粉-14-4=[0.0]', 'FMG低品澳粉-14-4=[0.0]', '氧化铁-14-4=[0.0]', '铁泥-14-4=[0.0]', '干渣粉-14-4=[0.0]', '重力除尘灰-14-4=[0.0]', '巴西粗粉-14-4=[0.0]', '高品澳粉-14-12=[0.0]', '高返-14-12=[0.0]', '过筛镍矿-14-12=[0.0]', '塞拉利昂粉-14-12=[16.89029]', 'FMG低品澳粉-14-12=[30.0]', '铁泥-14-12=[0.6015498]', '干渣粉-14-12=[0.0]', '重力除尘灰-14-12=[0.0]', '高宝印粉-13_1=[0.0]', '朝鲜粉-13_1=[0.0]', '伊朗粉-13_1=[0.0]', '海南铁粉-13_1=[0.0]', '高返-13_1=[0.0]', '铁泥-13_1=[0.0]', '过筛镍矿-13_1=[0.0]', '塞阿里昂粉-13_1=[0.0]', '巴西粗粉-13_1=[0.0]', '重力除尘灰-13_1=[0.0]', '水洗铁-13_1=[0.0]', '过筛镍矿-13_1=[0.0]', '塞阿里昂粉-13_1=[0.0]', '巴西粗粉-13_1=[0.0]', '重力除尘灰-13_1=[0.0]', '水洗铁-13_1=[0.0]', '水洗铁-13_1=[0.0]', '过筛镍矿-13_1=[0.0]']
2018-12-06 15:05:31,417 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934]
2018-12-06 15:05:31,417 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=347.0065483299038, wet_price=348.27023387083494, obj_price=348.342379582306)
2018-12-06 15:05:31,768 __main__ mainTask INFO = gekko_optimization task run successfully, runtime  is 28.69600009918213 s:
2018-12-06 15:06:15,596 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 674.6065813428943), (1, 1, 1)]
2018-12-06 15:06:15,596 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.705273036769767, 'sio2': 91.61569640719253, 'cost': 0.6790305560377079}
2018-12-06 15:06:43,307 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5714713, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.01, 1.01, 0.0, 0.0, 0.0, 0.0, 0.0, 12.5228, 8.434098, 0.0, 0.0, 0.0, 6.396422, 0.0, 0.0, 0.0, 0.0, 15.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.058813, 0.0, 2.504559, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 16.89029, 30.0, 0.6015498, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
2018-12-06 15:06:43,307 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['高宝印粉-13_1=[0.0]', '朝鲜粉-13_1=[0.0]', '伊朗粉-13_1=[0.0]', '海南铁粉-13_1=[0.0]', '高返-13_1=[0.0]', '铁泥-13_1=[0.0]', '过筛镍矿-13_1=[0.0]', '塞阿里昂粉-13_1=[0.0]', '巴西粗粉-13_1=[0.0]', '重力除尘灰-13_1=[0.0]', '水洗铁-13_1=[0.0]', '巴西粗粉-13_3=[0.0]', '还原铁粉-13_3=[0.0]', '高返-13_3=[0.0]', '过筛镍矿-13_3=[0.0]', '塞拉利昂粉-13_3=[0.0]', '巴西卡粉-13_3=[0.0]', '水洗铁-13_3=[0.0]', '马来西亚粉（高硅）-13_3=[0.0]', '印尼粉-13_3=[0.0]', '塞尔维亚粉-13_3=[0.0]', '重力除尘灰-13_3=[0.5714713]', '马来西亚粉（低硅）-13_3=[0.0]', 'PB粉-13_3=[0.0]', '高品澳粉-13_4=[0.0]', '巴西精粉-13_4=[0.0]', '高返-13_4=[0.0]', '过筛镍矿-13_4=[0.0]', '塞拉利昂（破碎）-13_4=[0.0]', '还原铁粉-13_4=[0.0]', '赛尔维亚粉-13_4=[0.0]', '印尼粉-13_4=[0.0]', '水洗铁-13_4=[0.0]', '马来西亚-13_4=[0.0]', '重力除尘灰-13_4=[0.0]', '高品澳粉-13_5=[0.0]', '赛尔维亚粉-13_5=[0.0]', '高返-13_5=[0.0]', '过筛镍矿-13_5=[0.0]', '过筛塞拉利昂粉-13_5=[0.0]', '印尼粉-13_5=[0.0]', '委内瑞拉粉-13_5=[0.01]', '朝鲜铁粉-13_5=[1.01]', '还原铁粉-13_5=[0.0]', '水洗铁-13_5=[0.0]', '重力除尘灰-13_5=[0.0]', '高品澳粉-13_12=[0.0]', '赛尔维亚粉-13_12=[0.0]', '高返-13_12=[12.5228]', '过筛镍矿-13_12=[8.434098]', '过筛塞拉利昂粉-13_12=[0.0]', '印尼粉-13_12=[0.0]', '委内瑞拉粉-13_12=[0.0]', '朝鲜铁粉-13_12=[6.396422]', '还原铁粉-13_12=[0.0]', '水洗铁-13_12=[0.0]', '重力除尘灰-13_12=[0.0]', '巴西粗粉-14-1=[0.0]', '高品澳粉-14-1=[15.0]', '高返-14-1=[0.0]', '过筛镍矿-14-1=[0.0]', '塞拉利昂粉-14-1=[0.0]', 'FMG低品澳粉-14-1=[0.0]', '氧化铁-14-1=[0.0]', '铁泥-14-1=[0.0]', '干渣粉-14-1=[0.0]', '重力除尘灰-14-1=[0.0]', '巴西粗粉-14-3=[0.0]', '高品澳粉-14-3=[0.0]', '高返-14-3=[0.0]', '过筛镍矿-14-3=[0.0]', '塞拉利昂粉-14-3=[0.0]', 'FMG低品澳粉-14-3=[0.0]', '氧化铁-14-3=[6.058813]', '铁泥-14-3=[0.0]', '干渣粉-14-3=[2.504559]', '重力除尘灰-14-3=[0.0]', '巴西粗粉-14-4=[0.0]', '高品澳粉-14-4=[0.0]', '高返-14-4=[0.0]', '过筛镍矿-14-4=[0.0]', '塞拉利昂粉-14-4=[0.0]', 'FMG低品澳粉-14-4=[0.0]', '氧化铁-14-4=[0.0]', '铁泥-14-4=[0.0]', '干渣粉-14-4=[0.0]', '重力除尘灰-14-4=[0.0]', '巴西粗粉-14-4=[0.0]', '高品澳粉-14-12=[0.0]', '高返-14-12=[0.0]', '过筛镍矿-14-12=[0.0]', '塞拉利昂粉-14-12=[16.89029]', 'FMG低品澳粉-14-12=[30.0]', '铁泥-14-12=[0.6015498]', '干渣粉-14-12=[0.0]', '重力除尘灰-14-12=[0.0]', '高宝印粉-13_1=[0.0]', '朝鲜粉-13_1=[0.0]', '伊朗粉-13_1=[0.0]', '海南铁粉-13_1=[0.0]', '高返-13_1=[0.0]', '铁泥-13_1=[0.0]', '过筛镍矿-13_1=[0.0]', '塞阿里昂粉-13_1=[0.0]', '巴西粗粉-13_1=[0.0]', '重力除尘灰-13_1=[0.0]', '水洗铁-13_1=[0.0]', '过筛镍矿-13_1=[0.0]', '塞阿里昂粉-13_1=[0.0]', '巴西粗粉-13_1=[0.0]', '重力除尘灰-13_1=[0.0]', '水洗铁-13_1=[0.0]', '水洗铁-13_1=[0.0]', '过筛镍矿-13_1=[0.0]']
2018-12-06 15:06:43,338 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 56.07517379859727, 4.500000107218301, 2.3807384410115904, 0.7876034215617346, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934, 3.000000159685429, 0.10430155955293913, 0.06563956019710722, 0.17999999114757934]
2018-12-06 15:06:43,339 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=347.0065483299038, wet_price=348.27023387083494, obj_price=348.342379582306)
2018-12-06 15:06:43,680 __main__ mainTask INFO = gekko_optimization task run successfully, runtime  is 28.491999864578247 s:
NoneType: None
2018-12-06 15:12:56,637 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 462.58579900551536), (1, 1, 1)]
2018-12-06 15:12:56,637 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.681366649542781, 'sio2': 91.33144946306368, 'cost': 0.9871838873935551}
2018-12-06 15:12:56,909 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [8.0, 15.0, 12.5228, 8.410955, 12.38867, 40.0, 0.6015498, 2.504559, 0.5714713]
2018-12-06 15:12:56,909 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['巴西粗粉=[8.0]', '高品澳粉=[15.0]', '高返=[12.5228]', '过筛镍矿=[8.410955]', '塞拉利昂粉=[12.38867]', 'FMG低品澳粉=[40.0]', '铁泥=[0.6015498]', '干渣粉=[2.504559]', '重力除尘灰=[0.5714713]']
2018-12-06 15:12:56,911 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [56.17565633128305, 5.199951920097999, 2.6982416318639566, 0.7128133123365088, 3.000000273920421, 0.048518530915677816, 0.06764917045197939, 0.1319273653048831]
2018-12-06 15:12:56,911 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=447.75303320145434, wet_price=492.506582248679, obj_price=530.7026698741009)
2018-12-06 15:12:56,985 __main__ mainTask INFO = gekko_optimization task run successfully, runtime  is 0.5920000076293945 s:
2018-12-06 15:13:32,443 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 462.58579900551536), (1, 1, 1)]
2018-12-06 15:13:32,443 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.681366649542781, 'sio2': 91.33144946306368, 'cost': 0.9871838873935551}
2018-12-06 15:13:32,694 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [8.0, 15.0, 12.5228, 8.410955, 12.38867, 40.0, 0.6015498, 2.504559, 0.5714713]
2018-12-06 15:13:32,695 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['巴西粗粉=[8.0]', '高品澳粉=[15.0]', '高返=[12.5228]', '过筛镍矿=[8.410955]', '塞拉利昂粉=[12.38867]', 'FMG低品澳粉=[40.0]', '铁泥=[0.6015498]', '干渣粉=[2.504559]', '重力除尘灰=[0.5714713]']
2018-12-06 15:13:32,697 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [56.17565633128305, 5.199951920097999, 2.6982416318639566, 0.7128133123365088, 3.000000273920421, 0.048518530915677816, 0.06764917045197939, 0.1319273653048831]
2018-12-06 15:13:32,697 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=447.75303320145434, wet_price=492.506582248679, obj_price=530.7026698741009)
2018-12-06 15:13:32,767 __main__ mainTask INFO = gekko_optimization task run successfully, runtime  is 0.570000171661377 s:
2018-12-06 15:14:33,385 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 462.58579900551536), (1, 1, 1)]
2018-12-06 15:14:33,385 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.681366649542781, 'sio2': 91.33144946306368, 'cost': 0.9871838873935551}
2018-12-06 15:14:33,648 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [8.0, 15.0, 12.5228, 8.410955, 12.38867, 40.0, 0.6015498, 2.504559, 0.5714713]
2018-12-06 15:14:33,649 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['巴西粗粉=[8.0]', '高品澳粉=[15.0]', '高返=[12.5228]', '过筛镍矿=[8.410955]', '塞拉利昂粉=[12.38867]', 'FMG低品澳粉=[40.0]', '铁泥=[0.6015498]', '干渣粉=[2.504559]', '重力除尘灰=[0.5714713]']
2018-12-06 15:14:33,651 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [56.17565633128305, 5.199951920097999, 2.6982416318639566, 0.7128133123365088, 3.000000273920421, 0.048518530915677816, 0.06764917045197939, 0.1319273653048831]
2018-12-06 15:14:33,651 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=447.75303320145434, wet_price=492.506582248679, obj_price=530.7026698741009)
2018-12-06 15:14:33,740 __main__ mainTask INFO = gekko_optimization task run successfully, runtime  is 0.6059999465942383 s:
2018-12-06 15:33:15,065 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 462.58579900551536), (1, 1, 1)]
2018-12-06 15:33:15,065 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.681366649542781, 'sio2': 91.33144946306368, 'cost': 0.9871838873935551}
2018-12-06 15:33:15,407 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [8.0, 15.0, 12.5228, 8.410955, 12.38867, 40.0, 0.6015498, 2.504559, 0.5714713]
2018-12-06 15:33:15,407 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['巴西粗粉=[8.0]', '高品澳粉=[15.0]', '高返=[12.5228]', '过筛镍矿=[8.410955]', '塞拉利昂粉=[12.38867]', 'FMG低品澳粉=[40.0]', '铁泥=[0.6015498]', '干渣粉=[2.504559]', '重力除尘灰=[0.5714713]']
2018-12-06 15:33:15,410 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [56.17565633128305, 5.199951920097999, 2.6982416318639566, 0.7128133123365088, 3.000000273920421, 0.048518530915677816, 0.06764917045197939, 0.1319273653048831]
2018-12-06 15:33:15,410 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=447.75303320145434, wet_price=492.506582248679, obj_price=530.7026698741009)
2018-12-06 15:33:15,481 __main__ mainTask INFO = gekko_optimization task run successfully, runtime  is 0.6589999198913574 s:
2018-12-06 15:47:02,127 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 462.58579900551536), (1, 1, 1)]
2018-12-06 15:47:02,127 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.681366649542781, 'sio2': 91.33144946306368, 'cost': 0.9871838873935551}
2018-12-06 15:51:25,388 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 462.58579900551536), (1, 1, 1)]
2018-12-06 15:51:25,388 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.681366649542781, 'sio2': 91.33144946306368, 'cost': 0.9871838873935551}
2018-12-06 15:51:25,453 __main__ steamToLogger INFO =  ----------------------------------------------------------------
2018-12-06 15:51:25,454 __main__ steamToLogger INFO =  APMonitor, Version 0.8.5
2018-12-06 15:51:25,454 __main__ steamToLogger INFO =  APMonitor Optimization Suite
2018-12-06 15:51:25,454 __main__ steamToLogger INFO =  ----------------------------------------------------------------
2018-12-06 15:51:25,515 __main__ steamToLogger INFO =  --------- APM Model Size ------------
2018-12-06 15:51:25,515 __main__ steamToLogger INFO =  Each time step contains
2018-12-06 15:51:25,515 __main__ steamToLogger INFO =    Objects      :  0
2018-12-06 15:51:25,515 __main__ steamToLogger INFO =    Constants    :  0
2018-12-06 15:51:25,515 __main__ steamToLogger INFO =    Variables    :  43
2018-12-06 15:51:25,515 __main__ steamToLogger INFO =    Intermediates:  4
2018-12-06 15:51:25,515 __main__ steamToLogger INFO =    Connections  :  0
2018-12-06 15:51:25,516 __main__ steamToLogger INFO =    Equations    :  40
2018-12-06 15:51:25,516 __main__ steamToLogger INFO =    Residuals    :  36
2018-12-06 15:51:25,612 __main__ steamToLogger INFO =  Number of state variables:    43
2018-12-06 15:51:25,612 __main__ steamToLogger INFO =  Number of total equations: -  35
2018-12-06 15:51:25,612 __main__ steamToLogger INFO =  Number of slack variables: -  34
2018-12-06 15:51:25,612 __main__ steamToLogger INFO =  ---------------------------------------
2018-12-06 15:51:25,613 __main__ steamToLogger INFO =  Degrees of freedom       :    -26
2018-12-06 15:51:25,613 __main__ steamToLogger INFO =  * Warning: DOF <= 0
2018-12-06 15:51:25,613 __main__ steamToLogger INFO =  ----------------------------------------------
2018-12-06 15:51:25,613 __main__ steamToLogger INFO =  Steady State Optimization with APOPT Solver
2018-12-06 15:51:25,613 __main__ steamToLogger INFO =  ----------------------------------------------
2018-12-06 15:51:25,647 __main__ steamToLogger INFO =  Iter    Objective  Convergence
2018-12-06 15:51:25,647 __main__ steamToLogger INFO =     0  5.96055E+02  1.00000E+02
2018-12-06 15:51:25,648 __main__ steamToLogger INFO =     1  5.93828E+02  1.00000E-10
2018-12-06 15:51:25,650 __main__ steamToLogger INFO =     2  5.67362E+02  5.00000E-11
2018-12-06 15:51:25,651 __main__ steamToLogger INFO =     3  5.67350E+02  1.00000E-10
2018-12-06 15:51:25,652 __main__ steamToLogger INFO =     4  5.67314E+02  8.88178E-16
2018-12-06 15:51:25,653 __main__ steamToLogger INFO =     5  5.67314E+02  5.55112E-16
2018-12-06 15:51:25,653 __main__ steamToLogger INFO =     6  5.67314E+02  5.55112E-16
2018-12-06 15:51:25,653 __main__ steamToLogger INFO =  Successful solution
2018-12-06 15:51:25,657 __main__ steamToLogger INFO =  ---------------------------------------------------
2018-12-06 15:51:25,657 __main__ steamToLogger INFO =  Solver         :  APOPT (v1.0)
2018-12-06 15:51:25,657 __main__ steamToLogger INFO =  Solution time  :  0.044999999999999984 sec
2018-12-06 15:51:25,657 __main__ steamToLogger INFO =  Objective      :  567.3144324189766
2018-12-06 15:51:25,657 __main__ steamToLogger INFO =  Successful solution
2018-12-06 15:51:25,657 __main__ steamToLogger INFO =  ---------------------------------------------------
2018-12-06 15:51:25,670 __main__ steamToLogger INFO = 巴西粗粉
2018-12-06 15:51:25,670 __main__ steamToLogger INFO = =
2018-12-06 15:51:25,670 __main__ steamToLogger INFO = [8.0]
2018-12-06 15:51:25,670 __main__ steamToLogger INFO = 高品澳粉
2018-12-06 15:51:25,670 __main__ steamToLogger INFO = =
2018-12-06 15:51:25,671 __main__ steamToLogger INFO = [15.0]
2018-12-06 15:51:25,671 __main__ steamToLogger INFO = 高返
2018-12-06 15:51:25,671 __main__ steamToLogger INFO = =
2018-12-06 15:51:25,671 __main__ steamToLogger INFO = [12.5228]
2018-12-06 15:51:25,671 __main__ steamToLogger INFO = 过筛镍矿
2018-12-06 15:51:25,671 __main__ steamToLogger INFO = =
2018-12-06 15:51:25,671 __main__ steamToLogger INFO = [8.410955]
2018-12-06 15:51:25,671 __main__ steamToLogger INFO = 塞拉利昂粉
2018-12-06 15:51:25,672 __main__ steamToLogger INFO = =
2018-12-06 15:51:25,672 __main__ steamToLogger INFO = [12.38867]
2018-12-06 15:51:25,672 __main__ steamToLogger INFO = FMG低品澳粉
2018-12-06 15:51:25,672 __main__ steamToLogger INFO = =
2018-12-06 15:51:25,672 __main__ steamToLogger INFO = [40.0]
2018-12-06 15:51:25,672 __main__ steamToLogger INFO = 铁泥
2018-12-06 15:51:25,672 __main__ steamToLogger INFO = =
2018-12-06 15:51:25,672 __main__ steamToLogger INFO = [0.6015498]
2018-12-06 15:51:25,672 __main__ steamToLogger INFO = 干渣粉
2018-12-06 15:51:25,672 __main__ steamToLogger INFO = =
2018-12-06 15:51:25,673 __main__ steamToLogger INFO = [2.504559]
2018-12-06 15:51:25,673 __main__ steamToLogger INFO = 重力除尘灰
2018-12-06 15:51:25,673 __main__ steamToLogger INFO = =
2018-12-06 15:51:25,673 __main__ steamToLogger INFO = [0.5714713]
2018-12-06 15:51:25,673 __main__ steamToLogger INFO = Prices(dry_price=447.75303320145434, wet_price=492.506582248679, obj_price=530.7026698741009)
2018-12-06 15:51:25,673 __main__ steamToLogger INFO = [56.17565633128305, 5.199951920097999, 2.6982416318639566, 0.7128133123365088, 3.000000273920421, 0.048518530915677816, 0.06764917045197939, 0.1319273653048831]
2018-12-06 15:51:25,674 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [8.0, 15.0, 12.5228, 8.410955, 12.38867, 40.0, 0.6015498, 2.504559, 0.5714713]
2018-12-06 15:51:25,674 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['巴西粗粉=[8.0]', '高品澳粉=[15.0]', '高返=[12.5228]', '过筛镍矿=[8.410955]', '塞拉利昂粉=[12.38867]', 'FMG低品澳粉=[40.0]', '铁泥=[0.6015498]', '干渣粉=[2.504559]', '重力除尘灰=[0.5714713]']
2018-12-06 15:51:25,676 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [56.17565633128305, 5.199951920097999, 2.6982416318639566, 0.7128133123365088, 3.000000273920421, 0.048518530915677816, 0.06764917045197939, 0.1319273653048831]
2018-12-06 15:51:25,676 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=447.75303320145434, wet_price=492.506582248679, obj_price=530.7026698741009)
2018-12-06 15:51:25,751 __main__ mainTask INFO = gekko_optimization task run successfully, runtime  is 0.6100001335144043 s:
2018-12-06 15:52:55,935 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 462.58579900551536), (1, 1, 1)]
2018-12-06 15:52:55,935 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.681366649542781, 'sio2': 91.33144946306368, 'cost': 0.9871838873935551}
2018-12-06 15:52:55,976 __main__ steamToLogger INFO =  ----------------------------------------------------------------
2018-12-06 15:52:55,976 __main__ steamToLogger INFO =  APMonitor, Version 0.8.5
2018-12-06 15:52:55,976 __main__ steamToLogger INFO =  APMonitor Optimization Suite
2018-12-06 15:52:55,976 __main__ steamToLogger INFO =  ----------------------------------------------------------------
2018-12-06 15:52:56,034 __main__ steamToLogger INFO =  --------- APM Model Size ------------
2018-12-06 15:52:56,035 __main__ steamToLogger INFO =  Each time step contains
2018-12-06 15:52:56,035 __main__ steamToLogger INFO =    Objects      :  0
2018-12-06 15:52:56,035 __main__ steamToLogger INFO =    Constants    :  0
2018-12-06 15:52:56,035 __main__ steamToLogger INFO =    Variables    :  43
2018-12-06 15:52:56,035 __main__ steamToLogger INFO =    Intermediates:  4
2018-12-06 15:52:56,035 __main__ steamToLogger INFO =    Connections  :  0
2018-12-06 15:52:56,035 __main__ steamToLogger INFO =    Equations    :  40
2018-12-06 15:52:56,036 __main__ steamToLogger INFO =    Residuals    :  36
2018-12-06 15:52:56,133 __main__ steamToLogger INFO =  Number of state variables:    43
2018-12-06 15:52:56,133 __main__ steamToLogger INFO =  Number of total equations: -  35
2018-12-06 15:52:56,133 __main__ steamToLogger INFO =  Number of slack variables: -  34
2018-12-06 15:52:56,133 __main__ steamToLogger INFO =  ---------------------------------------
2018-12-06 15:52:56,134 __main__ steamToLogger INFO =  Degrees of freedom       :    -26
2018-12-06 15:52:56,134 __main__ steamToLogger INFO =  * Warning: DOF <= 0
2018-12-06 15:52:56,134 __main__ steamToLogger INFO =  ----------------------------------------------
2018-12-06 15:52:56,134 __main__ steamToLogger INFO =  Steady State Optimization with APOPT Solver
2018-12-06 15:52:56,134 __main__ steamToLogger INFO =  ----------------------------------------------
2018-12-06 15:52:56,160 __main__ steamToLogger INFO =  Iter    Objective  Convergence
2018-12-06 15:52:56,160 __main__ steamToLogger INFO =     0  2.13046E+03  1.00000E+02
2018-12-06 15:52:56,161 __main__ steamToLogger INFO =     1  5.66915E+02  1.00000E-10
2018-12-06 15:52:56,162 __main__ steamToLogger INFO =     2  5.66915E+02  1.00000E-10
2018-12-06 15:52:56,164 __main__ steamToLogger INFO =     3  5.66915E+02  1.00000E-10
2018-12-06 15:52:56,165 __main__ steamToLogger INFO =  No feasible solution
2018-12-06 15:52:56,169 __main__ steamToLogger INFO =  ---------------------------------------------------
2018-12-06 15:52:56,169 __main__ steamToLogger INFO =  Solver         :  APOPT (v1.0)
2018-12-06 15:52:56,169 __main__ steamToLogger INFO =  Solution time  :  0.035 sec
2018-12-06 15:52:56,169 __main__ steamToLogger INFO =  Objective      :  566.9145635585651
2018-12-06 15:52:56,169 __main__ steamToLogger INFO =  Unsuccessful with error code  0
2018-12-06 15:52:56,169 __main__ steamToLogger INFO =  ---------------------------------------------------
2018-12-06 15:52:56,169 __main__ steamToLogger INFO =  Creating file: infeasibilities.txt
2018-12-06 15:52:56,169 __main__ steamToLogger INFO =  Use command apm_get(server,app,'infeasibilities.txt') to retrieve file
2018-12-06 15:52:56,195 __main__ steamToLogger INFO =  @error: Solution Not Found
2018-12-06 15:52:56,197 __main__ steamToLogger INFO = Exception(' @error: Solution Not Found\n')
2018-12-06 15:52:56,198 __main__ mainTask ERROR = Traceback (most recent call last):
  File "C:/Users/sun/PycharmProjects/optimizationproblem/gekkoSolution/mainTask.py", line 43, in <module>
    lp.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\gekkoSolution\gekkoProblem.py", line 46, in solve
    self.prob.solve()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\gekko\gekko.py", line 682, in solve
    raise Exception(apm_error)
Exception:  @error: Solution Not Found


2018-12-06 15:56:54,712 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 462.58579900551536), (1, 1, 1)]
2018-12-06 15:56:54,712 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.681366649542781, 'sio2': 91.33144946306368, 'cost': 0.9871838873935551}
2018-12-06 15:56:55,088 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [8.0, 15.0, 12.52, 8.433883, 12.37612, 40.0, 0.6, 2.5, 0.57]
2018-12-06 15:56:55,088 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['巴西粗粉=[8.0]', '高品澳粉=[15.0]', '高返=[12.52]', '过筛镍矿=[8.433883]', '塞拉利昂粉=[12.37612]', 'FMG低品澳粉=[40.0]', '铁泥=[0.6]', '干渣粉=[2.5]', '重力除尘灰=[0.57]']
2018-12-06 15:56:55,090 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [56.17628771644015, 5.200008629899621, 2.6960324727599048, 0.7124951765611619, 3.000000213744865, 0.04849029522367876, 0.06761574284324438, 0.13229050859499458]
2018-12-06 15:56:55,090 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=447.7335803922409, wet_price=492.51339138082744, obj_price=530.7152824694634)
2018-12-06 15:56:55,165 __main__ mainTask INFO = gekko_optimization task run successfully, runtime  is 0.6959998607635498 s:
2018-12-06 15:59:25,407 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 462.58579900551536), (1, 1, 2)]
2018-12-06 15:59:25,407 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.606278691866425, 'sio2': 90.43865364629181, 'cost': 1.9550676618417662}
2018-12-06 15:59:25,658 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [8.0, 15.0, 12.52, 8.433883, 12.37612, 40.0, 0.6, 2.5, 0.57]
2018-12-06 15:59:25,658 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['巴西粗粉=[8.0]', '高品澳粉=[15.0]', '高返=[12.52]', '过筛镍矿=[8.433883]', '塞拉利昂粉=[12.37612]', 'FMG低品澳粉=[40.0]', '铁泥=[0.6]', '干渣粉=[2.5]', '重力除尘灰=[0.57]']
2018-12-06 15:59:25,660 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [56.17628771644015, 5.200008629899621, 2.6960324727599048, 0.7124951765611619, 3.000000213744865, 0.04849029522367876, 0.06761574284324438, 0.13229050859499458]
2018-12-06 15:59:25,661 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=447.7335803922409, wet_price=492.51339138082744, obj_price=530.7152824694634)
2018-12-06 15:59:25,739 __main__ mainTask INFO = gekko_optimization task run successfully, runtime  is 0.5780000686645508 s:
2018-12-06 16:00:22,124 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 462.58579900551536), (1, 1, 10)]
2018-12-06 16:00:22,125 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.0545906128757885, 'sio2': 83.87908238709313, 'cost': 9.066327000031086}
2018-12-06 16:00:22,399 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [8.0, 13.92253, 12.52, 11.4245, 10.46297, 40.0, 0.6, 2.5, 0.57]
2018-12-06 16:00:22,399 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['巴西粗粉=[8.0]', '高品澳粉=[13.92253]', '高返=[12.52]', '过筛镍矿=[11.4245]', '塞拉利昂粉=[10.46297]', 'FMG低品澳粉=[40.0]', '铁泥=[0.6]', '干渣粉=[2.5]', '重力除尘灰=[0.57]']
2018-12-06 16:00:22,401 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [55.92730601670477, 5.274456729135386, 2.71542377277481, 0.7371734468589786, 3.0000000160513047, 0.048839852213908685, 0.06698691230142581, 0.18000007092748546]
2018-12-06 16:00:22,402 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=442.1051540669765, wet_price=489.82784113943256, obj_price=528.4813167642618)
2018-12-06 16:00:22,476 __main__ mainTask INFO = gekko_optimization task run successfully, runtime  is 0.5959999561309814 s:
2018-12-06 16:02:46,908 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 462.58579900551536), (1, 1, 1)]
2018-12-06 16:02:46,908 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.681366649542781, 'sio2': 91.33144946306368, 'cost': 0.9871838873935551}
2018-12-06 16:02:47,182 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [8.0, 15.0, 12.52, 8.433883, 12.37612, 40.0, 0.6, 2.5, 0.57]
2018-12-06 16:02:47,182 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['巴西粗粉=[8.0]', '高品澳粉=[15.0]', '高返=[12.52]', '过筛镍矿=[8.433883]', '塞拉利昂粉=[12.37612]', 'FMG低品澳粉=[40.0]', '铁泥=[0.6]', '干渣粉=[2.5]', '重力除尘灰=[0.57]']
2018-12-06 16:02:47,184 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [56.17628771644015, 5.200008629899621, 2.6960324727599048, 0.7124951765611619, 3.000000213744865, 0.04849029522367876, 0.06761574284324438, 0.13229050859499458]
2018-12-06 16:02:47,184 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=447.7335803922409, wet_price=492.51339138082744, obj_price=530.7152824694634)
2018-12-06 16:02:47,249 __main__ mainTask ERROR = Traceback (most recent call last):
  File "C:/Users/sun/PycharmProjects/optimizationproblem/gekkoSolution/mainTask.py", line 49, in <module>
    lp.write_to_excel()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\gekkoSolution\gekkoProblem.py", line 91, in write_to_excel
    self.data.write_to_excel(excel_file, prices)
  File "C:\Users\sun\PycharmProjects\optimizationproblem\utils\excelParse.py", line 136, in write_to_excel
    writer.save()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\pandas\io\excel.py", line 1732, in save
    return self.book.close()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\xlsxwriter\workbook.py", line 306, in close
    self._store_workbook()
  File "C:\Users\sun\PycharmProjects\optimizationproblem\venv\lib\site-packages\xlsxwriter\workbook.py", line 655, in _store_workbook
    allowZip64=self.allow_zip64)
  File "C:\Users\sun\AppData\Local\Programs\Python\Python37-32\lib\zipfile.py", line 1182, in __init__
    self.fp = io.open(file, filemode)
PermissionError: [Errno 13] Permission denied: '../data/result.xlsx'

2018-12-06 16:03:01,201 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 462.58579900551536), (1, 1, 1)]
2018-12-06 16:03:01,202 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.681366649542781, 'sio2': 91.33144946306368, 'cost': 0.9871838873935551}
2018-12-06 16:03:01,469 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [8.0, 15.0, 12.52, 8.433883, 12.37612, 40.0, 0.6, 2.5, 0.57]
2018-12-06 16:03:01,470 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['巴西粗粉=[8.0]', '高品澳粉=[15.0]', '高返=[12.52]', '过筛镍矿=[8.433883]', '塞拉利昂粉=[12.37612]', 'FMG低品澳粉=[40.0]', '铁泥=[0.6]', '干渣粉=[2.5]', '重力除尘灰=[0.57]']
2018-12-06 16:03:01,472 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [56.17628771644015, 5.200008629899621, 2.6960324727599048, 0.7124951765611619, 3.000000213744865, 0.04849029522367876, 0.06761574284324438, 0.13229050859499458]
2018-12-06 16:03:01,472 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=447.7335803922409, wet_price=492.51339138082744, obj_price=530.7152824694634)
2018-12-06 16:03:01,544 __main__ mainTask INFO = gekko_optimization task run successfully, runtime  is 0.5920000076293945 s:
2018-12-06 16:05:25,236 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 462.58579900551536), (1, 1, 1)]
2018-12-06 16:05:25,236 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.681366649542781, 'sio2': 91.33144946306368, 'cost': 0.9871838873935551}
2018-12-06 16:05:28,669 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [8.0, 15.0, 12.52, 8.433883, 12.37612, 40.0, 0.6, 2.5, 0.57]
2018-12-06 16:05:28,670 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['巴西粗粉=[8.0]', '高品澳粉=[15.0]', '高返=[12.52]', '过筛镍矿=[8.433883]', '塞拉利昂粉=[12.37612]', 'FMG低品澳粉=[40.0]', '铁泥=[0.6]', '干渣粉=[2.5]', '重力除尘灰=[0.57]']
2018-12-06 16:05:28,672 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [56.17628771644015, 5.200008629899621, 2.6960324727599048, 0.7124951765611619, 3.000000213744865, 0.04849029522367876, 0.06761574284324438, 0.13229050859499458]
2018-12-06 16:05:28,673 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=447.7335803922409, wet_price=492.51339138082744, obj_price=530.7152824694634)
2018-12-06 16:05:28,765 __main__ mainTask INFO = gekko_optimization task run successfully, runtime  is 3.7880001068115234 s:
2018-12-06 16:06:55,409 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 462.58579900551536), (1, 1, 1)]
2018-12-06 16:06:55,410 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.681366649542781, 'sio2': 91.33144946306368, 'cost': 0.9871838873935551}
2018-12-06 16:06:55,671 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [10.55337, 10.93763, 12.52, 11.01559, 11.30341, 40.0, 0.6, 2.5, 0.57]
2018-12-06 16:06:55,671 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['巴西粗粉=[10.55337]', '高品澳粉=[10.93763]', '高返=[12.52]', '过筛镍矿=[11.01559]', '塞拉利昂粉=[11.30341]', 'FMG低品澳粉=[40.0]', '铁泥=[0.6]', '干渣粉=[2.5]', '重力除尘灰=[0.57]']
2018-12-06 16:06:55,674 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [55.89999998028605, 5.500000481629607, 2.7092109916247327, 0.7316487074775189, 2.9999998553233267, 0.048785775853162544, 0.06791330610261535, 0.17341486907371684]
2018-12-06 16:06:55,674 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=441.59795229739893, wet_price=488.7241659081242, obj_price=526.8035035940517)
2018-12-06 16:06:55,748 __main__ mainTask INFO = gekko_optimization task run successfully, runtime  is 0.5880000591278076 s:
2018-12-06 16:08:40,696 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 462.58579900551536), (1, 1, 1)]
2018-12-06 16:08:40,696 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.681366649542781, 'sio2': 91.33144946306368, 'cost': 0.9871838873935551}
2018-12-06 16:08:40,923 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [14.19809, 15.0, 12.52, 8.0, 14.42364, 32.18827, 0.6, 2.5, 0.57]
2018-12-06 16:08:40,923 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['巴西粗粉=[14.19809]', '高品澳粉=[15.0]', '高返=[12.52]', '过筛镍矿=[8.0]', '塞拉利昂粉=[14.42364]', 'FMG低品澳粉=[32.18827]', '铁泥=[0.6]', '干渣粉=[2.5]', '重力除尘灰=[0.57]']
2018-12-06 16:08:40,925 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [56.33942678844098, 5.499999751210448, 2.691090003533022, 0.7087805944039807, 3.000000171523407, 0.04840401581646199, 0.06832948603977701, 0.12533224226264514]
2018-12-06 16:08:40,925 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=454.9685878455033, wet_price=499.58150756742737, obj_price=535.9669948929379)
2018-12-06 16:08:41,003 __main__ mainTask INFO = gekko_optimization task run successfully, runtime  is 0.5550000667572021 s:
2018-12-06 16:10:16,560 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 462.58579900551536), (1, 1, 1)]
2018-12-06 16:10:16,560 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.681366649542781, 'sio2': 91.33144946306368, 'cost': 0.9871838873935551}
2018-12-06 16:10:16,800 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [8.0, 15.0, 12.52, 8.433883, 12.37612, 40.0, 0.6, 2.5, 0.57]
2018-12-06 16:10:16,801 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['巴西粗粉=[8.0]', '高品澳粉=[15.0]', '高返=[12.52]', '过筛镍矿=[8.433883]', '塞拉利昂粉=[12.37612]', 'FMG低品澳粉=[40.0]', '铁泥=[0.6]', '干渣粉=[2.5]', '重力除尘灰=[0.57]']
2018-12-06 16:10:16,804 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [56.17628771644015, 5.200008629899621, 2.6960324727599048, 0.7124951765611619, 3.000000213744865, 0.04849029522367876, 0.06761574284324438, 0.13229050859499458]
2018-12-06 16:10:16,804 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=447.7335803922409, wet_price=492.51339138082744, obj_price=530.7152824694634)
2018-12-06 16:10:16,879 __main__ mainTask INFO = gekko_optimization task run successfully, runtime  is 0.5740001201629639 s:
2018-12-06 16:11:23,431 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 462.58579900551536), (1, 1, 1)]
2018-12-06 16:11:23,432 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.681366649542781, 'sio2': 91.33144946306368, 'cost': 0.9871838873935551}
2018-12-06 16:11:23,695 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [11.3891, 10.9989, 12.52, 8.0, 13.422, 40.0, 0.6, 2.5, 0.57]
2018-12-06 16:11:23,695 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['巴西粗粉=[11.3891]', '高品澳粉=[10.9989]', '高返=[12.52]', '过筛镍矿=[8.0]', '塞拉利昂粉=[13.422]', 'FMG低品澳粉=[40.0]', '铁泥=[0.6]', '干渣粉=[2.5]', '重力除尘灰=[0.57]']
2018-12-06 16:11:23,697 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [56.13095383799565, 5.500000029321443, 2.6885742659689833, 0.706142159684182, 3.000000069433911, 0.04843216803966613, 0.06881282069185721, 0.12540513665372693]
2018-12-06 16:11:23,698 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=446.8554622617609, wet_price=490.9582119274614, obj_price=528.4213179739548)
2018-12-06 16:11:23,771 __main__ mainTask INFO = gekko_optimization task run successfully, runtime  is 0.5870001316070557 s:
2018-12-06 16:12:44,758 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 462.58579900551536), (1, 1, 1)]
2018-12-06 16:12:44,758 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.681366649542781, 'sio2': 91.33144946306368, 'cost': 0.9871838873935551}
2018-12-06 16:12:45,017 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [8.0, 15.0, 12.52, 8.433883, 12.37612, 40.0, 0.6, 2.5, 0.57]
2018-12-06 16:12:45,017 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['巴西粗粉=[8.0]', '高品澳粉=[15.0]', '高返=[12.52]', '过筛镍矿=[8.433883]', '塞拉利昂粉=[12.37612]', 'FMG低品澳粉=[40.0]', '铁泥=[0.6]', '干渣粉=[2.5]', '重力除尘灰=[0.57]']
2018-12-06 16:12:45,019 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [56.17628771644015, 5.200008629899621, 2.6960324727599048, 0.7124951765611619, 3.000000213744865, 0.04849029522367876, 0.06761574284324438, 0.13229050859499458]
2018-12-06 16:12:45,019 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=447.7335803922409, wet_price=492.51339138082744, obj_price=530.7152824694634)
2018-12-06 16:12:45,097 __main__ mainTask INFO = gekko_optimization task run successfully, runtime  is 0.5899999141693115 s:
2018-12-06 16:13:46,816 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 462.58579900551536), (1, 1, 1)]
2018-12-06 16:13:46,816 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.681366649542781, 'sio2': 91.33144946306368, 'cost': 0.9871838873935551}
2018-12-06 16:13:47,077 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [8.0, 15.0, 12.52, 8.433883, 12.37612, 40.0, 0.6, 2.5, 0.57]
2018-12-06 16:13:47,077 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['巴西粗粉=[8.0]', '高品澳粉=[15.0]', '高返=[12.52]', '过筛镍矿=[8.433883]', '塞拉利昂粉=[12.37612]', 'FMG低品澳粉=[40.0]', '铁泥=[0.6]', '干渣粉=[2.5]', '重力除尘灰=[0.57]']
2018-12-06 16:13:47,079 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [56.17628771644015, 5.200008629899621, 2.6960324727599048, 0.7124951765611619, 3.000000213744865, 0.04849029522367876, 0.06761574284324438, 0.13229050859499458]
2018-12-06 16:13:47,080 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=447.7335803922409, wet_price=492.51339138082744, obj_price=530.7152824694634)
2018-12-06 16:13:47,153 __main__ mainTask INFO = gekko_optimization task run successfully, runtime  is 0.5830001831054688 s:
2018-12-06 16:15:19,509 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 462.58579900551536), (1, 1, 1)]
2018-12-06 16:15:19,510 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.681366649542781, 'sio2': 91.33144946306368, 'cost': 0.9871838873935551}
2018-12-06 16:15:19,771 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [8.0, 15.0, 12.52, 8.433883, 12.37612, 40.0, 0.6, 2.5, 0.57]
2018-12-06 16:15:19,771 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['巴西粗粉=[8.0]', '高品澳粉=[15.0]', '高返=[12.52]', '过筛镍矿=[8.433883]', '塞拉利昂粉=[12.37612]', 'FMG低品澳粉=[40.0]', '铁泥=[0.6]', '干渣粉=[2.5]', '重力除尘灰=[0.57]']
2018-12-06 16:15:19,774 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [56.17628771644015, 5.200008629899621, 2.6960324727599048, 0.7124951765611619, 3.000000213744865, 0.04849029522367876, 0.06761574284324438, 0.13229050859499458]
2018-12-06 16:15:19,774 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=447.7335803922409, wet_price=492.51339138082744, obj_price=530.7152824694634)
2018-12-06 16:15:19,852 __main__ mainTask INFO = gekko_optimization task run successfully, runtime  is 0.5869998931884766 s:
2018-12-06 16:16:21,852 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 462.58579900551536), (1, 1, 10)]
2018-12-06 16:16:21,852 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.0545906128757885, 'sio2': 83.87908238709313, 'cost': 9.066327000031086}
2018-12-06 16:16:22,107 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [8.0, 13.92253, 12.52, 11.4245, 10.46297, 40.0, 0.6, 2.5, 0.57]
2018-12-06 16:16:22,107 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['巴西粗粉=[8.0]', '高品澳粉=[13.92253]', '高返=[12.52]', '过筛镍矿=[11.4245]', '塞拉利昂粉=[10.46297]', 'FMG低品澳粉=[40.0]', '铁泥=[0.6]', '干渣粉=[2.5]', '重力除尘灰=[0.57]']
2018-12-06 16:16:22,110 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [55.92730601670477, 5.274456729135386, 2.71542377277481, 0.7371734468589786, 3.0000000160513047, 0.048839852213908685, 0.06698691230142581, 0.18000007092748546]
2018-12-06 16:16:22,110 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=442.1051540669765, wet_price=489.82784113943256, obj_price=528.4813167642618)
2018-12-06 16:16:22,196 __main__ mainTask INFO = gekko_optimization task run successfully, runtime  is 0.5900001525878906 s:
2018-12-06 16:54:51,247 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 462.58579900551536), (1, 1, 5)]
2018-12-06 16:54:51,247 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.389571993282647, 'sio2': 87.86201100013069, 'cost': 4.748417006586659}
2018-12-06 16:54:51,561 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [8.0, 13.92253, 12.52, 11.4245, 10.46297, 40.0, 0.6, 2.5, 0.57]
2018-12-06 16:54:51,561 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['巴西粗粉=[8.0]', '高品澳粉=[13.92253]', '高返=[12.52]', '过筛镍矿=[11.4245]', '塞拉利昂粉=[10.46297]', 'FMG低品澳粉=[40.0]', '铁泥=[0.6]', '干渣粉=[2.5]', '重力除尘灰=[0.57]']
2018-12-06 16:54:51,564 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [55.92730601670477, 5.274456729135386, 2.71542377277481, 0.7371734468589786, 3.0000000160513047, 0.048839852213908685, 0.06698691230142581, 0.18000007092748546]
2018-12-06 16:54:51,564 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=442.1051540669765, wet_price=489.82784113943256, obj_price=528.4813167642618)
2018-12-06 16:54:51,646 __main__ mainTask INFO = gekko_optimization task run successfully, runtime  is 0.6499998569488525 s:
2018-12-06 16:57:09,110 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 462.58579900551536), (1, 1, 2)]
2018-12-06 16:57:09,111 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.606278691866425, 'sio2': 90.43865364629181, 'cost': 1.9550676618417662}
2018-12-06 16:57:09,405 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [8.0, 15.0, 12.52, 8.433883, 12.37612, 40.0, 0.6, 2.5, 0.57]
2018-12-06 16:57:09,405 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['巴西粗粉=[8.0]', '高品澳粉=[15.0]', '高返=[12.52]', '过筛镍矿=[8.433883]', '塞拉利昂粉=[12.37612]', 'FMG低品澳粉=[40.0]', '铁泥=[0.6]', '干渣粉=[2.5]', '重力除尘灰=[0.57]']
2018-12-06 16:57:09,407 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [56.17628771644015, 5.200008629899621, 2.6960324727599048, 0.7124951765611619, 3.000000213744865, 0.04849029522367876, 0.06761574284324438, 0.13229050859499458]
2018-12-06 16:57:09,407 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=447.7335803922409, wet_price=492.51339138082744, obj_price=530.7152824694634)
2018-12-06 16:57:09,480 __main__ mainTask INFO = gekko_optimization task run successfully, runtime  is 0.6180000305175781 s:
2018-12-06 17:00:04,767 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 462.58579900551536), (1, 1, 5)]
2018-12-06 17:00:04,767 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 7.389571993282647, 'sio2': 87.86201100013069, 'cost': 4.748417006586659}
2018-12-06 17:00:05,015 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [8.0, 13.92253, 12.52, 11.4245, 10.46297, 40.0, 0.6, 2.5, 0.57]
2018-12-06 17:00:05,015 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['巴西粗粉=[8.0]', '高品澳粉=[13.92253]', '高返=[12.52]', '过筛镍矿=[11.4245]', '塞拉利昂粉=[10.46297]', 'FMG低品澳粉=[40.0]', '铁泥=[0.6]', '干渣粉=[2.5]', '重力除尘灰=[0.57]']
2018-12-06 17:00:05,017 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [55.92730601670477, 5.274456729135386, 2.71542377277481, 0.7371734468589786, 3.0000000160513047, 0.048839852213908685, 0.06698691230142581, 0.18000007092748546]
2018-12-06 17:00:05,017 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=442.1051540669765, wet_price=489.82784113943256, obj_price=528.4813167642618)
2018-12-06 17:00:05,105 __main__ mainTask INFO = gekko_optimization task run successfully, runtime  is 0.5910000801086426 s:
2018-12-06 17:00:48,258 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 462.58579900551536), (5, 1, 1)]
2018-12-06 17:00:48,258 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 29.379763750065838, 'sio2': 69.86507819765656, 'cost': 0.7551580522776011}
2018-12-06 17:00:48,517 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [8.127432, 15.0, 12.52, 8.0, 12.68257, 40.0, 0.6, 2.5, 0.57]
2018-12-06 17:00:48,517 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['巴西粗粉=[8.127432]', '高品澳粉=[15.0]', '高返=[12.52]', '过筛镍矿=[8.0]', '塞拉利昂粉=[12.68257]', 'FMG低品澳粉=[40.0]', '铁泥=[0.6]', '干渣粉=[2.5]', '重力除尘灰=[0.57]']
2018-12-06 17:00:48,519 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [56.20906162386616, 5.200980450411718, 2.6930666398617804, 0.7088387575042536, 3.000000126002062, 0.04843970172232737, 0.06774784112454237, 0.12542464357530153]
2018-12-06 17:00:48,519 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=448.486433638214, wet_price=492.826801186535, obj_price=530.9378359227507)
2018-12-06 17:00:48,596 __main__ mainTask INFO = gekko_optimization task run successfully, runtime  is 0.5940001010894775 s:
2018-12-06 17:04:20,570 gekkoSolution.gekkoUtils gekkoUtils INFO = name_scalar_weight is [('tfe', 'sio2', 'cost'), (59.45, 5.0, 462.58579900551536), (1, 5, 1)]
2018-12-06 17:04:20,570 gekkoSolution.gekkoUtils gekkoUtils INFO = name_normalization_weight is {'tfe': 1.650750223820964, 'sio2': 98.13710080615631, 'cost': 0.2121489700227184}
2018-12-06 17:04:20,855 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization result is: [8.0, 15.0, 12.52, 8.433883, 12.37612, 40.0, 0.6, 2.5, 0.57]
2018-12-06 17:04:20,855 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization name_result is: ['巴西粗粉=[8.0]', '高品澳粉=[15.0]', '高返=[12.52]', '过筛镍矿=[8.433883]', '塞拉利昂粉=[12.37612]', 'FMG低品澳粉=[40.0]', '铁泥=[0.6]', '干渣粉=[2.5]', '重力除尘灰=[0.57]']
2018-12-06 17:04:20,857 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization ingredient_result_list is: [56.17628771644015, 5.200008629899621, 2.6960324727599048, 0.7124951765611619, 3.000000213744865, 0.04849029522367876, 0.06761574284324438, 0.13229050859499458]
2018-12-06 17:04:20,857 gekkoSolution.gekkoProblem gekkoProblem INFO = optimization prices is: Prices(dry_price=447.7335803922409, wet_price=492.51339138082744, obj_price=530.7152824694634)
2018-12-06 17:04:20,940 __main__ mainTask INFO = gekko_optimization task run successfully, runtime  is 0.6289999485015869 s:
